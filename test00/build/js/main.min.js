!function(t,e){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=t.document?e(t,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return e(t)}:e(t)}("undefined"!=typeof window?window:this,function(k,t){"use strict";var e=[],C=k.document,s=Object.getPrototypeOf,a=e.slice,g=e.concat,l=e.push,n=e.indexOf,i={},o=i.toString,m=i.hasOwnProperty,r=m.toString,h=r.call(Object),v={},_=function(t){return"function"==typeof t&&"number"!=typeof t.nodeType},b=function(t){return null!=t&&t===t.window},u={type:!0,src:!0,noModule:!0};function y(t,e,i){var s,n=(e=e||C).createElement("script");if(n.text=t,i)for(s in u)i[s]&&(n[s]=i[s]);e.head.appendChild(n).parentNode.removeChild(n)}function w(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?i[o.call(t)]||"object":typeof t}var D=function(t,e){return new D.fn.init(t,e)},c=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;function d(t){var e=!!t&&"length"in t&&t.length,i=w(t);return!_(t)&&!b(t)&&("array"===i||0===e||"number"==typeof e&&0<e&&e-1 in t)}D.fn=D.prototype={jquery:"3.3.1",constructor:D,length:0,toArray:function(){return a.call(this)},get:function(t){return null==t?a.call(this):t<0?this[t+this.length]:this[t]},pushStack:function(t){var e=D.merge(this.constructor(),t);return e.prevObject=this,e},each:function(t){return D.each(this,t)},map:function(i){return this.pushStack(D.map(this,function(t,e){return i.call(t,e,t)}))},slice:function(){return this.pushStack(a.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(t){var e=this.length,i=+t+(t<0?e:0);return this.pushStack(0<=i&&i<e?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:l,sort:e.sort,splice:e.splice},D.extend=D.fn.extend=function(){var t,e,i,s,n,o,r=arguments[0]||{},a=1,l=arguments.length,h=!1;for("boolean"==typeof r&&(h=r,r=arguments[a]||{},a++),"object"==typeof r||_(r)||(r={}),a===l&&(r=this,a--);a<l;a++)if(null!=(t=arguments[a]))for(e in t)i=r[e],r!==(s=t[e])&&(h&&s&&(D.isPlainObject(s)||(n=Array.isArray(s)))?(o=n?(n=!1,i&&Array.isArray(i)?i:[]):i&&D.isPlainObject(i)?i:{},r[e]=D.extend(h,o,s)):void 0!==s&&(r[e]=s));return r},D.extend({expando:"jQuery"+("3.3.1"+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isPlainObject:function(t){var e,i;return!(!t||"[object Object]"!==o.call(t)||(e=s(t))&&("function"!=typeof(i=m.call(e,"constructor")&&e.constructor)||r.call(i)!==h))},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},globalEval:function(t){y(t)},each:function(t,e){var i,s=0;if(d(t))for(i=t.length;s<i&&!1!==e.call(t[s],s,t[s]);s++);else for(s in t)if(!1===e.call(t[s],s,t[s]))break;return t},trim:function(t){return null==t?"":(t+"").replace(c,"")},makeArray:function(t,e){var i=e||[];return null!=t&&(d(Object(t))?D.merge(i,"string"==typeof t?[t]:t):l.call(i,t)),i},inArray:function(t,e,i){return null==e?-1:n.call(e,t,i)},merge:function(t,e){for(var i=+e.length,s=0,n=t.length;s<i;s++)t[n++]=e[s];return t.length=n,t},grep:function(t,e,i){for(var s=[],n=0,o=t.length,r=!i;n<o;n++)!e(t[n],n)!==r&&s.push(t[n]);return s},map:function(t,e,i){var s,n,o=0,r=[];if(d(t))for(s=t.length;o<s;o++)null!=(n=e(t[o],o,i))&&r.push(n);else for(o in t)null!=(n=e(t[o],o,i))&&r.push(n);return g.apply([],r)},guid:1,support:v}),"function"==typeof Symbol&&(D.fn[Symbol.iterator]=e[Symbol.iterator]),D.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(t,e){i["[object "+e+"]"]=e.toLowerCase()});var p=function(i){var t,p,y,o,n,f,c,g,w,l,h,x,k,r,C,m,a,u,v,D="sizzle"+1*new Date,_=i.document,T=0,s=0,d=rt(),b=rt(),S=rt(),I=function(t,e){return t===e&&(h=!0),0},P={}.hasOwnProperty,e=[],M=e.pop,A=e.push,E=e.push,N=e.slice,H=function(t,e){for(var i=0,s=t.length;i<s;i++)if(t[i]===e)return i;return-1},O="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",z="[\\x20\\t\\r\\n\\f]",W="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",L="\\["+z+"*("+W+")(?:"+z+"*([*^$|!~]?=)"+z+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+W+"))|)"+z+"*\\]",F=":("+W+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+L+")*)|.*)\\)|)",R=new RegExp(z+"+","g"),j=new RegExp("^"+z+"+|((?:^|[^\\\\])(?:\\\\.)*)"+z+"+$","g"),q=new RegExp("^"+z+"*,"+z+"*"),B=new RegExp("^"+z+"*([>+~]|"+z+")"+z+"*"),Y=new RegExp("="+z+"*([^\\]'\"]*?)"+z+"*\\]","g"),$=new RegExp(F),U=new RegExp("^"+W+"$"),K={ID:new RegExp("^#("+W+")"),CLASS:new RegExp("^\\.("+W+")"),TAG:new RegExp("^("+W+"|[*])"),ATTR:new RegExp("^"+L),PSEUDO:new RegExp("^"+F),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+z+"*(even|odd|(([+-]|)(\\d*)n|)"+z+"*(?:([+-]|)"+z+"*(\\d+)|))"+z+"*\\)|)","i"),bool:new RegExp("^(?:"+O+")$","i"),needsContext:new RegExp("^"+z+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+z+"*((?:-\\d)?\\d*)"+z+"*\\)|)(?=[^-]|$)","i")},V=/^(?:input|select|textarea|button)$/i,X=/^h\d$/i,G=/^[^{]+\{\s*\[native \w/,Q=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,J=/[+~]/,Z=new RegExp("\\\\([\\da-f]{1,6}"+z+"?|("+z+")|.)","ig"),tt=function(t,e,i){var s="0x"+e-65536;return s!=s||i?e:s<0?String.fromCharCode(s+65536):String.fromCharCode(s>>10|55296,1023&s|56320)},et=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,it=function(t,e){return e?"\0"===t?"ï¿½":t.slice(0,-1)+"\\"+t.charCodeAt(t.length-1).toString(16)+" ":"\\"+t},st=function(){x()},nt=_t(function(t){return!0===t.disabled&&("form"in t||"label"in t)},{dir:"parentNode",next:"legend"});try{E.apply(e=N.call(_.childNodes),_.childNodes),e[_.childNodes.length].nodeType}catch(i){E={apply:e.length?function(t,e){A.apply(t,N.call(e))}:function(t,e){for(var i=t.length,s=0;t[i++]=e[s++];);t.length=i-1}}}function ot(t,e,i,s){var n,o,r,a,l,h,u,c=e&&e.ownerDocument,d=e?e.nodeType:9;if(i=i||[],"string"!=typeof t||!t||1!==d&&9!==d&&11!==d)return i;if(!s&&((e?e.ownerDocument||e:_)!==k&&x(e),e=e||k,C)){if(11!==d&&(l=Q.exec(t)))if(n=l[1]){if(9===d){if(!(r=e.getElementById(n)))return i;if(r.id===n)return i.push(r),i}else if(c&&(r=c.getElementById(n))&&v(e,r)&&r.id===n)return i.push(r),i}else{if(l[2])return E.apply(i,e.getElementsByTagName(t)),i;if((n=l[3])&&p.getElementsByClassName&&e.getElementsByClassName)return E.apply(i,e.getElementsByClassName(n)),i}if(p.qsa&&!S[t+" "]&&(!m||!m.test(t))){if(1!==d)c=e,u=t;else if("object"!==e.nodeName.toLowerCase()){for((a=e.getAttribute("id"))?a=a.replace(et,it):e.setAttribute("id",a=D),o=(h=f(t)).length;o--;)h[o]="#"+a+" "+vt(h[o]);u=h.join(","),c=J.test(t)&&gt(e.parentNode)||e}if(u)try{return E.apply(i,c.querySelectorAll(u)),i}catch(t){}finally{a===D&&e.removeAttribute("id")}}}return g(t.replace(j,"$1"),e,i,s)}function rt(){var s=[];return function t(e,i){return s.push(e+" ")>y.cacheLength&&delete t[s.shift()],t[e+" "]=i}}function at(t){return t[D]=!0,t}function lt(t){var e=k.createElement("fieldset");try{return!!t(e)}catch(t){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function ht(t,e){for(var i=t.split("|"),s=i.length;s--;)y.attrHandle[i[s]]=e}function ut(t,e){var i=e&&t,s=i&&1===t.nodeType&&1===e.nodeType&&t.sourceIndex-e.sourceIndex;if(s)return s;if(i)for(;i=i.nextSibling;)if(i===e)return-1;return t?1:-1}function ct(e){return function(t){return"input"===t.nodeName.toLowerCase()&&t.type===e}}function dt(i){return function(t){var e=t.nodeName.toLowerCase();return("input"===e||"button"===e)&&t.type===i}}function pt(e){return function(t){return"form"in t?t.parentNode&&!1===t.disabled?"label"in t?"label"in t.parentNode?t.parentNode.disabled===e:t.disabled===e:t.isDisabled===e||t.isDisabled!==!e&&nt(t)===e:t.disabled===e:"label"in t&&t.disabled===e}}function ft(r){return at(function(o){return o=+o,at(function(t,e){for(var i,s=r([],t.length,o),n=s.length;n--;)t[i=s[n]]&&(t[i]=!(e[i]=t[i]))})})}function gt(t){return t&&void 0!==t.getElementsByTagName&&t}for(t in p=ot.support={},n=ot.isXML=function(t){var e=t&&(t.ownerDocument||t).documentElement;return!!e&&"HTML"!==e.nodeName},x=ot.setDocument=function(t){var e,i,s=t?t.ownerDocument||t:_;return s!==k&&9===s.nodeType&&s.documentElement&&(r=(k=s).documentElement,C=!n(k),_!==k&&(i=k.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",st,!1):i.attachEvent&&i.attachEvent("onunload",st)),p.attributes=lt(function(t){return t.className="i",!t.getAttribute("className")}),p.getElementsByTagName=lt(function(t){return t.appendChild(k.createComment("")),!t.getElementsByTagName("*").length}),p.getElementsByClassName=G.test(k.getElementsByClassName),p.getById=lt(function(t){return r.appendChild(t).id=D,!k.getElementsByName||!k.getElementsByName(D).length}),p.getById?(y.filter.ID=function(t){var e=t.replace(Z,tt);return function(t){return t.getAttribute("id")===e}},y.find.ID=function(t,e){if(void 0!==e.getElementById&&C){var i=e.getElementById(t);return i?[i]:[]}}):(y.filter.ID=function(t){var i=t.replace(Z,tt);return function(t){var e=void 0!==t.getAttributeNode&&t.getAttributeNode("id");return e&&e.value===i}},y.find.ID=function(t,e){if(void 0!==e.getElementById&&C){var i,s,n,o=e.getElementById(t);if(o){if((i=o.getAttributeNode("id"))&&i.value===t)return[o];for(n=e.getElementsByName(t),s=0;o=n[s++];)if((i=o.getAttributeNode("id"))&&i.value===t)return[o]}return[]}}),y.find.TAG=p.getElementsByTagName?function(t,e){return void 0!==e.getElementsByTagName?e.getElementsByTagName(t):p.qsa?e.querySelectorAll(t):void 0}:function(t,e){var i,s=[],n=0,o=e.getElementsByTagName(t);if("*"!==t)return o;for(;i=o[n++];)1===i.nodeType&&s.push(i);return s},y.find.CLASS=p.getElementsByClassName&&function(t,e){if(void 0!==e.getElementsByClassName&&C)return e.getElementsByClassName(t)},a=[],m=[],(p.qsa=G.test(k.querySelectorAll))&&(lt(function(t){r.appendChild(t).innerHTML="<a id='"+D+"'></a><select id='"+D+"-\r\\' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&m.push("[*^$]="+z+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||m.push("\\["+z+"*(?:value|"+O+")"),t.querySelectorAll("[id~="+D+"-]").length||m.push("~="),t.querySelectorAll(":checked").length||m.push(":checked"),t.querySelectorAll("a#"+D+"+*").length||m.push(".#.+[+~]")}),lt(function(t){t.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var e=k.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&m.push("name"+z+"*[*^$|!~]?="),2!==t.querySelectorAll(":enabled").length&&m.push(":enabled",":disabled"),r.appendChild(t).disabled=!0,2!==t.querySelectorAll(":disabled").length&&m.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),m.push(",.*:")})),(p.matchesSelector=G.test(u=r.matches||r.webkitMatchesSelector||r.mozMatchesSelector||r.oMatchesSelector||r.msMatchesSelector))&&lt(function(t){p.disconnectedMatch=u.call(t,"*"),u.call(t,"[s!='']:x"),a.push("!=",F)}),m=m.length&&new RegExp(m.join("|")),a=a.length&&new RegExp(a.join("|")),e=G.test(r.compareDocumentPosition),v=e||G.test(r.contains)?function(t,e){var i=9===t.nodeType?t.documentElement:t,s=e&&e.parentNode;return t===s||!(!s||1!==s.nodeType||!(i.contains?i.contains(s):t.compareDocumentPosition&&16&t.compareDocumentPosition(s)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},I=e?function(t,e){if(t===e)return h=!0,0;var i=!t.compareDocumentPosition-!e.compareDocumentPosition;return i||(1&(i=(t.ownerDocument||t)===(e.ownerDocument||e)?t.compareDocumentPosition(e):1)||!p.sortDetached&&e.compareDocumentPosition(t)===i?t===k||t.ownerDocument===_&&v(_,t)?-1:e===k||e.ownerDocument===_&&v(_,e)?1:l?H(l,t)-H(l,e):0:4&i?-1:1)}:function(t,e){if(t===e)return h=!0,0;var i,s=0,n=t.parentNode,o=e.parentNode,r=[t],a=[e];if(!n||!o)return t===k?-1:e===k?1:n?-1:o?1:l?H(l,t)-H(l,e):0;if(n===o)return ut(t,e);for(i=t;i=i.parentNode;)r.unshift(i);for(i=e;i=i.parentNode;)a.unshift(i);for(;r[s]===a[s];)s++;return s?ut(r[s],a[s]):r[s]===_?-1:a[s]===_?1:0}),k},ot.matches=function(t,e){return ot(t,null,null,e)},ot.matchesSelector=function(t,e){if((t.ownerDocument||t)!==k&&x(t),e=e.replace(Y,"='$1']"),p.matchesSelector&&C&&!S[e+" "]&&(!a||!a.test(e))&&(!m||!m.test(e)))try{var i=u.call(t,e);if(i||p.disconnectedMatch||t.document&&11!==t.document.nodeType)return i}catch(t){}return 0<ot(e,k,null,[t]).length},ot.contains=function(t,e){return(t.ownerDocument||t)!==k&&x(t),v(t,e)},ot.attr=function(t,e){(t.ownerDocument||t)!==k&&x(t);var i=y.attrHandle[e.toLowerCase()],s=i&&P.call(y.attrHandle,e.toLowerCase())?i(t,e,!C):void 0;return void 0!==s?s:p.attributes||!C?t.getAttribute(e):(s=t.getAttributeNode(e))&&s.specified?s.value:null},ot.escape=function(t){return(t+"").replace(et,it)},ot.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},ot.uniqueSort=function(t){var e,i=[],s=0,n=0;if(h=!p.detectDuplicates,l=!p.sortStable&&t.slice(0),t.sort(I),h){for(;e=t[n++];)e===t[n]&&(s=i.push(n));for(;s--;)t.splice(i[s],1)}return l=null,t},o=ot.getText=function(t){var e,i="",s=0,n=t.nodeType;if(n){if(1===n||9===n||11===n){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)i+=o(t)}else if(3===n||4===n)return t.nodeValue}else for(;e=t[s++];)i+=o(e);return i},(y=ot.selectors={cacheLength:50,createPseudo:at,match:K,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(Z,tt),t[3]=(t[3]||t[4]||t[5]||"").replace(Z,tt),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||ot.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&ot.error(t[0]),t},PSEUDO:function(t){var e,i=!t[6]&&t[2];return K.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":i&&$.test(i)&&(e=f(i,!0))&&(e=i.indexOf(")",i.length-e)-i.length)&&(t[0]=t[0].slice(0,e),t[2]=i.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(Z,tt).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=d[t+" "];return e||(e=new RegExp("(^|"+z+")"+t+"("+z+"|$)"))&&d(t,function(t){return e.test("string"==typeof t.className&&t.className||void 0!==t.getAttribute&&t.getAttribute("class")||"")})},ATTR:function(i,s,n){return function(t){var e=ot.attr(t,i);return null==e?"!="===s:!s||(e+="","="===s?e===n:"!="===s?e!==n:"^="===s?n&&0===e.indexOf(n):"*="===s?n&&-1<e.indexOf(n):"$="===s?n&&e.slice(-n.length)===n:"~="===s?-1<(" "+e.replace(R," ")+" ").indexOf(n):"|="===s&&(e===n||e.slice(0,n.length+1)===n+"-"))}},CHILD:function(f,t,e,g,m){var v="nth"!==f.slice(0,3),_="last"!==f.slice(-4),b="of-type"===t;return 1===g&&0===m?function(t){return!!t.parentNode}:function(t,e,i){var s,n,o,r,a,l,h=v!==_?"nextSibling":"previousSibling",u=t.parentNode,c=b&&t.nodeName.toLowerCase(),d=!i&&!b,p=!1;if(u){if(v){for(;h;){for(r=t;r=r[h];)if(b?r.nodeName.toLowerCase()===c:1===r.nodeType)return!1;l=h="only"===f&&!l&&"nextSibling"}return!0}if(l=[_?u.firstChild:u.lastChild],_&&d){for(p=(a=(s=(n=(o=(r=u)[D]||(r[D]={}))[r.uniqueID]||(o[r.uniqueID]={}))[f]||[])[0]===T&&s[1])&&s[2],r=a&&u.childNodes[a];r=++a&&r&&r[h]||(p=a=0)||l.pop();)if(1===r.nodeType&&++p&&r===t){n[f]=[T,a,p];break}}else if(d&&(p=a=(s=(n=(o=(r=t)[D]||(r[D]={}))[r.uniqueID]||(o[r.uniqueID]={}))[f]||[])[0]===T&&s[1]),!1===p)for(;(r=++a&&r&&r[h]||(p=a=0)||l.pop())&&((b?r.nodeName.toLowerCase()!==c:1!==r.nodeType)||!++p||(d&&((n=(o=r[D]||(r[D]={}))[r.uniqueID]||(o[r.uniqueID]={}))[f]=[T,p]),r!==t)););return(p-=m)===g||p%g==0&&0<=p/g}}},PSEUDO:function(t,o){var e,r=y.pseudos[t]||y.setFilters[t.toLowerCase()]||ot.error("unsupported pseudo: "+t);return r[D]?r(o):1<r.length?(e=[t,t,"",o],y.setFilters.hasOwnProperty(t.toLowerCase())?at(function(t,e){for(var i,s=r(t,o),n=s.length;n--;)t[i=H(t,s[n])]=!(e[i]=s[n])}):function(t){return r(t,0,e)}):r}},pseudos:{not:at(function(t){var s=[],n=[],a=c(t.replace(j,"$1"));return a[D]?at(function(t,e,i,s){for(var n,o=a(t,null,s,[]),r=t.length;r--;)(n=o[r])&&(t[r]=!(e[r]=n))}):function(t,e,i){return s[0]=t,a(s,null,i,n),s[0]=null,!n.pop()}}),has:at(function(e){return function(t){return 0<ot(e,t).length}}),contains:at(function(e){return e=e.replace(Z,tt),function(t){return-1<(t.textContent||t.innerText||o(t)).indexOf(e)}}),lang:at(function(i){return U.test(i||"")||ot.error("unsupported lang: "+i),i=i.replace(Z,tt).toLowerCase(),function(t){var e;do{if(e=C?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return(e=e.toLowerCase())===i||0===e.indexOf(i+"-")}while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var e=i.location&&i.location.hash;return e&&e.slice(1)===t.id},root:function(t){return t===r},focus:function(t){return t===k.activeElement&&(!k.hasFocus||k.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:pt(!1),disabled:pt(!0),checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,!0===t.selected},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!y.pseudos.empty(t)},header:function(t){return X.test(t.nodeName)},input:function(t){return V.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:ft(function(){return[0]}),last:ft(function(t,e){return[e-1]}),eq:ft(function(t,e,i){return[i<0?i+e:i]}),even:ft(function(t,e){for(var i=0;i<e;i+=2)t.push(i);return t}),odd:ft(function(t,e){for(var i=1;i<e;i+=2)t.push(i);return t}),lt:ft(function(t,e,i){for(var s=i<0?i+e:i;0<=--s;)t.push(s);return t}),gt:ft(function(t,e,i){for(var s=i<0?i+e:i;++s<e;)t.push(s);return t})}}).pseudos.nth=y.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})y.pseudos[t]=ct(t);for(t in{submit:!0,reset:!0})y.pseudos[t]=dt(t);function mt(){}function vt(t){for(var e=0,i=t.length,s="";e<i;e++)s+=t[e].value;return s}function _t(a,t,e){var l=t.dir,h=t.next,u=h||l,c=e&&"parentNode"===u,d=s++;return t.first?function(t,e,i){for(;t=t[l];)if(1===t.nodeType||c)return a(t,e,i);return!1}:function(t,e,i){var s,n,o,r=[T,d];if(i){for(;t=t[l];)if((1===t.nodeType||c)&&a(t,e,i))return!0}else for(;t=t[l];)if(1===t.nodeType||c)if(n=(o=t[D]||(t[D]={}))[t.uniqueID]||(o[t.uniqueID]={}),h&&h===t.nodeName.toLowerCase())t=t[l]||t;else{if((s=n[u])&&s[0]===T&&s[1]===d)return r[2]=s[2];if((n[u]=r)[2]=a(t,e,i))return!0}return!1}}function bt(n){return 1<n.length?function(t,e,i){for(var s=n.length;s--;)if(!n[s](t,e,i))return!1;return!0}:n[0]}function yt(t,e,i,s,n){for(var o,r=[],a=0,l=t.length,h=null!=e;a<l;a++)(o=t[a])&&(i&&!i(o,s,n)||(r.push(o),h&&e.push(a)));return r}function wt(p,f,g,m,v,t){return m&&!m[D]&&(m=wt(m)),v&&!v[D]&&(v=wt(v,t)),at(function(t,e,i,s){var n,o,r,a=[],l=[],h=e.length,u=t||function(t,e,i){for(var s=0,n=e.length;s<n;s++)ot(t,e[s],i);return i}(f||"*",i.nodeType?[i]:i,[]),c=!p||!t&&f?u:yt(u,a,p,i,s),d=g?v||(t?p:h||m)?[]:e:c;if(g&&g(c,d,i,s),m)for(n=yt(d,l),m(n,[],i,s),o=n.length;o--;)(r=n[o])&&(d[l[o]]=!(c[l[o]]=r));if(t){if(v||p){if(v){for(n=[],o=d.length;o--;)(r=d[o])&&n.push(c[o]=r);v(null,d=[],n,s)}for(o=d.length;o--;)(r=d[o])&&-1<(n=v?H(t,r):a[o])&&(t[n]=!(e[n]=r))}}else d=yt(d===e?d.splice(h,d.length):d),v?v(null,e,d,s):E.apply(e,d)})}function xt(t){for(var n,e,i,s=t.length,o=y.relative[t[0].type],r=o||y.relative[" "],a=o?1:0,l=_t(function(t){return t===n},r,!0),h=_t(function(t){return-1<H(n,t)},r,!0),u=[function(t,e,i){var s=!o&&(i||e!==w)||((n=e).nodeType?l(t,e,i):h(t,e,i));return n=null,s}];a<s;a++)if(e=y.relative[t[a].type])u=[_t(bt(u),e)];else{if((e=y.filter[t[a].type].apply(null,t[a].matches))[D]){for(i=++a;i<s&&!y.relative[t[i].type];i++);return wt(1<a&&bt(u),1<a&&vt(t.slice(0,a-1).concat({value:" "===t[a-2].type?"*":""})).replace(j,"$1"),e,a<i&&xt(t.slice(a,i)),i<s&&xt(t=t.slice(i)),i<s&&vt(t))}u.push(e)}return bt(u)}return mt.prototype=y.filters=y.pseudos,y.setFilters=new mt,f=ot.tokenize=function(t,e){var i,s,n,o,r,a,l,h=b[t+" "];if(h)return e?0:h.slice(0);for(r=t,a=[],l=y.preFilter;r;){for(o in i&&!(s=q.exec(r))||(s&&(r=r.slice(s[0].length)||r),a.push(n=[])),i=!1,(s=B.exec(r))&&(i=s.shift(),n.push({value:i,type:s[0].replace(j," ")}),r=r.slice(i.length)),y.filter)!(s=K[o].exec(r))||l[o]&&!(s=l[o](s))||(i=s.shift(),n.push({value:i,type:o,matches:s}),r=r.slice(i.length));if(!i)break}return e?r.length:r?ot.error(t):b(t,a).slice(0)},c=ot.compile=function(t,e){var i,m,v,_,b,s,n=[],o=[],r=S[t+" "];if(!r){for(e||(e=f(t)),i=e.length;i--;)(r=xt(e[i]))[D]?n.push(r):o.push(r);(r=S(t,(m=o,v=n,_=0<v.length,b=0<m.length,s=function(t,e,i,s,n){var o,r,a,l=0,h="0",u=t&&[],c=[],d=w,p=t||b&&y.find.TAG("*",n),f=T+=null==d?1:Math.random()||.1,g=p.length;for(n&&(w=e===k||e||n);h!==g&&null!=(o=p[h]);h++){if(b&&o){for(r=0,e||o.ownerDocument===k||(x(o),i=!C);a=m[r++];)if(a(o,e||k,i)){s.push(o);break}n&&(T=f)}_&&((o=!a&&o)&&l--,t&&u.push(o))}if(l+=h,_&&h!==l){for(r=0;a=v[r++];)a(u,c,e,i);if(t){if(0<l)for(;h--;)u[h]||c[h]||(c[h]=M.call(s));c=yt(c)}E.apply(s,c),n&&!t&&0<c.length&&1<l+v.length&&ot.uniqueSort(s)}return n&&(T=f,w=d),u},_?at(s):s))).selector=t}return r},g=ot.select=function(t,e,i,s){var n,o,r,a,l,h="function"==typeof t&&t,u=!s&&f(t=h.selector||t);if(i=i||[],1===u.length){if(2<(o=u[0]=u[0].slice(0)).length&&"ID"===(r=o[0]).type&&9===e.nodeType&&C&&y.relative[o[1].type]){if(!(e=(y.find.ID(r.matches[0].replace(Z,tt),e)||[])[0]))return i;h&&(e=e.parentNode),t=t.slice(o.shift().value.length)}for(n=K.needsContext.test(t)?0:o.length;n--&&(r=o[n],!y.relative[a=r.type]);)if((l=y.find[a])&&(s=l(r.matches[0].replace(Z,tt),J.test(o[0].type)&&gt(e.parentNode)||e))){if(o.splice(n,1),!(t=s.length&&vt(o)))return E.apply(i,s),i;break}}return(h||c(t,u))(s,e,!C,i,!e||J.test(t)&&gt(e.parentNode)||e),i},p.sortStable=D.split("").sort(I).join("")===D,p.detectDuplicates=!!h,x(),p.sortDetached=lt(function(t){return 1&t.compareDocumentPosition(k.createElement("fieldset"))}),lt(function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")})||ht("type|href|height|width",function(t,e,i){if(!i)return t.getAttribute(e,"type"===e.toLowerCase()?1:2)}),p.attributes&&lt(function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")})||ht("value",function(t,e,i){if(!i&&"input"===t.nodeName.toLowerCase())return t.defaultValue}),lt(function(t){return null==t.getAttribute("disabled")})||ht(O,function(t,e,i){var s;if(!i)return!0===t[e]?e.toLowerCase():(s=t.getAttributeNode(e))&&s.specified?s.value:null}),ot}(k);D.find=p,D.expr=p.selectors,D.expr[":"]=D.expr.pseudos,D.uniqueSort=D.unique=p.uniqueSort,D.text=p.getText,D.isXMLDoc=p.isXML,D.contains=p.contains,D.escapeSelector=p.escape;var f=function(t,e,i){for(var s=[],n=void 0!==i;(t=t[e])&&9!==t.nodeType;)if(1===t.nodeType){if(n&&D(t).is(i))break;s.push(t)}return s},x=function(t,e){for(var i=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&i.push(t);return i},T=D.expr.match.needsContext;function S(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()}var I=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function P(t,i,s){return _(i)?D.grep(t,function(t,e){return!!i.call(t,e,t)!==s}):i.nodeType?D.grep(t,function(t){return t===i!==s}):"string"!=typeof i?D.grep(t,function(t){return-1<n.call(i,t)!==s}):D.filter(i,t,s)}D.filter=function(t,e,i){var s=e[0];return i&&(t=":not("+t+")"),1===e.length&&1===s.nodeType?D.find.matchesSelector(s,t)?[s]:[]:D.find.matches(t,D.grep(e,function(t){return 1===t.nodeType}))},D.fn.extend({find:function(t){var e,i,s=this.length,n=this;if("string"!=typeof t)return this.pushStack(D(t).filter(function(){for(e=0;e<s;e++)if(D.contains(n[e],this))return!0}));for(i=this.pushStack([]),e=0;e<s;e++)D.find(t,n[e],i);return 1<s?D.uniqueSort(i):i},filter:function(t){return this.pushStack(P(this,t||[],!1))},not:function(t){return this.pushStack(P(this,t||[],!0))},is:function(t){return!!P(this,"string"==typeof t&&T.test(t)?D(t):t||[],!1).length}});var M,A=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(D.fn.init=function(t,e,i){var s,n;if(!t)return this;if(i=i||M,"string"!=typeof t)return t.nodeType?(this[0]=t,this.length=1,this):_(t)?void 0!==i.ready?i.ready(t):t(D):D.makeArray(t,this);if(!(s="<"===t[0]&&">"===t[t.length-1]&&3<=t.length?[null,t,null]:A.exec(t))||!s[1]&&e)return!e||e.jquery?(e||i).find(t):this.constructor(e).find(t);if(s[1]){if(e=e instanceof D?e[0]:e,D.merge(this,D.parseHTML(s[1],e&&e.nodeType?e.ownerDocument||e:C,!0)),I.test(s[1])&&D.isPlainObject(e))for(s in e)_(this[s])?this[s](e[s]):this.attr(s,e[s]);return this}return(n=C.getElementById(s[2]))&&(this[0]=n,this.length=1),this}).prototype=D.fn,M=D(C);var E=/^(?:parents|prev(?:Until|All))/,N={children:!0,contents:!0,next:!0,prev:!0};function H(t,e){for(;(t=t[e])&&1!==t.nodeType;);return t}D.fn.extend({has:function(t){var e=D(t,this),i=e.length;return this.filter(function(){for(var t=0;t<i;t++)if(D.contains(this,e[t]))return!0})},closest:function(t,e){var i,s=0,n=this.length,o=[],r="string"!=typeof t&&D(t);if(!T.test(t))for(;s<n;s++)for(i=this[s];i&&i!==e;i=i.parentNode)if(i.nodeType<11&&(r?-1<r.index(i):1===i.nodeType&&D.find.matchesSelector(i,t))){o.push(i);break}return this.pushStack(1<o.length?D.uniqueSort(o):o)},index:function(t){return t?"string"==typeof t?n.call(D(t),this[0]):n.call(this,t.jquery?t[0]:t):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(D.uniqueSort(D.merge(this.get(),D(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),D.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return f(t,"parentNode")},parentsUntil:function(t,e,i){return f(t,"parentNode",i)},next:function(t){return H(t,"nextSibling")},prev:function(t){return H(t,"previousSibling")},nextAll:function(t){return f(t,"nextSibling")},prevAll:function(t){return f(t,"previousSibling")},nextUntil:function(t,e,i){return f(t,"nextSibling",i)},prevUntil:function(t,e,i){return f(t,"previousSibling",i)},siblings:function(t){return x((t.parentNode||{}).firstChild,t)},children:function(t){return x(t.firstChild)},contents:function(t){return S(t,"iframe")?t.contentDocument:(S(t,"template")&&(t=t.content||t),D.merge([],t.childNodes))}},function(s,n){D.fn[s]=function(t,e){var i=D.map(this,n,t);return"Until"!==s.slice(-5)&&(e=t),e&&"string"==typeof e&&(i=D.filter(e,i)),1<this.length&&(N[s]||D.uniqueSort(i),E.test(s)&&i.reverse()),this.pushStack(i)}});var O=/[^\x20\t\r\n\f]+/g;function z(t){return t}function W(t){throw t}function L(t,e,i,s){var n;try{t&&_(n=t.promise)?n.call(t).done(e).fail(i):t&&_(n=t.then)?n.call(t,e,i):e.apply(void 0,[t].slice(s))}catch(t){i.apply(void 0,[t])}}D.Callbacks=function(s){var t,i;s="string"==typeof s?(t=s,i={},D.each(t.match(O)||[],function(t,e){i[e]=!0}),i):D.extend({},s);var n,e,o,r,a=[],l=[],h=-1,u=function(){for(r=r||s.once,o=n=!0;l.length;h=-1)for(e=l.shift();++h<a.length;)!1===a[h].apply(e[0],e[1])&&s.stopOnFalse&&(h=a.length,e=!1);s.memory||(e=!1),n=!1,r&&(a=e?[]:"")},c={add:function(){return a&&(e&&!n&&(h=a.length-1,l.push(e)),function i(t){D.each(t,function(t,e){_(e)?s.unique&&c.has(e)||a.push(e):e&&e.length&&"string"!==w(e)&&i(e)})}(arguments),e&&!n&&u()),this},remove:function(){return D.each(arguments,function(t,e){for(var i;-1<(i=D.inArray(e,a,i));)a.splice(i,1),i<=h&&h--}),this},has:function(t){return t?-1<D.inArray(t,a):0<a.length},empty:function(){return a&&(a=[]),this},disable:function(){return r=l=[],a=e="",this},disabled:function(){return!a},lock:function(){return r=l=[],e||n||(a=e=""),this},locked:function(){return!!r},fireWith:function(t,e){return r||(e=[t,(e=e||[]).slice?e.slice():e],l.push(e),n||u()),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!o}};return c},D.extend({Deferred:function(t){var o=[["notify","progress",D.Callbacks("memory"),D.Callbacks("memory"),2],["resolve","done",D.Callbacks("once memory"),D.Callbacks("once memory"),0,"resolved"],["reject","fail",D.Callbacks("once memory"),D.Callbacks("once memory"),1,"rejected"]],n="pending",r={state:function(){return n},always:function(){return a.done(arguments).fail(arguments),this},catch:function(t){return r.then(null,t)},pipe:function(){var n=arguments;return D.Deferred(function(s){D.each(o,function(t,e){var i=_(n[e[4]])&&n[e[4]];a[e[1]](function(){var t=i&&i.apply(this,arguments);t&&_(t.promise)?t.promise().progress(s.notify).done(s.resolve).fail(s.reject):s[e[0]+"With"](this,i?[t]:arguments)})}),n=null}).promise()},then:function(e,i,s){var l=0;function h(n,o,r,a){return function(){var i=this,s=arguments,t=function(){var t,e;if(!(n<l)){if((t=r.apply(i,s))===o.promise())throw new TypeError("Thenable self-resolution");e=t&&("object"==typeof t||"function"==typeof t)&&t.then,_(e)?a?e.call(t,h(l,o,z,a),h(l,o,W,a)):(l++,e.call(t,h(l,o,z,a),h(l,o,W,a),h(l,o,z,o.notifyWith))):(r!==z&&(i=void 0,s=[t]),(a||o.resolveWith)(i,s))}},e=a?t:function(){try{t()}catch(t){D.Deferred.exceptionHook&&D.Deferred.exceptionHook(t,e.stackTrace),l<=n+1&&(r!==W&&(i=void 0,s=[t]),o.rejectWith(i,s))}};n?e():(D.Deferred.getStackHook&&(e.stackTrace=D.Deferred.getStackHook()),k.setTimeout(e))}}return D.Deferred(function(t){o[0][3].add(h(0,t,_(s)?s:z,t.notifyWith)),o[1][3].add(h(0,t,_(e)?e:z)),o[2][3].add(h(0,t,_(i)?i:W))}).promise()},promise:function(t){return null!=t?D.extend(t,r):r}},a={};return D.each(o,function(t,e){var i=e[2],s=e[5];r[e[1]]=i.add,s&&i.add(function(){n=s},o[3-t][2].disable,o[3-t][3].disable,o[0][2].lock,o[0][3].lock),i.add(e[3].fire),a[e[0]]=function(){return a[e[0]+"With"](this===a?void 0:this,arguments),this},a[e[0]+"With"]=i.fireWith}),r.promise(a),t&&t.call(a,a),a},when:function(t){var i=arguments.length,e=i,s=Array(e),n=a.call(arguments),o=D.Deferred(),r=function(e){return function(t){s[e]=this,n[e]=1<arguments.length?a.call(arguments):t,--i||o.resolveWith(s,n)}};if(i<=1&&(L(t,o.done(r(e)).resolve,o.reject,!i),"pending"===o.state()||_(n[e]&&n[e].then)))return o.then();for(;e--;)L(n[e],r(e),o.reject);return o.promise()}});var F=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;D.Deferred.exceptionHook=function(t,e){k.console&&k.console.warn&&t&&F.test(t.name)&&k.console.warn("jQuery.Deferred exception: "+t.message,t.stack,e)},D.readyException=function(t){k.setTimeout(function(){throw t})};var R=D.Deferred();function j(){C.removeEventListener("DOMContentLoaded",j),k.removeEventListener("load",j),D.ready()}D.fn.ready=function(t){return R.then(t).catch(function(t){D.readyException(t)}),this},D.extend({isReady:!1,readyWait:1,ready:function(t){(!0===t?--D.readyWait:D.isReady)||((D.isReady=!0)!==t&&0<--D.readyWait||R.resolveWith(C,[D]))}}),D.ready.then=R.then,"complete"===C.readyState||"loading"!==C.readyState&&!C.documentElement.doScroll?k.setTimeout(D.ready):(C.addEventListener("DOMContentLoaded",j),k.addEventListener("load",j));var q=function(t,e,i,s,n,o,r){var a=0,l=t.length,h=null==i;if("object"===w(i))for(a in n=!0,i)q(t,e,a,i[a],!0,o,r);else if(void 0!==s&&(n=!0,_(s)||(r=!0),h&&(e=r?(e.call(t,s),null):(h=e,function(t,e,i){return h.call(D(t),i)})),e))for(;a<l;a++)e(t[a],i,r?s:s.call(t[a],a,e(t[a],i)));return n?t:h?e.call(t):l?e(t[0],i):o},B=/^-ms-/,Y=/-([a-z])/g;function $(t,e){return e.toUpperCase()}function U(t){return t.replace(B,"ms-").replace(Y,$)}var K=function(t){return 1===t.nodeType||9===t.nodeType||!+t.nodeType};function V(){this.expando=D.expando+V.uid++}V.uid=1,V.prototype={cache:function(t){var e=t[this.expando];return e||(e={},K(t)&&(t.nodeType?t[this.expando]=e:Object.defineProperty(t,this.expando,{value:e,configurable:!0}))),e},set:function(t,e,i){var s,n=this.cache(t);if("string"==typeof e)n[U(e)]=i;else for(s in e)n[U(s)]=e[s];return n},get:function(t,e){return void 0===e?this.cache(t):t[this.expando]&&t[this.expando][U(e)]},access:function(t,e,i){return void 0===e||e&&"string"==typeof e&&void 0===i?this.get(t,e):(this.set(t,e,i),void 0!==i?i:e)},remove:function(t,e){var i,s=t[this.expando];if(void 0!==s){if(void 0!==e){i=(e=Array.isArray(e)?e.map(U):(e=U(e))in s?[e]:e.match(O)||[]).length;for(;i--;)delete s[e[i]]}(void 0===e||D.isEmptyObject(s))&&(t.nodeType?t[this.expando]=void 0:delete t[this.expando])}},hasData:function(t){var e=t[this.expando];return void 0!==e&&!D.isEmptyObject(e)}};var X=new V,G=new V,Q=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,J=/[A-Z]/g;function Z(t,e,i){var s,n;if(void 0===i&&1===t.nodeType)if(s="data-"+e.replace(J,"-$&").toLowerCase(),"string"==typeof(i=t.getAttribute(s))){try{i="true"===(n=i)||"false"!==n&&("null"===n?null:n===+n+""?+n:Q.test(n)?JSON.parse(n):n)}catch(t){}G.set(t,e,i)}else i=void 0;return i}D.extend({hasData:function(t){return G.hasData(t)||X.hasData(t)},data:function(t,e,i){return G.access(t,e,i)},removeData:function(t,e){G.remove(t,e)},_data:function(t,e,i){return X.access(t,e,i)},_removeData:function(t,e){X.remove(t,e)}}),D.fn.extend({data:function(i,t){var e,s,n,o=this[0],r=o&&o.attributes;if(void 0!==i)return"object"==typeof i?this.each(function(){G.set(this,i)}):q(this,function(t){var e;if(o&&void 0===t){if(void 0!==(e=G.get(o,i)))return e;if(void 0!==(e=Z(o,i)))return e}else this.each(function(){G.set(this,i,t)})},null,t,1<arguments.length,null,!0);if(this.length&&(n=G.get(o),1===o.nodeType&&!X.get(o,"hasDataAttrs"))){for(e=r.length;e--;)r[e]&&0===(s=r[e].name).indexOf("data-")&&(s=U(s.slice(5)),Z(o,s,n[s]));X.set(o,"hasDataAttrs",!0)}return n},removeData:function(t){return this.each(function(){G.remove(this,t)})}}),D.extend({queue:function(t,e,i){var s;if(t)return e=(e||"fx")+"queue",s=X.get(t,e),i&&(!s||Array.isArray(i)?s=X.access(t,e,D.makeArray(i)):s.push(i)),s||[]},dequeue:function(t,e){e=e||"fx";var i=D.queue(t,e),s=i.length,n=i.shift(),o=D._queueHooks(t,e);"inprogress"===n&&(n=i.shift(),s--),n&&("fx"===e&&i.unshift("inprogress"),delete o.stop,n.call(t,function(){D.dequeue(t,e)},o)),!s&&o&&o.empty.fire()},_queueHooks:function(t,e){var i=e+"queueHooks";return X.get(t,i)||X.access(t,i,{empty:D.Callbacks("once memory").add(function(){X.remove(t,[e+"queue",i])})})}}),D.fn.extend({queue:function(e,i){var t=2;return"string"!=typeof e&&(i=e,e="fx",t--),arguments.length<t?D.queue(this[0],e):void 0===i?this:this.each(function(){var t=D.queue(this,e,i);D._queueHooks(this,e),"fx"===e&&"inprogress"!==t[0]&&D.dequeue(this,e)})},dequeue:function(t){return this.each(function(){D.dequeue(this,t)})},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var i,s=1,n=D.Deferred(),o=this,r=this.length,a=function(){--s||n.resolveWith(o,[o])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";r--;)(i=X.get(o[r],t+"queueHooks"))&&i.empty&&(s++,i.empty.add(a));return a(),n.promise(e)}});var tt=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,et=new RegExp("^(?:([+-])=|)("+tt+")([a-z%]*)$","i"),it=["Top","Right","Bottom","Left"],st=function(t,e){return"none"===(t=e||t).style.display||""===t.style.display&&D.contains(t.ownerDocument,t)&&"none"===D.css(t,"display")},nt=function(t,e,i,s){var n,o,r={};for(o in e)r[o]=t.style[o],t.style[o]=e[o];for(o in n=i.apply(t,s||[]),e)t.style[o]=r[o];return n};function ot(t,e,i,s){var n,o,r=20,a=s?function(){return s.cur()}:function(){return D.css(t,e,"")},l=a(),h=i&&i[3]||(D.cssNumber[e]?"":"px"),u=(D.cssNumber[e]||"px"!==h&&+l)&&et.exec(D.css(t,e));if(u&&u[3]!==h){for(l/=2,h=h||u[3],u=+l||1;r--;)D.style(t,e,u+h),(1-o)*(1-(o=a()/l||.5))<=0&&(r=0),u/=o;u*=2,D.style(t,e,u+h),i=i||[]}return i&&(u=+u||+l||0,n=i[1]?u+(i[1]+1)*i[2]:+i[2],s&&(s.unit=h,s.start=u,s.end=n)),n}var rt={};function at(t,e){for(var i,s,n=[],o=0,r=t.length;o<r;o++)(s=t[o]).style&&(i=s.style.display,e?("none"===i&&(n[o]=X.get(s,"display")||null,n[o]||(s.style.display="")),""===s.style.display&&st(s)&&(n[o]=(c=h=l=void 0,h=(a=s).ownerDocument,u=a.nodeName,(c=rt[u])||(l=h.body.appendChild(h.createElement(u)),c=D.css(l,"display"),l.parentNode.removeChild(l),"none"===c&&(c="block"),rt[u]=c)))):"none"!==i&&(n[o]="none",X.set(s,"display",i)));var a,l,h,u,c;for(o=0;o<r;o++)null!=n[o]&&(t[o].style.display=n[o]);return t}D.fn.extend({show:function(){return at(this,!0)},hide:function(){return at(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each(function(){st(this)?D(this).show():D(this).hide()})}});var lt=/^(?:checkbox|radio)$/i,ht=/<([a-z][^\/\0>\x20\t\r\n\f]+)/i,ut=/^$|^module$|\/(?:java|ecma)script/i,ct={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function dt(t,e){var i;return i=void 0!==t.getElementsByTagName?t.getElementsByTagName(e||"*"):void 0!==t.querySelectorAll?t.querySelectorAll(e||"*"):[],void 0===e||e&&S(t,e)?D.merge([t],i):i}function pt(t,e){for(var i=0,s=t.length;i<s;i++)X.set(t[i],"globalEval",!e||X.get(e[i],"globalEval"))}ct.optgroup=ct.option,ct.tbody=ct.tfoot=ct.colgroup=ct.caption=ct.thead,ct.th=ct.td;var ft,gt,mt=/<|&#?\w+;/;function vt(t,e,i,s,n){for(var o,r,a,l,h,u,c=e.createDocumentFragment(),d=[],p=0,f=t.length;p<f;p++)if((o=t[p])||0===o)if("object"===w(o))D.merge(d,o.nodeType?[o]:o);else if(mt.test(o)){for(r=r||c.appendChild(e.createElement("div")),a=(ht.exec(o)||["",""])[1].toLowerCase(),l=ct[a]||ct._default,r.innerHTML=l[1]+D.htmlPrefilter(o)+l[2],u=l[0];u--;)r=r.lastChild;D.merge(d,r.childNodes),(r=c.firstChild).textContent=""}else d.push(e.createTextNode(o));for(c.textContent="",p=0;o=d[p++];)if(s&&-1<D.inArray(o,s))n&&n.push(o);else if(h=D.contains(o.ownerDocument,o),r=dt(c.appendChild(o),"script"),h&&pt(r),i)for(u=0;o=r[u++];)ut.test(o.type||"")&&i.push(o);return c}ft=C.createDocumentFragment().appendChild(C.createElement("div")),(gt=C.createElement("input")).setAttribute("type","radio"),gt.setAttribute("checked","checked"),gt.setAttribute("name","t"),ft.appendChild(gt),v.checkClone=ft.cloneNode(!0).cloneNode(!0).lastChild.checked,ft.innerHTML="<textarea>x</textarea>",v.noCloneChecked=!!ft.cloneNode(!0).lastChild.defaultValue;var _t=C.documentElement,bt=/^key/,yt=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,wt=/^([^.]*)(?:\.(.+)|)/;function xt(){return!0}function kt(){return!1}function Ct(){try{return C.activeElement}catch(t){}}function Dt(t,e,i,s,n,o){var r,a;if("object"==typeof e){for(a in"string"!=typeof i&&(s=s||i,i=void 0),e)Dt(t,a,i,s,e[a],o);return t}if(null==s&&null==n?(n=i,s=i=void 0):null==n&&("string"==typeof i?(n=s,s=void 0):(n=s,s=i,i=void 0)),!1===n)n=kt;else if(!n)return t;return 1===o&&(r=n,(n=function(t){return D().off(t),r.apply(this,arguments)}).guid=r.guid||(r.guid=D.guid++)),t.each(function(){D.event.add(this,e,n,s,i)})}D.event={global:{},add:function(e,t,i,s,n){var o,r,a,l,h,u,c,d,p,f,g,m=X.get(e);if(m)for(i.handler&&(i=(o=i).handler,n=o.selector),n&&D.find.matchesSelector(_t,n),i.guid||(i.guid=D.guid++),(l=m.events)||(l=m.events={}),(r=m.handle)||(r=m.handle=function(t){return void 0!==D&&D.event.triggered!==t.type?D.event.dispatch.apply(e,arguments):void 0}),h=(t=(t||"").match(O)||[""]).length;h--;)p=g=(a=wt.exec(t[h])||[])[1],f=(a[2]||"").split(".").sort(),p&&(c=D.event.special[p]||{},p=(n?c.delegateType:c.bindType)||p,c=D.event.special[p]||{},u=D.extend({type:p,origType:g,data:s,handler:i,guid:i.guid,selector:n,needsContext:n&&D.expr.match.needsContext.test(n),namespace:f.join(".")},o),(d=l[p])||((d=l[p]=[]).delegateCount=0,c.setup&&!1!==c.setup.call(e,s,f,r)||e.addEventListener&&e.addEventListener(p,r)),c.add&&(c.add.call(e,u),u.handler.guid||(u.handler.guid=i.guid)),n?d.splice(d.delegateCount++,0,u):d.push(u),D.event.global[p]=!0)},remove:function(t,e,i,s,n){var o,r,a,l,h,u,c,d,p,f,g,m=X.hasData(t)&&X.get(t);if(m&&(l=m.events)){for(h=(e=(e||"").match(O)||[""]).length;h--;)if(p=g=(a=wt.exec(e[h])||[])[1],f=(a[2]||"").split(".").sort(),p){for(c=D.event.special[p]||{},d=l[p=(s?c.delegateType:c.bindType)||p]||[],a=a[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),r=o=d.length;o--;)u=d[o],!n&&g!==u.origType||i&&i.guid!==u.guid||a&&!a.test(u.namespace)||s&&s!==u.selector&&("**"!==s||!u.selector)||(d.splice(o,1),u.selector&&d.delegateCount--,c.remove&&c.remove.call(t,u));r&&!d.length&&(c.teardown&&!1!==c.teardown.call(t,f,m.handle)||D.removeEvent(t,p,m.handle),delete l[p])}else for(p in l)D.event.remove(t,p+e[h],i,s,!0);D.isEmptyObject(l)&&X.remove(t,"handle events")}},dispatch:function(t){var e,i,s,n,o,r,a=D.event.fix(t),l=new Array(arguments.length),h=(X.get(this,"events")||{})[a.type]||[],u=D.event.special[a.type]||{};for(l[0]=a,e=1;e<arguments.length;e++)l[e]=arguments[e];if(a.delegateTarget=this,!u.preDispatch||!1!==u.preDispatch.call(this,a)){for(r=D.event.handlers.call(this,a,h),e=0;(n=r[e++])&&!a.isPropagationStopped();)for(a.currentTarget=n.elem,i=0;(o=n.handlers[i++])&&!a.isImmediatePropagationStopped();)a.rnamespace&&!a.rnamespace.test(o.namespace)||(a.handleObj=o,a.data=o.data,void 0!==(s=((D.event.special[o.origType]||{}).handle||o.handler).apply(n.elem,l))&&!1===(a.result=s)&&(a.preventDefault(),a.stopPropagation()));return u.postDispatch&&u.postDispatch.call(this,a),a.result}},handlers:function(t,e){var i,s,n,o,r,a=[],l=e.delegateCount,h=t.target;if(l&&h.nodeType&&!("click"===t.type&&1<=t.button))for(;h!==this;h=h.parentNode||this)if(1===h.nodeType&&("click"!==t.type||!0!==h.disabled)){for(o=[],r={},i=0;i<l;i++)void 0===r[n=(s=e[i]).selector+" "]&&(r[n]=s.needsContext?-1<D(n,this).index(h):D.find(n,this,null,[h]).length),r[n]&&o.push(s);o.length&&a.push({elem:h,handlers:o})}return h=this,l<e.length&&a.push({elem:h,handlers:e.slice(l)}),a},addProp:function(e,t){Object.defineProperty(D.Event.prototype,e,{enumerable:!0,configurable:!0,get:_(t)?function(){if(this.originalEvent)return t(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[e]},set:function(t){Object.defineProperty(this,e,{enumerable:!0,configurable:!0,writable:!0,value:t})}})},fix:function(t){return t[D.expando]?t:new D.Event(t)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==Ct()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===Ct()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&S(this,"input"))return this.click(),!1},_default:function(t){return S(t.target,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}}},D.removeEvent=function(t,e,i){t.removeEventListener&&t.removeEventListener(e,i)},D.Event=function(t,e){if(!(this instanceof D.Event))return new D.Event(t,e);t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&!1===t.returnValue?xt:kt,this.target=t.target&&3===t.target.nodeType?t.target.parentNode:t.target,this.currentTarget=t.currentTarget,this.relatedTarget=t.relatedTarget):this.type=t,e&&D.extend(this,e),this.timeStamp=t&&t.timeStamp||Date.now(),this[D.expando]=!0},D.Event.prototype={constructor:D.Event,isDefaultPrevented:kt,isPropagationStopped:kt,isImmediatePropagationStopped:kt,isSimulated:!1,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=xt,t&&!this.isSimulated&&t.preventDefault()},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=xt,t&&!this.isSimulated&&t.stopPropagation()},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=xt,t&&!this.isSimulated&&t.stopImmediatePropagation(),this.stopPropagation()}},D.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(t){var e=t.button;return null==t.which&&bt.test(t.type)?null!=t.charCode?t.charCode:t.keyCode:!t.which&&void 0!==e&&yt.test(t.type)?1&e?1:2&e?3:4&e?2:0:t.which}},D.event.addProp),D.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(t,n){D.event.special[t]={delegateType:n,bindType:n,handle:function(t){var e,i=t.relatedTarget,s=t.handleObj;return i&&(i===this||D.contains(this,i))||(t.type=s.origType,e=s.handler.apply(this,arguments),t.type=n),e}}}),D.fn.extend({on:function(t,e,i,s){return Dt(this,t,e,i,s)},one:function(t,e,i,s){return Dt(this,t,e,i,s,1)},off:function(t,e,i){var s,n;if(t&&t.preventDefault&&t.handleObj)return s=t.handleObj,D(t.delegateTarget).off(s.namespace?s.origType+"."+s.namespace:s.origType,s.selector,s.handler),this;if("object"!=typeof t)return!1!==e&&"function"!=typeof e||(i=e,e=void 0),!1===i&&(i=kt),this.each(function(){D.event.remove(this,t,i,e)});for(n in t)this.off(n,e,t[n]);return this}});var Tt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,St=/<script|<style|<link/i,It=/checked\s*(?:[^=]|=\s*.checked.)/i,Pt=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Mt(t,e){return S(t,"table")&&S(11!==e.nodeType?e:e.firstChild,"tr")&&D(t).children("tbody")[0]||t}function At(t){return t.type=(null!==t.getAttribute("type"))+"/"+t.type,t}function Et(t){return"true/"===(t.type||"").slice(0,5)?t.type=t.type.slice(5):t.removeAttribute("type"),t}function Nt(t,e){var i,s,n,o,r,a,l,h;if(1===e.nodeType){if(X.hasData(t)&&(o=X.access(t),r=X.set(e,o),h=o.events))for(n in delete r.handle,r.events={},h)for(i=0,s=h[n].length;i<s;i++)D.event.add(e,n,h[n][i]);G.hasData(t)&&(a=G.access(t),l=D.extend({},a),G.set(e,l))}}function Ht(i,s,n,o){s=g.apply([],s);var t,e,r,a,l,h,u=0,c=i.length,d=c-1,p=s[0],f=_(p);if(f||1<c&&"string"==typeof p&&!v.checkClone&&It.test(p))return i.each(function(t){var e=i.eq(t);f&&(s[0]=p.call(this,t,e.html())),Ht(e,s,n,o)});if(c&&(e=(t=vt(s,i[0].ownerDocument,!1,i,o)).firstChild,1===t.childNodes.length&&(t=e),e||o)){for(a=(r=D.map(dt(t,"script"),At)).length;u<c;u++)l=t,u!==d&&(l=D.clone(l,!0,!0),a&&D.merge(r,dt(l,"script"))),n.call(i[u],l,u);if(a)for(h=r[r.length-1].ownerDocument,D.map(r,Et),u=0;u<a;u++)l=r[u],ut.test(l.type||"")&&!X.access(l,"globalEval")&&D.contains(h,l)&&(l.src&&"module"!==(l.type||"").toLowerCase()?D._evalUrl&&D._evalUrl(l.src):y(l.textContent.replace(Pt,""),h,l))}return i}function Ot(t,e,i){for(var s,n=e?D.filter(e,t):t,o=0;null!=(s=n[o]);o++)i||1!==s.nodeType||D.cleanData(dt(s)),s.parentNode&&(i&&D.contains(s.ownerDocument,s)&&pt(dt(s,"script")),s.parentNode.removeChild(s));return t}D.extend({htmlPrefilter:function(t){return t.replace(Tt,"<$1></$2>")},clone:function(t,e,i){var s,n,o,r,a,l,h,u=t.cloneNode(!0),c=D.contains(t.ownerDocument,t);if(!(v.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||D.isXMLDoc(t)))for(r=dt(u),s=0,n=(o=dt(t)).length;s<n;s++)a=o[s],l=r[s],void 0,"input"===(h=l.nodeName.toLowerCase())&&lt.test(a.type)?l.checked=a.checked:"input"!==h&&"textarea"!==h||(l.defaultValue=a.defaultValue);if(e)if(i)for(o=o||dt(t),r=r||dt(u),s=0,n=o.length;s<n;s++)Nt(o[s],r[s]);else Nt(t,u);return 0<(r=dt(u,"script")).length&&pt(r,!c&&dt(t,"script")),u},cleanData:function(t){for(var e,i,s,n=D.event.special,o=0;void 0!==(i=t[o]);o++)if(K(i)){if(e=i[X.expando]){if(e.events)for(s in e.events)n[s]?D.event.remove(i,s):D.removeEvent(i,s,e.handle);i[X.expando]=void 0}i[G.expando]&&(i[G.expando]=void 0)}}}),D.fn.extend({detach:function(t){return Ot(this,t,!0)},remove:function(t){return Ot(this,t)},text:function(t){return q(this,function(t){return void 0===t?D.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=t)})},null,t,arguments.length)},append:function(){return Ht(this,arguments,function(t){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Mt(this,t).appendChild(t)})},prepend:function(){return Ht(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=Mt(this,t);e.insertBefore(t,e.firstChild)}})},before:function(){return Ht(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this)})},after:function(){return Ht(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)})},empty:function(){for(var t,e=0;null!=(t=this[e]);e++)1===t.nodeType&&(D.cleanData(dt(t,!1)),t.textContent="");return this},clone:function(t,e){return t=null!=t&&t,e=null==e?t:e,this.map(function(){return D.clone(this,t,e)})},html:function(t){return q(this,function(t){var e=this[0]||{},i=0,s=this.length;if(void 0===t&&1===e.nodeType)return e.innerHTML;if("string"==typeof t&&!St.test(t)&&!ct[(ht.exec(t)||["",""])[1].toLowerCase()]){t=D.htmlPrefilter(t);try{for(;i<s;i++)1===(e=this[i]||{}).nodeType&&(D.cleanData(dt(e,!1)),e.innerHTML=t);e=0}catch(t){}}e&&this.empty().append(t)},null,t,arguments.length)},replaceWith:function(){var i=[];return Ht(this,arguments,function(t){var e=this.parentNode;D.inArray(this,i)<0&&(D.cleanData(dt(this)),e&&e.replaceChild(t,this))},i)}}),D.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(t,r){D.fn[t]=function(t){for(var e,i=[],s=D(t),n=s.length-1,o=0;o<=n;o++)e=o===n?this:this.clone(!0),D(s[o])[r](e),l.apply(i,e.get());return this.pushStack(i)}});var zt=new RegExp("^("+tt+")(?!px)[a-z%]+$","i"),Wt=function(t){var e=t.ownerDocument.defaultView;return e&&e.opener||(e=k),e.getComputedStyle(t)},Lt=new RegExp(it.join("|"),"i");function Ft(t,e,i){var s,n,o,r,a=t.style;return(i=i||Wt(t))&&(""!==(r=i.getPropertyValue(e)||i[e])||D.contains(t.ownerDocument,t)||(r=D.style(t,e)),!v.pixelBoxStyles()&&zt.test(r)&&Lt.test(e)&&(s=a.width,n=a.minWidth,o=a.maxWidth,a.minWidth=a.maxWidth=a.width=r,r=i.width,a.width=s,a.minWidth=n,a.maxWidth=o)),void 0!==r?r+"":r}function Rt(t,e){return{get:function(){if(!t())return(this.get=e).apply(this,arguments);delete this.get}}}!function(){function t(){if(l){a.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",l.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",_t.appendChild(a).appendChild(l);var t=k.getComputedStyle(l);i="1%"!==t.top,r=12===e(t.marginLeft),l.style.right="60%",o=36===e(t.right),s=36===e(t.width),l.style.position="absolute",n=36===l.offsetWidth||"absolute",_t.removeChild(a),l=null}}function e(t){return Math.round(parseFloat(t))}var i,s,n,o,r,a=C.createElement("div"),l=C.createElement("div");l.style&&(l.style.backgroundClip="content-box",l.cloneNode(!0).style.backgroundClip="",v.clearCloneStyle="content-box"===l.style.backgroundClip,D.extend(v,{boxSizingReliable:function(){return t(),s},pixelBoxStyles:function(){return t(),o},pixelPosition:function(){return t(),i},reliableMarginLeft:function(){return t(),r},scrollboxSize:function(){return t(),n}}))}();var jt=/^(none|table(?!-c[ea]).+)/,qt=/^--/,Bt={position:"absolute",visibility:"hidden",display:"block"},Yt={letterSpacing:"0",fontWeight:"400"},$t=["Webkit","Moz","ms"],Ut=C.createElement("div").style;function Kt(t){var e=D.cssProps[t];return e||(e=D.cssProps[t]=function(t){if(t in Ut)return t;for(var e=t[0].toUpperCase()+t.slice(1),i=$t.length;i--;)if((t=$t[i]+e)in Ut)return t}(t)||t),e}function Vt(t,e,i){var s=et.exec(e);return s?Math.max(0,s[2]-(i||0))+(s[3]||"px"):e}function Xt(t,e,i,s,n,o){var r="width"===e?1:0,a=0,l=0;if(i===(s?"border":"content"))return 0;for(;r<4;r+=2)"margin"===i&&(l+=D.css(t,i+it[r],!0,n)),s?("content"===i&&(l-=D.css(t,"padding"+it[r],!0,n)),"margin"!==i&&(l-=D.css(t,"border"+it[r]+"Width",!0,n))):(l+=D.css(t,"padding"+it[r],!0,n),"padding"!==i?l+=D.css(t,"border"+it[r]+"Width",!0,n):a+=D.css(t,"border"+it[r]+"Width",!0,n));return!s&&0<=o&&(l+=Math.max(0,Math.ceil(t["offset"+e[0].toUpperCase()+e.slice(1)]-o-l-a-.5))),l}function Gt(t,e,i){var s=Wt(t),n=Ft(t,e,s),o="border-box"===D.css(t,"boxSizing",!1,s),r=o;if(zt.test(n)){if(!i)return n;n="auto"}return r=r&&(v.boxSizingReliable()||n===t.style[e]),("auto"===n||!parseFloat(n)&&"inline"===D.css(t,"display",!1,s))&&(n=t["offset"+e[0].toUpperCase()+e.slice(1)],r=!0),(n=parseFloat(n)||0)+Xt(t,e,i||(o?"border":"content"),r,s,n)+"px"}function Qt(t,e,i,s,n){return new Qt.prototype.init(t,e,i,s,n)}D.extend({cssHooks:{opacity:{get:function(t,e){if(e){var i=Ft(t,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(t,e,i,s){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var n,o,r,a=U(e),l=qt.test(e),h=t.style;if(l||(e=Kt(a)),r=D.cssHooks[e]||D.cssHooks[a],void 0===i)return r&&"get"in r&&void 0!==(n=r.get(t,!1,s))?n:h[e];"string"==(o=typeof i)&&(n=et.exec(i))&&n[1]&&(i=ot(t,e,n),o="number"),null!=i&&i==i&&("number"===o&&(i+=n&&n[3]||(D.cssNumber[a]?"":"px")),v.clearCloneStyle||""!==i||0!==e.indexOf("background")||(h[e]="inherit"),r&&"set"in r&&void 0===(i=r.set(t,i,s))||(l?h.setProperty(e,i):h[e]=i))}},css:function(t,e,i,s){var n,o,r,a=U(e);return qt.test(e)||(e=Kt(a)),(r=D.cssHooks[e]||D.cssHooks[a])&&"get"in r&&(n=r.get(t,!0,i)),void 0===n&&(n=Ft(t,e,s)),"normal"===n&&e in Yt&&(n=Yt[e]),""===i||i?(o=parseFloat(n),!0===i||isFinite(o)?o||0:n):n}}),D.each(["height","width"],function(t,a){D.cssHooks[a]={get:function(t,e,i){if(e)return!jt.test(D.css(t,"display"))||t.getClientRects().length&&t.getBoundingClientRect().width?Gt(t,a,i):nt(t,Bt,function(){return Gt(t,a,i)})},set:function(t,e,i){var s,n=Wt(t),o="border-box"===D.css(t,"boxSizing",!1,n),r=i&&Xt(t,a,i,o,n);return o&&v.scrollboxSize()===n.position&&(r-=Math.ceil(t["offset"+a[0].toUpperCase()+a.slice(1)]-parseFloat(n[a])-Xt(t,a,"border",!1,n)-.5)),r&&(s=et.exec(e))&&"px"!==(s[3]||"px")&&(t.style[a]=e,e=D.css(t,a)),Vt(0,e,r)}}}),D.cssHooks.marginLeft=Rt(v.reliableMarginLeft,function(t,e){if(e)return(parseFloat(Ft(t,"marginLeft"))||t.getBoundingClientRect().left-nt(t,{marginLeft:0},function(){return t.getBoundingClientRect().left}))+"px"}),D.each({margin:"",padding:"",border:"Width"},function(n,o){D.cssHooks[n+o]={expand:function(t){for(var e=0,i={},s="string"==typeof t?t.split(" "):[t];e<4;e++)i[n+it[e]+o]=s[e]||s[e-2]||s[0];return i}},"margin"!==n&&(D.cssHooks[n+o].set=Vt)}),D.fn.extend({css:function(t,e){return q(this,function(t,e,i){var s,n,o={},r=0;if(Array.isArray(e)){for(s=Wt(t),n=e.length;r<n;r++)o[e[r]]=D.css(t,e[r],!1,s);return o}return void 0!==i?D.style(t,e,i):D.css(t,e)},t,e,1<arguments.length)}}),((D.Tween=Qt).prototype={constructor:Qt,init:function(t,e,i,s,n,o){this.elem=t,this.prop=i,this.easing=n||D.easing._default,this.options=e,this.start=this.now=this.cur(),this.end=s,this.unit=o||(D.cssNumber[i]?"":"px")},cur:function(){var t=Qt.propHooks[this.prop];return t&&t.get?t.get(this):Qt.propHooks._default.get(this)},run:function(t){var e,i=Qt.propHooks[this.prop];return this.options.duration?this.pos=e=D.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):this.pos=e=t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):Qt.propHooks._default.set(this),this}}).init.prototype=Qt.prototype,(Qt.propHooks={_default:{get:function(t){var e;return 1!==t.elem.nodeType||null!=t.elem[t.prop]&&null==t.elem.style[t.prop]?t.elem[t.prop]:(e=D.css(t.elem,t.prop,""))&&"auto"!==e?e:0},set:function(t){D.fx.step[t.prop]?D.fx.step[t.prop](t):1!==t.elem.nodeType||null==t.elem.style[D.cssProps[t.prop]]&&!D.cssHooks[t.prop]?t.elem[t.prop]=t.now:D.style(t.elem,t.prop,t.now+t.unit)}}}).scrollTop=Qt.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},D.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2},_default:"swing"},D.fx=Qt.prototype.init,D.fx.step={};var Jt,Zt,te,ee,ie=/^(?:toggle|show|hide)$/,se=/queueHooks$/;function ne(){Zt&&(!1===C.hidden&&k.requestAnimationFrame?k.requestAnimationFrame(ne):k.setTimeout(ne,D.fx.interval),D.fx.tick())}function oe(){return k.setTimeout(function(){Jt=void 0}),Jt=Date.now()}function re(t,e){var i,s=0,n={height:t};for(e=e?1:0;s<4;s+=2-e)n["margin"+(i=it[s])]=n["padding"+i]=t;return e&&(n.opacity=n.width=t),n}function ae(t,e,i){for(var s,n=(le.tweeners[e]||[]).concat(le.tweeners["*"]),o=0,r=n.length;o<r;o++)if(s=n[o].call(i,e,t))return s}function le(o,t,e){var i,r,s=0,n=le.prefilters.length,a=D.Deferred().always(function(){delete l.elem}),l=function(){if(r)return!1;for(var t=Jt||oe(),e=Math.max(0,h.startTime+h.duration-t),i=1-(e/h.duration||0),s=0,n=h.tweens.length;s<n;s++)h.tweens[s].run(i);return a.notifyWith(o,[h,i,e]),i<1&&n?e:(n||a.notifyWith(o,[h,1,0]),a.resolveWith(o,[h]),!1)},h=a.promise({elem:o,props:D.extend({},t),opts:D.extend(!0,{specialEasing:{},easing:D.easing._default},e),originalProperties:t,originalOptions:e,startTime:Jt||oe(),duration:e.duration,tweens:[],createTween:function(t,e){var i=D.Tween(o,h.opts,t,e,h.opts.specialEasing[t]||h.opts.easing);return h.tweens.push(i),i},stop:function(t){var e=0,i=t?h.tweens.length:0;if(r)return this;for(r=!0;e<i;e++)h.tweens[e].run(1);return t?(a.notifyWith(o,[h,1,0]),a.resolveWith(o,[h,t])):a.rejectWith(o,[h,t]),this}}),u=h.props;for(function(t,e){var i,s,n,o,r;for(i in t)if(n=e[s=U(i)],o=t[i],Array.isArray(o)&&(n=o[1],o=t[i]=o[0]),i!==s&&(t[s]=o,delete t[i]),(r=D.cssHooks[s])&&"expand"in r)for(i in o=r.expand(o),delete t[s],o)i in t||(t[i]=o[i],e[i]=n);else e[s]=n}(u,h.opts.specialEasing);s<n;s++)if(i=le.prefilters[s].call(h,o,u,h.opts))return _(i.stop)&&(D._queueHooks(h.elem,h.opts.queue).stop=i.stop.bind(i)),i;return D.map(u,ae,h),_(h.opts.start)&&h.opts.start.call(o,h),h.progress(h.opts.progress).done(h.opts.done,h.opts.complete).fail(h.opts.fail).always(h.opts.always),D.fx.timer(D.extend(l,{elem:o,anim:h,queue:h.opts.queue})),h}D.Animation=D.extend(le,{tweeners:{"*":[function(t,e){var i=this.createTween(t,e);return ot(i.elem,t,et.exec(e),i),i}]},tweener:function(t,e){for(var i,s=0,n=(t=_(t)?(e=t,["*"]):t.match(O)).length;s<n;s++)i=t[s],le.tweeners[i]=le.tweeners[i]||[],le.tweeners[i].unshift(e)},prefilters:[function(t,e,i){var s,n,o,r,a,l,h,u,c="width"in e||"height"in e,d=this,p={},f=t.style,g=t.nodeType&&st(t),m=X.get(t,"fxshow");for(s in i.queue||(null==(r=D._queueHooks(t,"fx")).unqueued&&(r.unqueued=0,a=r.empty.fire,r.empty.fire=function(){r.unqueued||a()}),r.unqueued++,d.always(function(){d.always(function(){r.unqueued--,D.queue(t,"fx").length||r.empty.fire()})})),e)if(n=e[s],ie.test(n)){if(delete e[s],o=o||"toggle"===n,n===(g?"hide":"show")){if("show"!==n||!m||void 0===m[s])continue;g=!0}p[s]=m&&m[s]||D.style(t,s)}if((l=!D.isEmptyObject(e))||!D.isEmptyObject(p))for(s in c&&1===t.nodeType&&(i.overflow=[f.overflow,f.overflowX,f.overflowY],null==(h=m&&m.display)&&(h=X.get(t,"display")),"none"===(u=D.css(t,"display"))&&(h?u=h:(at([t],!0),h=t.style.display||h,u=D.css(t,"display"),at([t]))),("inline"===u||"inline-block"===u&&null!=h)&&"none"===D.css(t,"float")&&(l||(d.done(function(){f.display=h}),null==h&&(u=f.display,h="none"===u?"":u)),f.display="inline-block")),i.overflow&&(f.overflow="hidden",d.always(function(){f.overflow=i.overflow[0],f.overflowX=i.overflow[1],f.overflowY=i.overflow[2]})),l=!1,p)l||(m?"hidden"in m&&(g=m.hidden):m=X.access(t,"fxshow",{display:h}),o&&(m.hidden=!g),g&&at([t],!0),d.done(function(){for(s in g||at([t]),X.remove(t,"fxshow"),p)D.style(t,s,p[s])})),l=ae(g?m[s]:0,s,d),s in m||(m[s]=l.start,g&&(l.end=l.start,l.start=0))}],prefilter:function(t,e){e?le.prefilters.unshift(t):le.prefilters.push(t)}}),D.speed=function(t,e,i){var s=t&&"object"==typeof t?D.extend({},t):{complete:i||!i&&e||_(t)&&t,duration:t,easing:i&&e||e&&!_(e)&&e};return D.fx.off?s.duration=0:"number"!=typeof s.duration&&(s.duration in D.fx.speeds?s.duration=D.fx.speeds[s.duration]:s.duration=D.fx.speeds._default),null!=s.queue&&!0!==s.queue||(s.queue="fx"),s.old=s.complete,s.complete=function(){_(s.old)&&s.old.call(this),s.queue&&D.dequeue(this,s.queue)},s},D.fn.extend({fadeTo:function(t,e,i,s){return this.filter(st).css("opacity",0).show().end().animate({opacity:e},t,i,s)},animate:function(e,t,i,s){var n=D.isEmptyObject(e),o=D.speed(t,i,s),r=function(){var t=le(this,D.extend({},e),o);(n||X.get(this,"finish"))&&t.stop(!0)};return r.finish=r,n||!1===o.queue?this.each(r):this.queue(o.queue,r)},stop:function(n,t,o){var r=function(t){var e=t.stop;delete t.stop,e(o)};return"string"!=typeof n&&(o=t,t=n,n=void 0),t&&!1!==n&&this.queue(n||"fx",[]),this.each(function(){var t=!0,e=null!=n&&n+"queueHooks",i=D.timers,s=X.get(this);if(e)s[e]&&s[e].stop&&r(s[e]);else for(e in s)s[e]&&s[e].stop&&se.test(e)&&r(s[e]);for(e=i.length;e--;)i[e].elem!==this||null!=n&&i[e].queue!==n||(i[e].anim.stop(o),t=!1,i.splice(e,1));!t&&o||D.dequeue(this,n)})},finish:function(r){return!1!==r&&(r=r||"fx"),this.each(function(){var t,e=X.get(this),i=e[r+"queue"],s=e[r+"queueHooks"],n=D.timers,o=i?i.length:0;for(e.finish=!0,D.queue(this,r,[]),s&&s.stop&&s.stop.call(this,!0),t=n.length;t--;)n[t].elem===this&&n[t].queue===r&&(n[t].anim.stop(!0),n.splice(t,1));for(t=0;t<o;t++)i[t]&&i[t].finish&&i[t].finish.call(this);delete e.finish})}}),D.each(["toggle","show","hide"],function(t,s){var n=D.fn[s];D.fn[s]=function(t,e,i){return null==t||"boolean"==typeof t?n.apply(this,arguments):this.animate(re(s,!0),t,e,i)}}),D.each({slideDown:re("show"),slideUp:re("hide"),slideToggle:re("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(t,s){D.fn[t]=function(t,e,i){return this.animate(s,t,e,i)}}),D.timers=[],D.fx.tick=function(){var t,e=0,i=D.timers;for(Jt=Date.now();e<i.length;e++)(t=i[e])()||i[e]!==t||i.splice(e--,1);i.length||D.fx.stop(),Jt=void 0},D.fx.timer=function(t){D.timers.push(t),D.fx.start()},D.fx.interval=13,D.fx.start=function(){Zt||(Zt=!0,ne())},D.fx.stop=function(){Zt=null},D.fx.speeds={slow:600,fast:200,_default:400},D.fn.delay=function(s,t){return s=D.fx&&D.fx.speeds[s]||s,t=t||"fx",this.queue(t,function(t,e){var i=k.setTimeout(t,s);e.stop=function(){k.clearTimeout(i)}})},te=C.createElement("input"),ee=C.createElement("select").appendChild(C.createElement("option")),te.type="checkbox",v.checkOn=""!==te.value,v.optSelected=ee.selected,(te=C.createElement("input")).value="t",te.type="radio",v.radioValue="t"===te.value;var he,ue=D.expr.attrHandle;D.fn.extend({attr:function(t,e){return q(this,D.attr,t,e,1<arguments.length)},removeAttr:function(t){return this.each(function(){D.removeAttr(this,t)})}}),D.extend({attr:function(t,e,i){var s,n,o=t.nodeType;if(3!==o&&8!==o&&2!==o)return void 0===t.getAttribute?D.prop(t,e,i):(1===o&&D.isXMLDoc(t)||(n=D.attrHooks[e.toLowerCase()]||(D.expr.match.bool.test(e)?he:void 0)),void 0!==i?null===i?void D.removeAttr(t,e):n&&"set"in n&&void 0!==(s=n.set(t,i,e))?s:(t.setAttribute(e,i+""),i):n&&"get"in n&&null!==(s=n.get(t,e))?s:null==(s=D.find.attr(t,e))?void 0:s)},attrHooks:{type:{set:function(t,e){if(!v.radioValue&&"radio"===e&&S(t,"input")){var i=t.value;return t.setAttribute("type",e),i&&(t.value=i),e}}}},removeAttr:function(t,e){var i,s=0,n=e&&e.match(O);if(n&&1===t.nodeType)for(;i=n[s++];)t.removeAttribute(i)}}),he={set:function(t,e,i){return!1===e?D.removeAttr(t,i):t.setAttribute(i,i),i}},D.each(D.expr.match.bool.source.match(/\w+/g),function(t,e){var r=ue[e]||D.find.attr;ue[e]=function(t,e,i){var s,n,o=e.toLowerCase();return i||(n=ue[o],ue[o]=s,s=null!=r(t,e,i)?o:null,ue[o]=n),s}});var ce=/^(?:input|select|textarea|button)$/i,de=/^(?:a|area)$/i;function pe(t){return(t.match(O)||[]).join(" ")}function fe(t){return t.getAttribute&&t.getAttribute("class")||""}function ge(t){return Array.isArray(t)?t:"string"==typeof t&&t.match(O)||[]}D.fn.extend({prop:function(t,e){return q(this,D.prop,t,e,1<arguments.length)},removeProp:function(t){return this.each(function(){delete this[D.propFix[t]||t]})}}),D.extend({prop:function(t,e,i){var s,n,o=t.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&D.isXMLDoc(t)||(e=D.propFix[e]||e,n=D.propHooks[e]),void 0!==i?n&&"set"in n&&void 0!==(s=n.set(t,i,e))?s:t[e]=i:n&&"get"in n&&null!==(s=n.get(t,e))?s:t[e]},propHooks:{tabIndex:{get:function(t){var e=D.find.attr(t,"tabindex");return e?parseInt(e,10):ce.test(t.nodeName)||de.test(t.nodeName)&&t.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),v.optSelected||(D.propHooks.selected={get:function(t){var e=t.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(t){var e=t.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),D.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){D.propFix[this.toLowerCase()]=this}),D.fn.extend({addClass:function(e){var t,i,s,n,o,r,a,l=0;if(_(e))return this.each(function(t){D(this).addClass(e.call(this,t,fe(this)))});if((t=ge(e)).length)for(;i=this[l++];)if(n=fe(i),s=1===i.nodeType&&" "+pe(n)+" "){for(r=0;o=t[r++];)s.indexOf(" "+o+" ")<0&&(s+=o+" ");n!==(a=pe(s))&&i.setAttribute("class",a)}return this},removeClass:function(e){var t,i,s,n,o,r,a,l=0;if(_(e))return this.each(function(t){D(this).removeClass(e.call(this,t,fe(this)))});if(!arguments.length)return this.attr("class","");if((t=ge(e)).length)for(;i=this[l++];)if(n=fe(i),s=1===i.nodeType&&" "+pe(n)+" "){for(r=0;o=t[r++];)for(;-1<s.indexOf(" "+o+" ");)s=s.replace(" "+o+" "," ");n!==(a=pe(s))&&i.setAttribute("class",a)}return this},toggleClass:function(n,e){var o=typeof n,r="string"===o||Array.isArray(n);return"boolean"==typeof e&&r?e?this.addClass(n):this.removeClass(n):_(n)?this.each(function(t){D(this).toggleClass(n.call(this,t,fe(this),e),e)}):this.each(function(){var t,e,i,s;if(r)for(e=0,i=D(this),s=ge(n);t=s[e++];)i.hasClass(t)?i.removeClass(t):i.addClass(t);else void 0!==n&&"boolean"!==o||((t=fe(this))&&X.set(this,"__className__",t),this.setAttribute&&this.setAttribute("class",t||!1===n?"":X.get(this,"__className__")||""))})},hasClass:function(t){var e,i,s=0;for(e=" "+t+" ";i=this[s++];)if(1===i.nodeType&&-1<(" "+pe(fe(i))+" ").indexOf(e))return!0;return!1}});var me=/\r/g;D.fn.extend({val:function(i){var s,t,n,e=this[0];return arguments.length?(n=_(i),this.each(function(t){var e;1===this.nodeType&&(null==(e=n?i.call(this,t,D(this).val()):i)?e="":"number"==typeof e?e+="":Array.isArray(e)&&(e=D.map(e,function(t){return null==t?"":t+""})),(s=D.valHooks[this.type]||D.valHooks[this.nodeName.toLowerCase()])&&"set"in s&&void 0!==s.set(this,e,"value")||(this.value=e))})):e?(s=D.valHooks[e.type]||D.valHooks[e.nodeName.toLowerCase()])&&"get"in s&&void 0!==(t=s.get(e,"value"))?t:"string"==typeof(t=e.value)?t.replace(me,""):null==t?"":t:void 0}}),D.extend({valHooks:{option:{get:function(t){var e=D.find.attr(t,"value");return null!=e?e:pe(D.text(t))}},select:{get:function(t){var e,i,s,n=t.options,o=t.selectedIndex,r="select-one"===t.type,a=r?null:[],l=r?o+1:n.length;for(s=o<0?l:r?o:0;s<l;s++)if(((i=n[s]).selected||s===o)&&!i.disabled&&(!i.parentNode.disabled||!S(i.parentNode,"optgroup"))){if(e=D(i).val(),r)return e;a.push(e)}return a},set:function(t,e){for(var i,s,n=t.options,o=D.makeArray(e),r=n.length;r--;)((s=n[r]).selected=-1<D.inArray(D.valHooks.option.get(s),o))&&(i=!0);return i||(t.selectedIndex=-1),o}}}}),D.each(["radio","checkbox"],function(){D.valHooks[this]={set:function(t,e){if(Array.isArray(e))return t.checked=-1<D.inArray(D(t).val(),e)}},v.checkOn||(D.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})}),v.focusin="onfocusin"in k;var ve=/^(?:focusinfocus|focusoutblur)$/,_e=function(t){t.stopPropagation()};D.extend(D.event,{trigger:function(t,e,i,s){var n,o,r,a,l,h,u,c,d=[i||C],p=m.call(t,"type")?t.type:t,f=m.call(t,"namespace")?t.namespace.split("."):[];if(o=c=r=i=i||C,3!==i.nodeType&&8!==i.nodeType&&!ve.test(p+D.event.triggered)&&(-1<p.indexOf(".")&&(p=(f=p.split(".")).shift(),f.sort()),l=p.indexOf(":")<0&&"on"+p,(t=t[D.expando]?t:new D.Event(p,"object"==typeof t&&t)).isTrigger=s?2:3,t.namespace=f.join("."),t.rnamespace=t.namespace?new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=i),e=null==e?[t]:D.makeArray(e,[t]),u=D.event.special[p]||{},s||!u.trigger||!1!==u.trigger.apply(i,e))){if(!s&&!u.noBubble&&!b(i)){for(a=u.delegateType||p,ve.test(a+p)||(o=o.parentNode);o;o=o.parentNode)d.push(o),r=o;r===(i.ownerDocument||C)&&d.push(r.defaultView||r.parentWindow||k)}for(n=0;(o=d[n++])&&!t.isPropagationStopped();)c=o,t.type=1<n?a:u.bindType||p,(h=(X.get(o,"events")||{})[t.type]&&X.get(o,"handle"))&&h.apply(o,e),(h=l&&o[l])&&h.apply&&K(o)&&(t.result=h.apply(o,e),!1===t.result&&t.preventDefault());return t.type=p,s||t.isDefaultPrevented()||u._default&&!1!==u._default.apply(d.pop(),e)||!K(i)||l&&_(i[p])&&!b(i)&&((r=i[l])&&(i[l]=null),D.event.triggered=p,t.isPropagationStopped()&&c.addEventListener(p,_e),i[p](),t.isPropagationStopped()&&c.removeEventListener(p,_e),D.event.triggered=void 0,r&&(i[l]=r)),t.result}},simulate:function(t,e,i){var s=D.extend(new D.Event,i,{type:t,isSimulated:!0});D.event.trigger(s,null,e)}}),D.fn.extend({trigger:function(t,e){return this.each(function(){D.event.trigger(t,e,this)})},triggerHandler:function(t,e){var i=this[0];if(i)return D.event.trigger(t,e,i,!0)}}),v.focusin||D.each({focus:"focusin",blur:"focusout"},function(i,s){var n=function(t){D.event.simulate(s,t.target,D.event.fix(t))};D.event.special[s]={setup:function(){var t=this.ownerDocument||this,e=X.access(t,s);e||t.addEventListener(i,n,!0),X.access(t,s,(e||0)+1)},teardown:function(){var t=this.ownerDocument||this,e=X.access(t,s)-1;e?X.access(t,s,e):(t.removeEventListener(i,n,!0),X.remove(t,s))}}});var be=k.location,ye=Date.now(),we=/\?/;D.parseXML=function(t){var e;if(!t||"string"!=typeof t)return null;try{e=(new k.DOMParser).parseFromString(t,"text/xml")}catch(t){e=void 0}return e&&!e.getElementsByTagName("parsererror").length||D.error("Invalid XML: "+t),e};var xe=/\[\]$/,ke=/\r?\n/g,Ce=/^(?:submit|button|image|reset|file)$/i,De=/^(?:input|select|textarea|keygen)/i;function Te(i,t,s,n){var e;if(Array.isArray(t))D.each(t,function(t,e){s||xe.test(i)?n(i,e):Te(i+"["+("object"==typeof e&&null!=e?t:"")+"]",e,s,n)});else if(s||"object"!==w(t))n(i,t);else for(e in t)Te(i+"["+e+"]",t[e],s,n)}D.param=function(t,e){var i,s=[],n=function(t,e){var i=_(e)?e():e;s[s.length]=encodeURIComponent(t)+"="+encodeURIComponent(null==i?"":i)};if(Array.isArray(t)||t.jquery&&!D.isPlainObject(t))D.each(t,function(){n(this.name,this.value)});else for(i in t)Te(i,t[i],e,n);return s.join("&")},D.fn.extend({serialize:function(){return D.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var t=D.prop(this,"elements");return t?D.makeArray(t):this}).filter(function(){var t=this.type;return this.name&&!D(this).is(":disabled")&&De.test(this.nodeName)&&!Ce.test(t)&&(this.checked||!lt.test(t))}).map(function(t,e){var i=D(this).val();return null==i?null:Array.isArray(i)?D.map(i,function(t){return{name:e.name,value:t.replace(ke,"\r\n")}}):{name:e.name,value:i.replace(ke,"\r\n")}}).get()}});var Se=/%20/g,Ie=/#.*$/,Pe=/([?&])_=[^&]*/,Me=/^(.*?):[ \t]*([^\r\n]*)$/gm,Ae=/^(?:GET|HEAD)$/,Ee=/^\/\//,Ne={},He={},Oe="*/".concat("*"),ze=C.createElement("a");function We(o){return function(t,e){"string"!=typeof t&&(e=t,t="*");var i,s=0,n=t.toLowerCase().match(O)||[];if(_(e))for(;i=n[s++];)"+"===i[0]?(i=i.slice(1)||"*",(o[i]=o[i]||[]).unshift(e)):(o[i]=o[i]||[]).push(e)}}function Le(e,n,o,r){var a={},l=e===He;function h(t){var s;return a[t]=!0,D.each(e[t]||[],function(t,e){var i=e(n,o,r);return"string"!=typeof i||l||a[i]?l?!(s=i):void 0:(n.dataTypes.unshift(i),h(i),!1)}),s}return h(n.dataTypes[0])||!a["*"]&&h("*")}function Fe(t,e){var i,s,n=D.ajaxSettings.flatOptions||{};for(i in e)void 0!==e[i]&&((n[i]?t:s||(s={}))[i]=e[i]);return s&&D.extend(!0,t,s),t}ze.href=be.href,D.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:be.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(be.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Oe,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":D.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?Fe(Fe(t,D.ajaxSettings),e):Fe(D.ajaxSettings,t)},ajaxPrefilter:We(Ne),ajaxTransport:We(He),ajax:function(t,e){"object"==typeof t&&(e=t,t=void 0),e=e||{};var u,c,d,i,p,s,f,g,n,o,m=D.ajaxSetup({},e),v=m.context||m,_=m.context&&(v.nodeType||v.jquery)?D(v):D.event,b=D.Deferred(),y=D.Callbacks("once memory"),w=m.statusCode||{},r={},a={},l="canceled",x={readyState:0,getResponseHeader:function(t){var e;if(f){if(!i)for(i={};e=Me.exec(d);)i[e[1].toLowerCase()]=e[2];e=i[t.toLowerCase()]}return null==e?null:e},getAllResponseHeaders:function(){return f?d:null},setRequestHeader:function(t,e){return null==f&&(t=a[t.toLowerCase()]=a[t.toLowerCase()]||t,r[t]=e),this},overrideMimeType:function(t){return null==f&&(m.mimeType=t),this},statusCode:function(t){var e;if(t)if(f)x.always(t[x.status]);else for(e in t)w[e]=[w[e],t[e]];return this},abort:function(t){var e=t||l;return u&&u.abort(e),h(0,e),this}};if(b.promise(x),m.url=((t||m.url||be.href)+"").replace(Ee,be.protocol+"//"),m.type=e.method||e.type||m.method||m.type,m.dataTypes=(m.dataType||"*").toLowerCase().match(O)||[""],null==m.crossDomain){s=C.createElement("a");try{s.href=m.url,s.href=s.href,m.crossDomain=ze.protocol+"//"+ze.host!=s.protocol+"//"+s.host}catch(t){m.crossDomain=!0}}if(m.data&&m.processData&&"string"!=typeof m.data&&(m.data=D.param(m.data,m.traditional)),Le(Ne,m,e,x),f)return x;for(n in(g=D.event&&m.global)&&0==D.active++&&D.event.trigger("ajaxStart"),m.type=m.type.toUpperCase(),m.hasContent=!Ae.test(m.type),c=m.url.replace(Ie,""),m.hasContent?m.data&&m.processData&&0===(m.contentType||"").indexOf("application/x-www-form-urlencoded")&&(m.data=m.data.replace(Se,"+")):(o=m.url.slice(c.length),m.data&&(m.processData||"string"==typeof m.data)&&(c+=(we.test(c)?"&":"?")+m.data,delete m.data),!1===m.cache&&(c=c.replace(Pe,"$1"),o=(we.test(c)?"&":"?")+"_="+ye+++o),m.url=c+o),m.ifModified&&(D.lastModified[c]&&x.setRequestHeader("If-Modified-Since",D.lastModified[c]),D.etag[c]&&x.setRequestHeader("If-None-Match",D.etag[c])),(m.data&&m.hasContent&&!1!==m.contentType||e.contentType)&&x.setRequestHeader("Content-Type",m.contentType),x.setRequestHeader("Accept",m.dataTypes[0]&&m.accepts[m.dataTypes[0]]?m.accepts[m.dataTypes[0]]+("*"!==m.dataTypes[0]?", "+Oe+"; q=0.01":""):m.accepts["*"]),m.headers)x.setRequestHeader(n,m.headers[n]);if(m.beforeSend&&(!1===m.beforeSend.call(v,x,m)||f))return x.abort();if(l="abort",y.add(m.complete),x.done(m.success),x.fail(m.error),u=Le(He,m,e,x)){if(x.readyState=1,g&&_.trigger("ajaxSend",[x,m]),f)return x;m.async&&0<m.timeout&&(p=k.setTimeout(function(){x.abort("timeout")},m.timeout));try{f=!1,u.send(r,h)}catch(t){if(f)throw t;h(-1,t)}}else h(-1,"No Transport");function h(t,e,i,s){var n,o,r,a,l,h=e;f||(f=!0,p&&k.clearTimeout(p),u=void 0,d=s||"",x.readyState=0<t?4:0,n=200<=t&&t<300||304===t,i&&(a=function(t,e,i){for(var s,n,o,r,a=t.contents,l=t.dataTypes;"*"===l[0];)l.shift(),void 0===s&&(s=t.mimeType||e.getResponseHeader("Content-Type"));if(s)for(n in a)if(a[n]&&a[n].test(s)){l.unshift(n);break}if(l[0]in i)o=l[0];else{for(n in i){if(!l[0]||t.converters[n+" "+l[0]]){o=n;break}r||(r=n)}o=o||r}if(o)return o!==l[0]&&l.unshift(o),i[o]}(m,x,i)),a=function(t,e,i,s){var n,o,r,a,l,h={},u=t.dataTypes.slice();if(u[1])for(r in t.converters)h[r.toLowerCase()]=t.converters[r];for(o=u.shift();o;)if(t.responseFields[o]&&(i[t.responseFields[o]]=e),!l&&s&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),l=o,o=u.shift())if("*"===o)o=l;else if("*"!==l&&l!==o){if(!(r=h[l+" "+o]||h["* "+o]))for(n in h)if((a=n.split(" "))[1]===o&&(r=h[l+" "+a[0]]||h["* "+a[0]])){!0===r?r=h[n]:!0!==h[n]&&(o=a[0],u.unshift(a[1]));break}if(!0!==r)if(r&&t.throws)e=r(e);else try{e=r(e)}catch(t){return{state:"parsererror",error:r?t:"No conversion from "+l+" to "+o}}}return{state:"success",data:e}}(m,a,x,n),n?(m.ifModified&&((l=x.getResponseHeader("Last-Modified"))&&(D.lastModified[c]=l),(l=x.getResponseHeader("etag"))&&(D.etag[c]=l)),204===t||"HEAD"===m.type?h="nocontent":304===t?h="notmodified":(h=a.state,o=a.data,n=!(r=a.error))):(r=h,!t&&h||(h="error",t<0&&(t=0))),x.status=t,x.statusText=(e||h)+"",n?b.resolveWith(v,[o,h,x]):b.rejectWith(v,[x,h,r]),x.statusCode(w),w=void 0,g&&_.trigger(n?"ajaxSuccess":"ajaxError",[x,m,n?o:r]),y.fireWith(v,[x,h]),g&&(_.trigger("ajaxComplete",[x,m]),--D.active||D.event.trigger("ajaxStop")))}return x},getJSON:function(t,e,i){return D.get(t,e,i,"json")},getScript:function(t,e){return D.get(t,void 0,e,"script")}}),D.each(["get","post"],function(t,n){D[n]=function(t,e,i,s){return _(e)&&(s=s||i,i=e,e=void 0),D.ajax(D.extend({url:t,type:n,dataType:s,data:e,success:i},D.isPlainObject(t)&&t))}}),D._evalUrl=function(t){return D.ajax({url:t,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,throws:!0})},D.fn.extend({wrapAll:function(t){var e;return this[0]&&(_(t)&&(t=t.call(this[0])),e=D(t,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var t=this;t.firstElementChild;)t=t.firstElementChild;return t}).append(this)),this},wrapInner:function(i){return _(i)?this.each(function(t){D(this).wrapInner(i.call(this,t))}):this.each(function(){var t=D(this),e=t.contents();e.length?e.wrapAll(i):t.append(i)})},wrap:function(e){var i=_(e);return this.each(function(t){D(this).wrapAll(i?e.call(this,t):e)})},unwrap:function(t){return this.parent(t).not("body").each(function(){D(this).replaceWith(this.childNodes)}),this}}),D.expr.pseudos.hidden=function(t){return!D.expr.pseudos.visible(t)},D.expr.pseudos.visible=function(t){return!!(t.offsetWidth||t.offsetHeight||t.getClientRects().length)},D.ajaxSettings.xhr=function(){try{return new k.XMLHttpRequest}catch(t){}};var Re={0:200,1223:204},je=D.ajaxSettings.xhr();v.cors=!!je&&"withCredentials"in je,v.ajax=je=!!je,D.ajaxTransport(function(n){var o,r;if(v.cors||je&&!n.crossDomain)return{send:function(t,e){var i,s=n.xhr();if(s.open(n.type,n.url,n.async,n.username,n.password),n.xhrFields)for(i in n.xhrFields)s[i]=n.xhrFields[i];for(i in n.mimeType&&s.overrideMimeType&&s.overrideMimeType(n.mimeType),n.crossDomain||t["X-Requested-With"]||(t["X-Requested-With"]="XMLHttpRequest"),t)s.setRequestHeader(i,t[i]);o=function(t){return function(){o&&(o=r=s.onload=s.onerror=s.onabort=s.ontimeout=s.onreadystatechange=null,"abort"===t?s.abort():"error"===t?"number"!=typeof s.status?e(0,"error"):e(s.status,s.statusText):e(Re[s.status]||s.status,s.statusText,"text"!==(s.responseType||"text")||"string"!=typeof s.responseText?{binary:s.response}:{text:s.responseText},s.getAllResponseHeaders()))}},s.onload=o(),r=s.onerror=s.ontimeout=o("error"),void 0!==s.onabort?s.onabort=r:s.onreadystatechange=function(){4===s.readyState&&k.setTimeout(function(){o&&r()})},o=o("abort");try{s.send(n.hasContent&&n.data||null)}catch(t){if(o)throw t}},abort:function(){o&&o()}}}),D.ajaxPrefilter(function(t){t.crossDomain&&(t.contents.script=!1)}),D.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(t){return D.globalEval(t),t}}}),D.ajaxPrefilter("script",function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET")}),D.ajaxTransport("script",function(i){var s,n;if(i.crossDomain)return{send:function(t,e){s=D("<script>").prop({charset:i.scriptCharset,src:i.url}).on("load error",n=function(t){s.remove(),n=null,t&&e("error"===t.type?404:200,t.type)}),C.head.appendChild(s[0])},abort:function(){n&&n()}}});var qe,Be=[],Ye=/(=)\?(?=&|$)|\?\?/;D.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=Be.pop()||D.expando+"_"+ye++;return this[t]=!0,t}}),D.ajaxPrefilter("json jsonp",function(t,e,i){var s,n,o,r=!1!==t.jsonp&&(Ye.test(t.url)?"url":"string"==typeof t.data&&0===(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&Ye.test(t.data)&&"data");if(r||"jsonp"===t.dataTypes[0])return s=t.jsonpCallback=_(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,r?t[r]=t[r].replace(Ye,"$1"+s):!1!==t.jsonp&&(t.url+=(we.test(t.url)?"&":"?")+t.jsonp+"="+s),t.converters["script json"]=function(){return o||D.error(s+" was not called"),o[0]},t.dataTypes[0]="json",n=k[s],k[s]=function(){o=arguments},i.always(function(){void 0===n?D(k).removeProp(s):k[s]=n,t[s]&&(t.jsonpCallback=e.jsonpCallback,Be.push(s)),o&&_(n)&&n(o[0]),o=n=void 0}),"script"}),v.createHTMLDocument=((qe=C.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===qe.childNodes.length),D.parseHTML=function(t,e,i){return"string"!=typeof t?[]:("boolean"==typeof e&&(i=e,e=!1),e||(v.createHTMLDocument?((s=(e=C.implementation.createHTMLDocument("")).createElement("base")).href=C.location.href,e.head.appendChild(s)):e=C),o=!i&&[],(n=I.exec(t))?[e.createElement(n[1])]:(n=vt([t],e,o),o&&o.length&&D(o).remove(),D.merge([],n.childNodes)));var s,n,o},D.fn.load=function(t,e,i){var s,n,o,r=this,a=t.indexOf(" ");return-1<a&&(s=pe(t.slice(a)),t=t.slice(0,a)),_(e)?(i=e,e=void 0):e&&"object"==typeof e&&(n="POST"),0<r.length&&D.ajax({url:t,type:n||"GET",dataType:"html",data:e}).done(function(t){o=arguments,r.html(s?D("<div>").append(D.parseHTML(t)).find(s):t)}).always(i&&function(t,e){r.each(function(){i.apply(this,o||[t.responseText,e,t])})}),this},D.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(t,e){D.fn[e]=function(t){return this.on(e,t)}}),D.expr.pseudos.animated=function(e){return D.grep(D.timers,function(t){return e===t.elem}).length},D.offset={setOffset:function(t,e,i){var s,n,o,r,a,l,h=D.css(t,"position"),u=D(t),c={};"static"===h&&(t.style.position="relative"),a=u.offset(),o=D.css(t,"top"),l=D.css(t,"left"),n=("absolute"===h||"fixed"===h)&&-1<(o+l).indexOf("auto")?(r=(s=u.position()).top,s.left):(r=parseFloat(o)||0,parseFloat(l)||0),_(e)&&(e=e.call(t,i,D.extend({},a))),null!=e.top&&(c.top=e.top-a.top+r),null!=e.left&&(c.left=e.left-a.left+n),"using"in e?e.using.call(t,c):u.css(c)}},D.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each(function(t){D.offset.setOffset(this,e,t)});var t,i,s=this[0];return s?s.getClientRects().length?(t=s.getBoundingClientRect(),i=s.ownerDocument.defaultView,{top:t.top+i.pageYOffset,left:t.left+i.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var t,e,i,s=this[0],n={top:0,left:0};if("fixed"===D.css(s,"position"))e=s.getBoundingClientRect();else{for(e=this.offset(),i=s.ownerDocument,t=s.offsetParent||i.documentElement;t&&(t===i.body||t===i.documentElement)&&"static"===D.css(t,"position");)t=t.parentNode;t&&t!==s&&1===t.nodeType&&((n=D(t).offset()).top+=D.css(t,"borderTopWidth",!0),n.left+=D.css(t,"borderLeftWidth",!0))}return{top:e.top-n.top-D.css(s,"marginTop",!0),left:e.left-n.left-D.css(s,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent;t&&"static"===D.css(t,"position");)t=t.offsetParent;return t||_t})}}),D.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(e,n){var o="pageYOffset"===n;D.fn[e]=function(t){return q(this,function(t,e,i){var s;if(b(t)?s=t:9===t.nodeType&&(s=t.defaultView),void 0===i)return s?s[n]:t[e];s?s.scrollTo(o?s.pageXOffset:i,o?i:s.pageYOffset):t[e]=i},e,t,arguments.length)}}),D.each(["top","left"],function(t,i){D.cssHooks[i]=Rt(v.pixelPosition,function(t,e){if(e)return e=Ft(t,i),zt.test(e)?D(t).position()[i]+"px":e})}),D.each({Height:"height",Width:"width"},function(r,a){D.each({padding:"inner"+r,content:a,"":"outer"+r},function(s,o){D.fn[o]=function(t,e){var i=arguments.length&&(s||"boolean"!=typeof t),n=s||(!0===t||!0===e?"margin":"border");return q(this,function(t,e,i){var s;return b(t)?0===o.indexOf("outer")?t["inner"+r]:t.document.documentElement["client"+r]:9===t.nodeType?(s=t.documentElement,Math.max(t.body["scroll"+r],s["scroll"+r],t.body["offset"+r],s["offset"+r],s["client"+r])):void 0===i?D.css(t,e,n):D.style(t,e,i,n)},a,i?t:void 0,i)}})}),D.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(t,i){D.fn[i]=function(t,e){return 0<arguments.length?this.on(i,null,t,e):this.trigger(i)}}),D.fn.extend({hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)}}),D.fn.extend({bind:function(t,e,i){return this.on(t,null,e,i)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,i,s){return this.on(e,t,i,s)},undelegate:function(t,e,i){return 1===arguments.length?this.off(t,"**"):this.off(e,t||"**",i)}}),D.proxy=function(t,e){var i,s,n;if("string"==typeof e&&(i=t[e],e=t,t=i),_(t))return s=a.call(arguments,2),(n=function(){return t.apply(e||this,s.concat(a.call(arguments)))}).guid=t.guid=t.guid||D.guid++,n},D.holdReady=function(t){t?D.readyWait++:D.ready(!0)},D.isArray=Array.isArray,D.parseJSON=JSON.parse,D.nodeName=S,D.isFunction=_,D.isWindow=b,D.camelCase=U,D.type=w,D.now=Date.now,D.isNumeric=function(t){var e=D.type(t);return("number"===e||"string"===e)&&!isNaN(t-parseFloat(t))},"function"==typeof define&&define.amd&&define("jquery",[],function(){return D});var $e=k.jQuery,Ue=k.$;return D.noConflict=function(t){return k.$===D&&(k.$=Ue),t&&k.jQuery===D&&(k.jQuery=$e),D},t||(k.jQuery=k.$=D),D}),function(t){"function"==typeof define&&define.amd?define(["jquery"],t):t(jQuery)}(function(T){T.ui=T.ui||{};T.ui.version="1.12.1";var n,i=0,a=Array.prototype.slice;T.cleanData=(n=T.cleanData,function(t){var e,i,s;for(s=0;null!=(i=t[s]);s++)try{(e=T._data(i,"events"))&&e.remove&&T(i).triggerHandler("remove")}catch(t){}n(t)}),T.widget=function(t,i,e){var s,n,o,r={},a=t.split(".")[0],l=a+"-"+(t=t.split(".")[1]);return e||(e=i,i=T.Widget),T.isArray(e)&&(e=T.extend.apply(null,[{}].concat(e))),T.expr[":"][l.toLowerCase()]=function(t){return!!T.data(t,l)},T[a]=T[a]||{},s=T[a][t],n=T[a][t]=function(t,e){if(!this._createWidget)return new n(t,e);arguments.length&&this._createWidget(t,e)},T.extend(n,s,{version:e.version,_proto:T.extend({},e),_childConstructors:[]}),(o=new i).options=T.widget.extend({},o.options),T.each(e,function(e,o){T.isFunction(o)?r[e]=function(){function s(){return i.prototype[e].apply(this,arguments)}function n(t){return i.prototype[e].apply(this,t)}return function(){var t,e=this._super,i=this._superApply;return this._super=s,this._superApply=n,t=o.apply(this,arguments),this._super=e,this._superApply=i,t}}():r[e]=o}),n.prototype=T.widget.extend(o,{widgetEventPrefix:s&&o.widgetEventPrefix||t},r,{constructor:n,namespace:a,widgetName:t,widgetFullName:l}),s?(T.each(s._childConstructors,function(t,e){var i=e.prototype;T.widget(i.namespace+"."+i.widgetName,n,e._proto)}),delete s._childConstructors):i._childConstructors.push(n),T.widget.bridge(t,n),n},T.widget.extend=function(t){for(var e,i,s=a.call(arguments,1),n=0,o=s.length;n<o;n++)for(e in s[n])i=s[n][e],s[n].hasOwnProperty(e)&&void 0!==i&&(T.isPlainObject(i)?t[e]=T.isPlainObject(t[e])?T.widget.extend({},t[e],i):T.widget.extend({},i):t[e]=i);return t},T.widget.bridge=function(o,e){var r=e.prototype.widgetFullName||o;T.fn[o]=function(i){var t="string"==typeof i,s=a.call(arguments,1),n=this;return t?this.length||"instance"!==i?this.each(function(){var t,e=T.data(this,r);return"instance"===i?(n=e,!1):e?T.isFunction(e[i])&&"_"!==i.charAt(0)?(t=e[i].apply(e,s))!==e&&void 0!==t?(n=t&&t.jquery?n.pushStack(t.get()):t,!1):void 0:T.error("no such method '"+i+"' for "+o+" widget instance"):T.error("cannot call methods on "+o+" prior to initialization; attempted to call method '"+i+"'")}):n=void 0:(s.length&&(i=T.widget.extend.apply(null,[i].concat(s))),this.each(function(){var t=T.data(this,r);t?(t.option(i||{}),t._init&&t._init()):T.data(this,r,new e(i,this))})),n}},T.Widget=function(){},T.Widget._childConstructors=[],T.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{classes:{},disabled:!1,create:null},_createWidget:function(t,e){e=T(e||this.defaultElement||this)[0],this.element=T(e),this.uuid=i++,this.eventNamespace="."+this.widgetName+this.uuid,this.bindings=T(),this.hoverable=T(),this.focusable=T(),this.classesElementLookup={},e!==this&&(T.data(e,this.widgetFullName,this),this._on(!0,this.element,{remove:function(t){t.target===e&&this.destroy()}}),this.document=T(e.style?e.ownerDocument:e.document||e),this.window=T(this.document[0].defaultView||this.document[0].parentWindow)),this.options=T.widget.extend({},this.options,this._getCreateOptions(),t),this._create(),this.options.disabled&&this._setOptionDisabled(this.options.disabled),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:function(){return{}},_getCreateEventData:T.noop,_create:T.noop,_init:T.noop,destroy:function(){var i=this;this._destroy(),T.each(this.classesElementLookup,function(t,e){i._removeClass(e,t)}),this.element.off(this.eventNamespace).removeData(this.widgetFullName),this.widget().off(this.eventNamespace).removeAttr("aria-disabled"),this.bindings.off(this.eventNamespace)},_destroy:T.noop,widget:function(){return this.element},option:function(t,e){var i,s,n,o=t;if(0===arguments.length)return T.widget.extend({},this.options);if("string"==typeof t)if(o={},t=(i=t.split(".")).shift(),i.length){for(s=o[t]=T.widget.extend({},this.options[t]),n=0;n<i.length-1;n++)s[i[n]]=s[i[n]]||{},s=s[i[n]];if(t=i.pop(),1===arguments.length)return void 0===s[t]?null:s[t];s[t]=e}else{if(1===arguments.length)return void 0===this.options[t]?null:this.options[t];o[t]=e}return this._setOptions(o),this},_setOptions:function(t){var e;for(e in t)this._setOption(e,t[e]);return this},_setOption:function(t,e){return"classes"===t&&this._setOptionClasses(e),this.options[t]=e,"disabled"===t&&this._setOptionDisabled(e),this},_setOptionClasses:function(t){var e,i,s;for(e in t)s=this.classesElementLookup[e],t[e]!==this.options.classes[e]&&s&&s.length&&(i=T(s.get()),this._removeClass(s,e),i.addClass(this._classes({element:i,keys:e,classes:t,add:!0})))},_setOptionDisabled:function(t){this._toggleClass(this.widget(),this.widgetFullName+"-disabled",null,!!t),t&&(this._removeClass(this.hoverable,null,"ui-state-hover"),this._removeClass(this.focusable,null,"ui-state-focus"))},enable:function(){return this._setOptions({disabled:!1})},disable:function(){return this._setOptions({disabled:!0})},_classes:function(n){var o=[],r=this;function t(t,e){var i,s;for(s=0;s<t.length;s++)i=r.classesElementLookup[t[s]]||T(),i=n.add?T(T.unique(i.get().concat(n.element.get()))):T(i.not(n.element).get()),r.classesElementLookup[t[s]]=i,o.push(t[s]),e&&n.classes[t[s]]&&o.push(n.classes[t[s]])}return n=T.extend({element:this.element,classes:this.options.classes||{}},n),this._on(n.element,{remove:"_untrackClassesElement"}),n.keys&&t(n.keys.match(/\S+/g)||[],!0),n.extra&&t(n.extra.match(/\S+/g)||[]),o.join(" ")},_untrackClassesElement:function(i){var s=this;T.each(s.classesElementLookup,function(t,e){-1!==T.inArray(i.target,e)&&(s.classesElementLookup[t]=T(e.not(i.target).get()))})},_removeClass:function(t,e,i){return this._toggleClass(t,e,i,!1)},_addClass:function(t,e,i){return this._toggleClass(t,e,i,!0)},_toggleClass:function(t,e,i,s){s="boolean"==typeof s?s:i;var n="string"==typeof t||null===t,o={extra:n?e:i,keys:n?t:e,element:n?this.element:t,add:s};return o.element.toggleClass(this._classes(o),s),this},_on:function(r,a,t){var l,h=this;"boolean"!=typeof r&&(t=a,a=r,r=!1),t?(a=l=T(a),this.bindings=this.bindings.add(a)):(t=a,a=this.element,l=this.widget()),T.each(t,function(t,e){function i(){if(r||!0!==h.options.disabled&&!T(this).hasClass("ui-state-disabled"))return("string"==typeof e?h[e]:e).apply(h,arguments)}"string"!=typeof e&&(i.guid=e.guid=e.guid||i.guid||T.guid++);var s=t.match(/^([\w:-]*)\s*(.*)$/),n=s[1]+h.eventNamespace,o=s[2];o?l.on(n,o,i):a.on(n,i)})},_off:function(t,e){e=(e||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,t.off(e).off(e),this.bindings=T(this.bindings.not(t).get()),this.focusable=T(this.focusable.not(t).get()),this.hoverable=T(this.hoverable.not(t).get())},_delay:function(t,e){var i=this;return setTimeout(function(){return("string"==typeof t?i[t]:t).apply(i,arguments)},e||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){this._addClass(T(t.currentTarget),null,"ui-state-hover")},mouseleave:function(t){this._removeClass(T(t.currentTarget),null,"ui-state-hover")}})},_focusable:function(t){this.focusable=this.focusable.add(t),this._on(t,{focusin:function(t){this._addClass(T(t.currentTarget),null,"ui-state-focus")},focusout:function(t){this._removeClass(T(t.currentTarget),null,"ui-state-focus")}})},_trigger:function(t,e,i){var s,n,o=this.options[t];if(i=i||{},(e=T.Event(e)).type=(t===this.widgetEventPrefix?t:this.widgetEventPrefix+t).toLowerCase(),e.target=this.element[0],n=e.originalEvent)for(s in n)s in e||(e[s]=n[s]);return this.element.trigger(e,i),!(T.isFunction(o)&&!1===o.apply(this.element[0],[e].concat(i))||e.isDefaultPrevented())}},T.each({show:"fadeIn",hide:"fadeOut"},function(o,r){T.Widget.prototype["_"+o]=function(e,t,i){var s;"string"==typeof t&&(t={effect:t});var n=t?!0===t||"number"==typeof t?r:t.effect||r:o;"number"==typeof(t=t||{})&&(t={duration:t}),s=!T.isEmptyObject(t),t.complete=i,t.delay&&e.delay(t.delay),s&&T.effects&&T.effects.effect[n]?e[o](t):n!==o&&e[n]?e[n](t.duration,t.easing,i):e.queue(function(t){T(this)[o](),i&&i.call(e[0]),t()})}});T.widget;!function(){var n,x=Math.max,k=Math.abs,s=/left|center|right/,o=/top|center|bottom/,r=/[\+\-]\d+(\.[\d]+)?%?/,a=/^\w+/,l=/%$/,h=T.fn.position;function C(t,e,i){return[parseFloat(t[0])*(l.test(t[0])?e/100:1),parseFloat(t[1])*(l.test(t[1])?i/100:1)]}function D(t,e){return parseInt(T.css(t,e),10)||0}T.position={scrollbarWidth:function(){if(void 0!==n)return n;var t,e,i=T("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),s=i.children()[0];return T("body").append(i),t=s.offsetWidth,i.css("overflow","scroll"),t===(e=s.offsetWidth)&&(e=i[0].clientWidth),i.remove(),n=t-e},getScrollInfo:function(t){var e=t.isWindow||t.isDocument?"":t.element.css("overflow-x"),i=t.isWindow||t.isDocument?"":t.element.css("overflow-y"),s="scroll"===e||"auto"===e&&t.width<t.element[0].scrollWidth;return{width:"scroll"===i||"auto"===i&&t.height<t.element[0].scrollHeight?T.position.scrollbarWidth():0,height:s?T.position.scrollbarWidth():0}},getWithinInfo:function(t){var e=T(t||window),i=T.isWindow(e[0]),s=!!e[0]&&9===e[0].nodeType;return{element:e,isWindow:i,isDocument:s,offset:!i&&!s?T(t).offset():{left:0,top:0},scrollLeft:e.scrollLeft(),scrollTop:e.scrollTop(),width:e.outerWidth(),height:e.outerHeight()}}},T.fn.position=function(c){if(!c||!c.of)return h.apply(this,arguments);c=T.extend({},c);var d,p,f,g,m,t,e,i,v=T(c.of),_=T.position.getWithinInfo(c.within),b=T.position.getScrollInfo(_),y=(c.collision||"flip").split(" "),w={};return t=9===(i=(e=v)[0]).nodeType?{width:e.width(),height:e.height(),offset:{top:0,left:0}}:T.isWindow(i)?{width:e.width(),height:e.height(),offset:{top:e.scrollTop(),left:e.scrollLeft()}}:i.preventDefault?{width:0,height:0,offset:{top:i.pageY,left:i.pageX}}:{width:e.outerWidth(),height:e.outerHeight(),offset:e.offset()},v[0].preventDefault&&(c.at="left top"),p=t.width,f=t.height,g=t.offset,m=T.extend({},g),T.each(["my","at"],function(){var t,e,i=(c[this]||"").split(" ");1===i.length&&(i=s.test(i[0])?i.concat(["center"]):o.test(i[0])?["center"].concat(i):["center","center"]),i[0]=s.test(i[0])?i[0]:"center",i[1]=o.test(i[1])?i[1]:"center",t=r.exec(i[0]),e=r.exec(i[1]),w[this]=[t?t[0]:0,e?e[0]:0],c[this]=[a.exec(i[0])[0],a.exec(i[1])[0]]}),1===y.length&&(y[1]=y[0]),"right"===c.at[0]?m.left+=p:"center"===c.at[0]&&(m.left+=p/2),"bottom"===c.at[1]?m.top+=f:"center"===c.at[1]&&(m.top+=f/2),d=C(w.at,p,f),m.left+=d[0],m.top+=d[1],this.each(function(){var i,t,r=T(this),a=r.outerWidth(),l=r.outerHeight(),e=D(this,"marginLeft"),s=D(this,"marginTop"),n=a+e+D(this,"marginRight")+b.width,o=l+s+D(this,"marginBottom")+b.height,h=T.extend({},m),u=C(w.my,r.outerWidth(),r.outerHeight());"right"===c.my[0]?h.left-=a:"center"===c.my[0]&&(h.left-=a/2),"bottom"===c.my[1]?h.top-=l:"center"===c.my[1]&&(h.top-=l/2),h.left+=u[0],h.top+=u[1],i={marginLeft:e,marginTop:s},T.each(["left","top"],function(t,e){T.ui.position[y[t]]&&T.ui.position[y[t]][e](h,{targetWidth:p,targetHeight:f,elemWidth:a,elemHeight:l,collisionPosition:i,collisionWidth:n,collisionHeight:o,offset:[d[0]+u[0],d[1]+u[1]],my:c.my,at:c.at,within:_,elem:r})}),c.using&&(t=function(t){var e=g.left-h.left,i=e+p-a,s=g.top-h.top,n=s+f-l,o={target:{element:v,left:g.left,top:g.top,width:p,height:f},element:{element:r,left:h.left,top:h.top,width:a,height:l},horizontal:i<0?"left":0<e?"right":"center",vertical:n<0?"top":0<s?"bottom":"middle"};p<a&&k(e+i)<p&&(o.horizontal="center"),f<l&&k(s+n)<f&&(o.vertical="middle"),x(k(e),k(i))>x(k(s),k(n))?o.important="horizontal":o.important="vertical",c.using.call(this,t,o)}),r.offset(T.extend(h,{using:t}))})},T.ui.position={fit:{left:function(t,e){var i,s=e.within,n=s.isWindow?s.scrollLeft:s.offset.left,o=s.width,r=t.left-e.collisionPosition.marginLeft,a=n-r,l=r+e.collisionWidth-o-n;e.collisionWidth>o?0<a&&l<=0?(i=t.left+a+e.collisionWidth-o-n,t.left+=a-i):t.left=0<l&&a<=0?n:l<a?n+o-e.collisionWidth:n:0<a?t.left+=a:0<l?t.left-=l:t.left=x(t.left-r,t.left)},top:function(t,e){var i,s=e.within,n=s.isWindow?s.scrollTop:s.offset.top,o=e.within.height,r=t.top-e.collisionPosition.marginTop,a=n-r,l=r+e.collisionHeight-o-n;e.collisionHeight>o?0<a&&l<=0?(i=t.top+a+e.collisionHeight-o-n,t.top+=a-i):t.top=0<l&&a<=0?n:l<a?n+o-e.collisionHeight:n:0<a?t.top+=a:0<l?t.top-=l:t.top=x(t.top-r,t.top)}},flip:{left:function(t,e){var i,s,n=e.within,o=n.offset.left+n.scrollLeft,r=n.width,a=n.isWindow?n.scrollLeft:n.offset.left,l=t.left-e.collisionPosition.marginLeft,h=l-a,u=l+e.collisionWidth-r-a,c="left"===e.my[0]?-e.elemWidth:"right"===e.my[0]?e.elemWidth:0,d="left"===e.at[0]?e.targetWidth:"right"===e.at[0]?-e.targetWidth:0,p=-2*e.offset[0];h<0?((i=t.left+c+d+p+e.collisionWidth-r-o)<0||i<k(h))&&(t.left+=c+d+p):0<u&&(0<(s=t.left-e.collisionPosition.marginLeft+c+d+p-a)||k(s)<u)&&(t.left+=c+d+p)},top:function(t,e){var i,s,n=e.within,o=n.offset.top+n.scrollTop,r=n.height,a=n.isWindow?n.scrollTop:n.offset.top,l=t.top-e.collisionPosition.marginTop,h=l-a,u=l+e.collisionHeight-r-a,c="top"===e.my[1]?-e.elemHeight:"bottom"===e.my[1]?e.elemHeight:0,d="top"===e.at[1]?e.targetHeight:"bottom"===e.at[1]?-e.targetHeight:0,p=-2*e.offset[1];h<0?((s=t.top+c+d+p+e.collisionHeight-r-o)<0||s<k(h))&&(t.top+=c+d+p):0<u&&(0<(i=t.top-e.collisionPosition.marginTop+c+d+p-a)||k(i)<u)&&(t.top+=c+d+p)}},flipfit:{left:function(){T.ui.position.flip.left.apply(this,arguments),T.ui.position.fit.left.apply(this,arguments)},top:function(){T.ui.position.flip.top.apply(this,arguments),T.ui.position.fit.top.apply(this,arguments)}}}}();T.ui.position,T.extend(T.expr[":"],{data:T.expr.createPseudo?T.expr.createPseudo(function(e){return function(t){return!!T.data(t,e)}}):function(t,e,i){return!!T.data(t,i[3])}}),T.fn.extend({disableSelection:(t="onselectstart"in document.createElement("div")?"selectstart":"mousedown",function(){return this.on(t+".ui-disableSelection",function(t){t.preventDefault()})}),enableSelection:function(){return this.off(".ui-disableSelection")}});var t,s,l="ui-effects-",h="ui-effects-style",c="ui-effects-animated",u=T;T.effects={effect:{}},function(u,c){var h,d=/^([\-+])=\s*(\d+\.?\d*)/,t=[{re:/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(t){return[t[1],t[2],t[3],t[4]]}},{re:/rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(t){return[2.55*t[1],2.55*t[2],2.55*t[3],t[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(t){return[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(t){return[parseInt(t[1]+t[1],16),parseInt(t[2]+t[2],16),parseInt(t[3]+t[3],16)]}},{re:/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,space:"hsla",parse:function(t){return[t[1],t[2]/100,t[3]/100,t[4]]}}],p=u.Color=function(t,e,i,s){return new u.Color.fn.parse(t,e,i,s)},f={rgba:{props:{red:{idx:0,type:"byte"},green:{idx:1,type:"byte"},blue:{idx:2,type:"byte"}}},hsla:{props:{hue:{idx:0,type:"degrees"},saturation:{idx:1,type:"percent"},lightness:{idx:2,type:"percent"}}}},g={byte:{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},r=p.support={},e=u("<p>")[0],m=u.each;function v(t,e,i){var s=g[e.type]||{};return null==t?i||!e.def?null:e.def:(t=s.floor?~~t:parseFloat(t),isNaN(t)?e.def:s.mod?(t+s.mod)%s.mod:t<0?0:s.max<t?s.max:t)}function a(r){var a=p(),l=a._rgba=[];return r=r.toLowerCase(),m(t,function(t,e){var i,s=e.re.exec(r),n=s&&e.parse(s),o=e.space||"rgba";if(n)return i=a[o](n),a[f[o].cache]=i[f[o].cache],l=a._rgba=i._rgba,!1}),l.length?("0,0,0,0"===l.join()&&u.extend(l,h.transparent),a):h[r]}function l(t,e,i){return 6*(i=(i+1)%1)<1?t+(e-t)*i*6:2*i<1?e:3*i<2?t+(e-t)*(2/3-i)*6:t}e.style.cssText="background-color:rgba(1,1,1,.5)",r.rgba=-1<e.style.backgroundColor.indexOf("rgba"),m(f,function(t,e){e.cache="_"+t,e.props.alpha={idx:3,type:"percent",def:1}}),p.fn=u.extend(p.prototype,{parse:function(n,t,e,i){if(n===c)return this._rgba=[null,null,null,null],this;(n.jquery||n.nodeType)&&(n=u(n).css(t),t=c);var o=this,s=u.type(n),r=this._rgba=[];return t!==c&&(n=[n,t,e,i],s="array"),"string"===s?this.parse(a(n)||h._default):"array"===s?(m(f.rgba.props,function(t,e){r[e.idx]=v(n[e.idx],e)}),this):"object"===s?(m(f,n instanceof p?function(t,e){n[e.cache]&&(o[e.cache]=n[e.cache].slice())}:function(t,i){var s=i.cache;m(i.props,function(t,e){if(!o[s]&&i.to){if("alpha"===t||null==n[t])return;o[s]=i.to(o._rgba)}o[s][e.idx]=v(n[t],e,!0)}),o[s]&&u.inArray(null,o[s].slice(0,3))<0&&(o[s][3]=1,i.from&&(o._rgba=i.from(o[s])))}),this):void 0},is:function(t){var n=p(t),o=!0,r=this;return m(f,function(t,e){var i,s=n[e.cache];return s&&(i=r[e.cache]||e.to&&e.to(r._rgba)||[],m(e.props,function(t,e){if(null!=s[e.idx])return o=s[e.idx]===i[e.idx]})),o}),o},_space:function(){var i=[],s=this;return m(f,function(t,e){s[e.cache]&&i.push(t)}),i.pop()},transition:function(t,r){var a=p(t),e=a._space(),i=f[e],s=0===this.alpha()?p("transparent"):this,l=s[i.cache]||i.to(s._rgba),h=l.slice();return a=a[i.cache],m(i.props,function(t,e){var i=e.idx,s=l[i],n=a[i],o=g[e.type]||{};null!==n&&(h[i]=null===s?n:(o.mod&&(n-s>o.mod/2?s+=o.mod:s-n>o.mod/2&&(s-=o.mod)),v((n-s)*r+s,e)))}),this[e](h)},blend:function(t){if(1===this._rgba[3])return this;var e=this._rgba.slice(),i=e.pop(),s=p(t)._rgba;return p(u.map(e,function(t,e){return(1-i)*s[e]+i*t}))},toRgbaString:function(){var t="rgba(",e=u.map(this._rgba,function(t,e){return null==t?2<e?1:0:t});return 1===e[3]&&(e.pop(),t="rgb("),t+e.join()+")"},toHslaString:function(){var t="hsla(",e=u.map(this.hsla(),function(t,e){return null==t&&(t=2<e?1:0),e&&e<3&&(t=Math.round(100*t)+"%"),t});return 1===e[3]&&(e.pop(),t="hsl("),t+e.join()+")"},toHexString:function(t){var e=this._rgba.slice(),i=e.pop();return t&&e.push(~~(255*i)),"#"+u.map(e,function(t){return 1===(t=(t||0).toString(16)).length?"0"+t:t}).join("")},toString:function(){return 0===this._rgba[3]?"transparent":this.toRgbaString()}}),p.fn.parse.prototype=p.fn,f.hsla.to=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e,i,s=t[0]/255,n=t[1]/255,o=t[2]/255,r=t[3],a=Math.max(s,n,o),l=Math.min(s,n,o),h=a-l,u=a+l,c=.5*u;return e=l===a?0:s===a?60*(n-o)/h+360:n===a?60*(o-s)/h+120:60*(s-n)/h+240,i=0===h?0:c<=.5?h/u:h/(2-u),[Math.round(e)%360,i,c,null==r?1:r]},f.hsla.from=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e=t[0]/360,i=t[1],s=t[2],n=t[3],o=s<=.5?s*(1+i):s+i-s*i,r=2*s-o;return[Math.round(255*l(r,o,e+1/3)),Math.round(255*l(r,o,e)),Math.round(255*l(r,o,e-1/3)),n]},m(f,function(l,t){var i=t.props,r=t.cache,a=t.to,h=t.from;p.fn[l]=function(t){if(a&&!this[r]&&(this[r]=a(this._rgba)),t===c)return this[r].slice();var e,s=u.type(t),n="array"===s||"object"===s?t:arguments,o=this[r].slice();return m(i,function(t,e){var i=n["object"===s?t:e.idx];null==i&&(i=o[e.idx]),o[e.idx]=v(i,e)}),h?((e=p(h(o)))[r]=o,e):p(o)},m(i,function(r,a){p.fn[r]||(p.fn[r]=function(t){var e,i=u.type(t),s="alpha"===r?this._hsla?"hsla":"rgba":l,n=this[s](),o=n[a.idx];return"undefined"===i?o:("function"===i&&(t=t.call(this,o),i=u.type(t)),null==t&&a.empty?this:("string"===i&&(e=d.exec(t))&&(t=o+parseFloat(e[2])*("+"===e[1]?1:-1)),n[a.idx]=t,this[s](n)))})})}),p.hook=function(t){var e=t.split(" ");m(e,function(t,o){u.cssHooks[o]={set:function(t,e){var i,s,n="";if("transparent"!==e&&("string"!==u.type(e)||(i=a(e)))){if(e=p(i||e),!r.rgba&&1!==e._rgba[3]){for(s="backgroundColor"===o?t.parentNode:t;(""===n||"transparent"===n)&&s&&s.style;)try{n=u.css(s,"backgroundColor"),s=s.parentNode}catch(t){}e=e.blend(n&&"transparent"!==n?n:"_default")}e=e.toRgbaString()}try{t.style[o]=e}catch(t){}}},u.fx.step[o]=function(t){t.colorInit||(t.start=p(t.elem,o),t.end=p(t.end),t.colorInit=!0),u.cssHooks[o].set(t.elem,t.start.transition(t.end,t.pos))}})},p.hook("backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor"),u.cssHooks.borderColor={expand:function(i){var s={};return m(["Top","Right","Bottom","Left"],function(t,e){s["border"+e+"Color"]=i}),s}},h=u.Color.names={aqua:"#00ffff",black:"#000000",blue:"#0000ff",fuchsia:"#ff00ff",gray:"#808080",green:"#008000",lime:"#00ff00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#ff0000",silver:"#c0c0c0",teal:"#008080",white:"#ffffff",yellow:"#ffff00",transparent:[null,null,null,0],_default:"#ffffff"}}(u),function(){var o,n,r,a=["add","remove","toggle"],l={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};function h(t){var e,i,s=t.ownerDocument.defaultView?t.ownerDocument.defaultView.getComputedStyle(t,null):t.currentStyle,n={};if(s&&s.length&&s[0]&&s[s[0]])for(i=s.length;i--;)"string"==typeof s[e=s[i]]&&(n[T.camelCase(e)]=s[e]);else for(e in s)"string"==typeof s[e]&&(n[e]=s[e]);return n}T.each(["borderLeftStyle","borderRightStyle","borderBottomStyle","borderTopStyle"],function(t,e){T.fx.step[e]=function(t){("none"!==t.end&&!t.setAttr||1===t.pos&&!t.setAttr)&&(u.style(t.elem,e,t.end),t.setAttr=!0)}}),T.fn.addBack||(T.fn.addBack=function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}),T.effects.animateClass=function(n,t,e,i){var o=T.speed(t,e,i);return this.queue(function(){var t,i=T(this),e=i.attr("class")||"",s=o.children?i.find("*").addBack():i;s=s.map(function(){return{el:T(this),start:h(this)}}),(t=function(){T.each(a,function(t,e){n[e]&&i[e+"Class"](n[e])})})(),s=s.map(function(){return this.end=h(this.el[0]),this.diff=function(t,e){var i,s,n={};for(i in e)s=e[i],t[i]!==s&&(l[i]||!T.fx.step[i]&&isNaN(parseFloat(s))||(n[i]=s));return n}(this.start,this.end),this}),i.attr("class",e),s=s.map(function(){var t=this,e=T.Deferred(),i=T.extend({},o,{queue:!1,complete:function(){e.resolve(t)}});return this.el.animate(this.diff,i),e.promise()}),T.when.apply(T,s.get()).done(function(){t(),T.each(arguments,function(){var e=this.el;T.each(this.diff,function(t){e.css(t,"")})}),o.complete.call(i[0])})})},T.fn.extend({addClass:(r=T.fn.addClass,function(t,e,i,s){return e?T.effects.animateClass.call(this,{add:t},e,i,s):r.apply(this,arguments)}),removeClass:(n=T.fn.removeClass,function(t,e,i,s){return 1<arguments.length?T.effects.animateClass.call(this,{remove:t},e,i,s):n.apply(this,arguments)}),toggleClass:(o=T.fn.toggleClass,function(t,e,i,s,n){return"boolean"==typeof e||void 0===e?i?T.effects.animateClass.call(this,e?{add:t}:{remove:t},i,s,n):o.apply(this,arguments):T.effects.animateClass.call(this,{toggle:t},e,i,s)}),switchClass:function(t,e,i,s,n){return T.effects.animateClass.call(this,{add:e,remove:t},i,s,n)}})}(),function(){var e,i,s,n;function u(t,e,i,s){return T.isPlainObject(t)&&(t=(e=t).effect),t={effect:t},null==e&&(e={}),T.isFunction(e)&&(s=e,i=null,e={}),("number"==typeof e||T.fx.speeds[e])&&(s=i,i=e,e={}),T.isFunction(i)&&(s=i,i=null),e&&T.extend(t,e),i=i||e.duration,t.duration=T.fx.off?0:"number"==typeof i?i:i in T.fx.speeds?T.fx.speeds[i]:T.fx.speeds._default,t.complete=s||e.complete,t}function o(t){return!(t&&"number"!=typeof t&&!T.fx.speeds[t])||("string"==typeof t&&!T.effects.effect[t]||(!!T.isFunction(t)||"object"==typeof t&&!t.effect))}function r(t,e){var i=e.outerWidth(),s=e.outerHeight(),n=/^rect\((-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto)\)$/.exec(t)||["",0,i,s,0];return{top:parseFloat(n[1])||0,right:"auto"===n[2]?i:parseFloat(n[2]),bottom:"auto"===n[3]?s:parseFloat(n[3]),left:parseFloat(n[4])||0}}T.expr&&T.expr.filters&&T.expr.filters.animated&&(T.expr.filters.animated=(e=T.expr.filters.animated,function(t){return!!T(t).data(c)||e(t)})),!1!==T.uiBackCompat&&T.extend(T.effects,{save:function(t,e){for(var i=0,s=e.length;i<s;i++)null!==e[i]&&t.data(l+e[i],t[0].style[e[i]])},restore:function(t,e){for(var i,s=0,n=e.length;s<n;s++)null!==e[s]&&(i=t.data(l+e[s]),t.css(e[s],i))},setMode:function(t,e){return"toggle"===e&&(e=t.is(":hidden")?"show":"hide"),e},createWrapper:function(i){if(i.parent().is(".ui-effects-wrapper"))return i.parent();var s={width:i.outerWidth(!0),height:i.outerHeight(!0),float:i.css("float")},t=T("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",margin:0,padding:0}),e={width:i.width(),height:i.height()},n=document.activeElement;try{n.id}catch(t){n=document.body}return i.wrap(t),(i[0]===n||T.contains(i[0],n))&&T(n).trigger("focus"),t=i.parent(),"static"===i.css("position")?(t.css({position:"relative"}),i.css({position:"relative"})):(T.extend(s,{position:i.css("position"),zIndex:i.css("z-index")}),T.each(["top","left","bottom","right"],function(t,e){s[e]=i.css(e),isNaN(parseInt(s[e],10))&&(s[e]="auto")}),i.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"})),i.css(e),t.css(s).show()},removeWrapper:function(t){var e=document.activeElement;return t.parent().is(".ui-effects-wrapper")&&(t.parent().replaceWith(t),(t[0]===e||T.contains(t[0],e))&&T(e).trigger("focus")),t}}),T.extend(T.effects,{version:"1.12.1",define:function(t,e,i){return i||(i=e,e="effect"),T.effects.effect[t]=i,T.effects.effect[t].mode=e,i},scaledDimensions:function(t,e,i){if(0===e)return{height:0,width:0,outerHeight:0,outerWidth:0};var s="horizontal"!==i?(e||100)/100:1,n="vertical"!==i?(e||100)/100:1;return{height:t.height()*n,width:t.width()*s,outerHeight:t.outerHeight()*n,outerWidth:t.outerWidth()*s}},clipToBox:function(t){return{width:t.clip.right-t.clip.left,height:t.clip.bottom-t.clip.top,left:t.clip.left,top:t.clip.top}},unshift:function(t,e,i){var s=t.queue();1<e&&s.splice.apply(s,[1,0].concat(s.splice(e,i))),t.dequeue()},saveStyle:function(t){t.data(h,t[0].style.cssText)},restoreStyle:function(t){t[0].style.cssText=t.data(h)||"",t.removeData(h)},mode:function(t,e){var i=t.is(":hidden");return"toggle"===e&&(e=i?"show":"hide"),(i?"hide"===e:"show"===e)&&(e="none"),e},getBaseline:function(t,e){var i,s;switch(t[0]){case"top":i=0;break;case"middle":i=.5;break;case"bottom":i=1;break;default:i=t[0]/e.height}switch(t[1]){case"left":s=0;break;case"center":s=.5;break;case"right":s=1;break;default:s=t[1]/e.width}return{x:s,y:i}},createPlaceholder:function(t){var e,i=t.css("position"),s=t.position();return t.css({marginTop:t.css("marginTop"),marginBottom:t.css("marginBottom"),marginLeft:t.css("marginLeft"),marginRight:t.css("marginRight")}).outerWidth(t.outerWidth()).outerHeight(t.outerHeight()),/^(static|relative)/.test(i)&&(i="absolute",e=T("<"+t[0].nodeName+">").insertAfter(t).css({display:/^(inline|ruby)/.test(t.css("display"))?"inline-block":"block",visibility:"hidden",marginTop:t.css("marginTop"),marginBottom:t.css("marginBottom"),marginLeft:t.css("marginLeft"),marginRight:t.css("marginRight"),float:t.css("float")}).outerWidth(t.outerWidth()).outerHeight(t.outerHeight()).addClass("ui-effects-placeholder"),t.data(l+"placeholder",e)),t.css({position:i,left:s.left,top:s.top}),e},removePlaceholder:function(t){var e=l+"placeholder",i=t.data(e);i&&(i.remove(),t.removeData(e))},cleanUp:function(t){T.effects.restoreStyle(t),T.effects.removePlaceholder(t)},setTransition:function(s,t,n,o){return o=o||{},T.each(t,function(t,e){var i=s.cssUnit(e);0<i[0]&&(o[e]=i[0]*n+i[1])}),o}}),T.fn.extend({effect:function(){var s=u.apply(this,arguments),n=T.effects.effect[s.effect],o=n.mode,t=s.queue,e=t||"fx",r=s.complete,a=s.mode,l=[],i=function(t){var e=T(this),i=T.effects.mode(e,a)||o;e.data(c,!0),l.push(i),o&&("show"===i||i===o&&"hide"===i)&&e.show(),o&&"none"===i||T.effects.saveStyle(e),T.isFunction(t)&&t()};if(T.fx.off||!n)return a?this[a](s.duration,r):this.each(function(){r&&r.call(this)});function h(t){var e=T(this);function i(){T.isFunction(r)&&r.call(e[0]),T.isFunction(t)&&t()}s.mode=l.shift(),!1===T.uiBackCompat||o?"none"===s.mode?(e[a](),i()):n.call(e[0],s,function(){e.removeData(c),T.effects.cleanUp(e),"hide"===s.mode&&e.hide(),i()}):(e.is(":hidden")?"hide"===a:"show"===a)?(e[a](),i()):n.call(e[0],s,i)}return!1===t?this.each(i).each(h):this.queue(e,i).queue(e,h)},show:(n=T.fn.show,function(t){if(o(t))return n.apply(this,arguments);var e=u.apply(this,arguments);return e.mode="show",this.effect.call(this,e)}),hide:(s=T.fn.hide,function(t){if(o(t))return s.apply(this,arguments);var e=u.apply(this,arguments);return e.mode="hide",this.effect.call(this,e)}),toggle:(i=T.fn.toggle,function(t){if(o(t)||"boolean"==typeof t)return i.apply(this,arguments);var e=u.apply(this,arguments);return e.mode="toggle",this.effect.call(this,e)}),cssUnit:function(t){var i=this.css(t),s=[];return T.each(["em","px","%","pt"],function(t,e){0<i.indexOf(e)&&(s=[parseFloat(i),e])}),s},cssClip:function(t){return t?this.css("clip","rect("+t.top+"px "+t.right+"px "+t.bottom+"px "+t.left+"px)"):r(this.css("clip"),this)},transfer:function(t,e){var i=T(this),s=T(t.to),n="fixed"===s.css("position"),o=T("body"),r=n?o.scrollTop():0,a=n?o.scrollLeft():0,l=s.offset(),h={top:l.top-r,left:l.left-a,height:s.innerHeight(),width:s.innerWidth()},u=i.offset(),c=T("<div class='ui-effects-transfer'></div>").appendTo("body").addClass(t.className).css({top:u.top-r,left:u.left-a,height:i.innerHeight(),width:i.innerWidth(),position:n?"fixed":"absolute"}).animate(h,t.duration,t.easing,function(){c.remove(),T.isFunction(e)&&e()})}}),T.fx.step.clip=function(t){t.clipInit||(t.start=T(t.elem).cssClip(),"string"==typeof t.end&&(t.end=r(t.end,t.elem)),t.clipInit=!0),T(t.elem).cssClip({top:t.pos*(t.end.top-t.start.top)+t.start.top,right:t.pos*(t.end.right-t.start.right)+t.start.right,bottom:t.pos*(t.end.bottom-t.start.bottom)+t.start.bottom,left:t.pos*(t.end.left-t.start.left)+t.start.left})}}(),s={},T.each(["Quad","Cubic","Quart","Quint","Expo"],function(e,t){s[t]=function(t){return Math.pow(t,e+2)}}),T.extend(s,{Sine:function(t){return 1-Math.cos(t*Math.PI/2)},Circ:function(t){return 1-Math.sqrt(1-t*t)},Elastic:function(t){return 0===t||1===t?t:-Math.pow(2,8*(t-1))*Math.sin((80*(t-1)-7.5)*Math.PI/15)},Back:function(t){return t*t*(3*t-2)},Bounce:function(t){for(var e,i=4;t<((e=Math.pow(2,--i))-1)/11;);return 1/Math.pow(4,3-i)-7.5625*Math.pow((3*e-2)/22-t,2)}}),T.each(s,function(t,e){T.easing["easeIn"+t]=e,T.easing["easeOut"+t]=function(t){return 1-e(1-t)},T.easing["easeInOut"+t]=function(t){return t<.5?e(2*t)/2:1-e(-2*t+2)/2}});T.effects,T.effects.define("blind","hide",function(t,e){var i={up:["bottom","top"],vertical:["bottom","top"],down:["top","bottom"],left:["right","left"],horizontal:["right","left"],right:["left","right"]},s=T(this),n=t.direction||"up",o=s.cssClip(),r={clip:T.extend({},o)},a=T.effects.createPlaceholder(s);r.clip[i[n][0]]=r.clip[i[n][1]],"show"===t.mode&&(s.cssClip(r.clip),a&&a.css(T.effects.clipToBox(r)),r.clip=o),a&&a.animate(T.effects.clipToBox(r),t.duration,t.easing),s.animate(r,{queue:!1,duration:t.duration,easing:t.easing,complete:e})}),T.effects.define("bounce",function(t,e){var i,s,n,o=T(this),r=t.mode,a="hide"===r,l="show"===r,h=t.direction||"up",u=t.distance,c=t.times||5,d=2*c+(l||a?1:0),p=t.duration/d,f=t.easing,g="up"===h||"down"===h?"top":"left",m="up"===h||"left"===h,v=0,_=o.queue().length;for(T.effects.createPlaceholder(o),n=o.css(g),u||(u=o["top"===g?"outerHeight":"outerWidth"]()/3),l&&((s={opacity:1})[g]=n,o.css("opacity",0).css(g,m?2*-u:2*u).animate(s,p,f)),a&&(u/=Math.pow(2,c-1)),(s={})[g]=n;v<c;v++)(i={})[g]=(m?"-=":"+=")+u,o.animate(i,p,f).animate(s,p,f),u=a?2*u:u/2;a&&((i={opacity:0})[g]=(m?"-=":"+=")+u,o.animate(i,p,f)),o.queue(e),T.effects.unshift(o,_,d+1)}),T.effects.define("clip","hide",function(t,e){var i,s={},n=T(this),o=t.direction||"vertical",r="both"===o,a=r||"horizontal"===o,l=r||"vertical"===o;i=n.cssClip(),s.clip={top:l?(i.bottom-i.top)/2:i.top,right:a?(i.right-i.left)/2:i.right,bottom:l?(i.bottom-i.top)/2:i.bottom,left:a?(i.right-i.left)/2:i.left},T.effects.createPlaceholder(n),"show"===t.mode&&(n.cssClip(s.clip),s.clip=i),n.animate(s,{queue:!1,duration:t.duration,easing:t.easing,complete:e})}),T.effects.define("drop","hide",function(t,e){var i,s=T(this),n="show"===t.mode,o=t.direction||"left",r="up"===o||"down"===o?"top":"left",a="up"===o||"left"===o?"-=":"+=",l="+="===a?"-=":"+=",h={opacity:0};T.effects.createPlaceholder(s),i=t.distance||s["top"===r?"outerHeight":"outerWidth"](!0)/2,h[r]=a+i,n&&(s.css(h),h[r]=l+i,h.opacity=1),s.animate(h,{queue:!1,duration:t.duration,easing:t.easing,complete:e})}),T.effects.define("explode","hide",function(t,e){var i,s,n,o,r,a,l=t.pieces?Math.round(Math.sqrt(t.pieces)):3,h=l,u=T(this),c="show"===t.mode,d=u.show().css("visibility","hidden").offset(),p=Math.ceil(u.outerWidth()/h),f=Math.ceil(u.outerHeight()/l),g=[];function m(){g.push(this),g.length===l*h&&(u.css({visibility:"visible"}),T(g).remove(),e())}for(i=0;i<l;i++)for(o=d.top+i*f,a=i-(l-1)/2,s=0;s<h;s++)n=d.left+s*p,r=s-(h-1)/2,u.clone().appendTo("body").wrap("<div></div>").css({position:"absolute",visibility:"visible",left:-s*p,top:-i*f}).parent().addClass("ui-effects-explode").css({position:"absolute",overflow:"hidden",width:p,height:f,left:n+(c?r*p:0),top:o+(c?a*f:0),opacity:c?0:1}).animate({left:n+(c?0:r*p),top:o+(c?0:a*f),opacity:c?1:0},t.duration||500,t.easing,m)}),T.effects.define("fade","toggle",function(t,e){var i="show"===t.mode;T(this).css("opacity",i?0:1).animate({opacity:i?1:0},{queue:!1,duration:t.duration,easing:t.easing,complete:e})}),T.effects.define("fold","hide",function(e,t){var i=T(this),s=e.mode,n="show"===s,o="hide"===s,r=e.size||15,a=/([0-9]+)%/.exec(r),l=!!e.horizFirst?["right","bottom"]:["bottom","right"],h=e.duration/2,u=T.effects.createPlaceholder(i),c=i.cssClip(),d={clip:T.extend({},c)},p={clip:T.extend({},c)},f=[c[l[0]],c[l[1]]],g=i.queue().length;a&&(r=parseInt(a[1],10)/100*f[o?0:1]),d.clip[l[0]]=r,p.clip[l[0]]=r,p.clip[l[1]]=0,n&&(i.cssClip(p.clip),u&&u.css(T.effects.clipToBox(p)),p.clip=c),i.queue(function(t){u&&u.animate(T.effects.clipToBox(d),h,e.easing).animate(T.effects.clipToBox(p),h,e.easing),t()}).animate(d,h,e.easing).animate(p,h,e.easing).queue(t),T.effects.unshift(i,g,4)}),T.effects.define("highlight","show",function(t,e){var i=T(this),s={backgroundColor:i.css("backgroundColor")};"hide"===t.mode&&(s.opacity=0),T.effects.saveStyle(i),i.css({backgroundImage:"none",backgroundColor:t.color||"#ffff99"}).animate(s,{queue:!1,duration:t.duration,easing:t.easing,complete:e})}),T.effects.define("size",function(n,e){var t,o,i,s=T(this),r=["fontSize"],a=["borderTopWidth","borderBottomWidth","paddingTop","paddingBottom"],l=["borderLeftWidth","borderRightWidth","paddingLeft","paddingRight"],h=n.mode,u="effect"!==h,c=n.scale||"both",d=n.origin||["middle","center"],p=s.css("position"),f=s.position(),g=T.effects.scaledDimensions(s),m=n.from||g,v=n.to||T.effects.scaledDimensions(s,0);T.effects.createPlaceholder(s),"show"===h&&(i=m,m=v,v=i),o={from:{y:m.height/g.height,x:m.width/g.width},to:{y:v.height/g.height,x:v.width/g.width}},"box"!==c&&"both"!==c||(o.from.y!==o.to.y&&(m=T.effects.setTransition(s,a,o.from.y,m),v=T.effects.setTransition(s,a,o.to.y,v)),o.from.x!==o.to.x&&(m=T.effects.setTransition(s,l,o.from.x,m),v=T.effects.setTransition(s,l,o.to.x,v))),"content"!==c&&"both"!==c||o.from.y!==o.to.y&&(m=T.effects.setTransition(s,r,o.from.y,m),v=T.effects.setTransition(s,r,o.to.y,v)),d&&(t=T.effects.getBaseline(d,g),m.top=(g.outerHeight-m.outerHeight)*t.y+f.top,m.left=(g.outerWidth-m.outerWidth)*t.x+f.left,v.top=(g.outerHeight-v.outerHeight)*t.y+f.top,v.left=(g.outerWidth-v.outerWidth)*t.x+f.left),s.css(m),"content"!==c&&"both"!==c||(a=a.concat(["marginTop","marginBottom"]).concat(r),l=l.concat(["marginLeft","marginRight"]),s.find("*[width]").each(function(){var t=T(this),e=T.effects.scaledDimensions(t),i={height:e.height*o.from.y,width:e.width*o.from.x,outerHeight:e.outerHeight*o.from.y,outerWidth:e.outerWidth*o.from.x},s={height:e.height*o.to.y,width:e.width*o.to.x,outerHeight:e.height*o.to.y,outerWidth:e.width*o.to.x};o.from.y!==o.to.y&&(i=T.effects.setTransition(t,a,o.from.y,i),s=T.effects.setTransition(t,a,o.to.y,s)),o.from.x!==o.to.x&&(i=T.effects.setTransition(t,l,o.from.x,i),s=T.effects.setTransition(t,l,o.to.x,s)),u&&T.effects.saveStyle(t),t.css(i),t.animate(s,n.duration,n.easing,function(){u&&T.effects.restoreStyle(t)})})),s.animate(v,{queue:!1,duration:n.duration,easing:n.easing,complete:function(){var t=s.offset();0===v.opacity&&s.css("opacity",m.opacity),u||(s.css("position","static"===p?"relative":p).offset(t),T.effects.saveStyle(s)),e()}})}),T.effects.define("scale",function(t,e){var i=T(this),s=t.mode,n=parseInt(t.percent,10)||(0===parseInt(t.percent,10)?0:"effect"!==s?0:100),o=T.extend(!0,{from:T.effects.scaledDimensions(i),to:T.effects.scaledDimensions(i,n,t.direction||"both"),origin:t.origin||["middle","center"]},t);t.fade&&(o.from.opacity=1,o.to.opacity=0),T.effects.effect.size.call(this,o,e)}),T.effects.define("puff","hide",function(t,e){var i=T.extend(!0,{},t,{fade:!0,percent:parseInt(t.percent,10)||150});T.effects.effect.scale.call(this,i,e)}),T.effects.define("pulsate","show",function(t,e){var i=T(this),s=t.mode,n="show"===s,o=n||"hide"===s,r=2*(t.times||5)+(o?1:0),a=t.duration/r,l=0,h=1,u=i.queue().length;for(!n&&i.is(":visible")||(i.css("opacity",0).show(),l=1);h<r;h++)i.animate({opacity:l},a,t.easing),l=1-l;i.animate({opacity:l},a,t.easing),i.queue(e),T.effects.unshift(i,u,r+1)}),T.effects.define("shake",function(t,e){var i=1,s=T(this),n=t.direction||"left",o=t.distance||20,r=t.times||3,a=2*r+1,l=Math.round(t.duration/a),h="up"===n||"down"===n?"top":"left",u="up"===n||"left"===n,c={},d={},p={},f=s.queue().length;for(T.effects.createPlaceholder(s),c[h]=(u?"-=":"+=")+o,d[h]=(u?"+=":"-=")+2*o,p[h]=(u?"-=":"+=")+2*o,s.animate(c,l,t.easing);i<r;i++)s.animate(d,l,t.easing).animate(p,l,t.easing);s.animate(d,l,t.easing).animate(c,l/2,t.easing).queue(e),T.effects.unshift(s,f,a+1)}),T.effects.define("slide","show",function(t,e){var i,s,n=T(this),o={up:["bottom","top"],down:["top","bottom"],left:["right","left"],right:["left","right"]},r=t.mode,a=t.direction||"left",l="up"===a||"down"===a?"top":"left",h="up"===a||"left"===a,u=t.distance||n["top"===l?"outerHeight":"outerWidth"](!0),c={};T.effects.createPlaceholder(n),i=n.cssClip(),s=n.position()[l],c[l]=(h?-1:1)*u+s,c.clip=n.cssClip(),c.clip[o[a][1]]=c.clip[o[a][0]],"show"===r&&(n.cssClip(c.clip),n.css(l,c[l]),c.clip=i,c[l]=s),n.animate(c,{queue:!1,duration:t.duration,easing:t.easing,complete:e})});!1!==T.uiBackCompat&&T.effects.define("transfer",function(t,e){T(this).transfer(t,e)});T.ui.focusable=function(t,e){var i,s,n,o,r,a=t.nodeName.toLowerCase();return"area"===a?(s=(i=t.parentNode).name,!(!t.href||!s||"map"!==i.nodeName.toLowerCase())&&(0<(n=T("img[usemap='#"+s+"']")).length&&n.is(":visible"))):(/^(input|select|textarea|button|object)$/.test(a)?(o=!t.disabled)&&(r=T(t).closest("fieldset")[0])&&(o=!r.disabled):o="a"===a&&t.href||e,o&&T(t).is(":visible")&&function(t){var e=t.css("visibility");for(;"inherit"===e;)t=t.parent(),e=t.css("visibility");return"hidden"!==e}(T(t)))},T.extend(T.expr[":"],{focusable:function(t){return T.ui.focusable(t,null!=T.attr(t,"tabindex"))}});T.ui.focusable,T.fn.form=function(){return"string"==typeof this[0].form?this.closest("form"):T(this[0].form)},T.ui.formResetMixin={_formResetHandler:function(){var e=T(this);setTimeout(function(){var t=e.data("ui-form-reset-instances");T.each(t,function(){this.refresh()})})},_bindFormResetHandler:function(){if(this.form=this.element.form(),this.form.length){var t=this.form.data("ui-form-reset-instances")||[];t.length||this.form.on("reset.ui-form-reset",this._formResetHandler),t.push(this),this.form.data("ui-form-reset-instances",t)}},_unbindFormResetHandler:function(){if(this.form.length){var t=this.form.data("ui-form-reset-instances");t.splice(T.inArray(this,t),1),t.length?this.form.data("ui-form-reset-instances",t):this.form.removeData("ui-form-reset-instances").off("reset.ui-form-reset")}}};"1.7"===T.fn.jquery.substring(0,3)&&(T.each(["Width","Height"],function(t,i){var n="Width"===i?["Left","Right"]:["Top","Bottom"],s=i.toLowerCase(),o={innerWidth:T.fn.innerWidth,innerHeight:T.fn.innerHeight,outerWidth:T.fn.outerWidth,outerHeight:T.fn.outerHeight};function r(t,e,i,s){return T.each(n,function(){e-=parseFloat(T.css(t,"padding"+this))||0,i&&(e-=parseFloat(T.css(t,"border"+this+"Width"))||0),s&&(e-=parseFloat(T.css(t,"margin"+this))||0)}),e}T.fn["inner"+i]=function(t){return void 0===t?o["inner"+i].call(this):this.each(function(){T(this).css(s,r(this,t)+"px")})},T.fn["outer"+i]=function(t,e){return"number"!=typeof t?o["outer"+i].call(this,t):this.each(function(){T(this).css(s,r(this,t,!0,e)+"px")})}}),T.fn.addBack=function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))});var e,o;T.ui.keyCode={BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38},T.ui.escapeSelector=(e=/([!"#$%&'()*+,./:;<=>?@[\]^`{|}~])/g,function(t){return t.replace(e,"\\$1")}),T.fn.labels=function(){var t,e,i,s,n;return this[0].labels&&this[0].labels.length?this.pushStack(this[0].labels):(s=this.eq(0).parents("label"),(i=this.attr("id"))&&(n=(t=this.eq(0).parents().last()).add(t.length?t.siblings():this.siblings()),e="label[for='"+T.ui.escapeSelector(i)+"']",s=s.add(n.find(e).addBack(e))),this.pushStack(s))},T.fn.scrollParent=function(t){var e=this.css("position"),i="absolute"===e,s=t?/(auto|scroll|hidden)/:/(auto|scroll)/,n=this.parents().filter(function(){var t=T(this);return(!i||"static"!==t.css("position"))&&s.test(t.css("overflow")+t.css("overflow-y")+t.css("overflow-x"))}).eq(0);return"fixed"!==e&&n.length?n:T(this[0].ownerDocument||document)},T.extend(T.expr[":"],{tabbable:function(t){var e=T.attr(t,"tabindex"),i=null!=e;return(!i||0<=e)&&T.ui.focusable(t,i)}}),T.fn.extend({uniqueId:(o=0,function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++o)})}),removeUniqueId:function(){return this.each(function(){/^ui-id-\d+$/.test(this.id)&&T(this).removeAttr("id")})}}),T.widget("ui.accordion",{version:"1.12.1",options:{active:0,animate:{},classes:{"ui-accordion-header":"ui-corner-top","ui-accordion-header-collapsed":"ui-corner-all","ui-accordion-content":"ui-corner-bottom"},collapsible:!1,event:"click",header:"> li > :first-child, > :not(li):even",heightStyle:"auto",icons:{activeHeader:"ui-icon-triangle-1-s",header:"ui-icon-triangle-1-e"},activate:null,beforeActivate:null},hideProps:{borderTopWidth:"hide",borderBottomWidth:"hide",paddingTop:"hide",paddingBottom:"hide",height:"hide"},showProps:{borderTopWidth:"show",borderBottomWidth:"show",paddingTop:"show",paddingBottom:"show",height:"show"},_create:function(){var t=this.options;this.prevShow=this.prevHide=T(),this._addClass("ui-accordion","ui-widget ui-helper-reset"),this.element.attr("role","tablist"),t.collapsible||!1!==t.active&&null!=t.active||(t.active=0),this._processPanels(),t.active<0&&(t.active+=this.headers.length),this._refresh()},_getCreateEventData:function(){return{header:this.active,panel:this.active.length?this.active.next():T()}},_createIcons:function(){var t,e,i=this.options.icons;i&&(t=T("<span>"),this._addClass(t,"ui-accordion-header-icon","ui-icon "+i.header),t.prependTo(this.headers),e=this.active.children(".ui-accordion-header-icon"),this._removeClass(e,i.header)._addClass(e,null,i.activeHeader)._addClass(this.headers,"ui-accordion-icons"))},_destroyIcons:function(){this._removeClass(this.headers,"ui-accordion-icons"),this.headers.children(".ui-accordion-header-icon").remove()},_destroy:function(){var t;this.element.removeAttr("role"),this.headers.removeAttr("role aria-expanded aria-selected aria-controls tabIndex").removeUniqueId(),this._destroyIcons(),t=this.headers.next().css("display","").removeAttr("role aria-hidden aria-labelledby").removeUniqueId(),"content"!==this.options.heightStyle&&t.css("height","")},_setOption:function(t,e){"active"!==t?("event"===t&&(this.options.event&&this._off(this.headers,this.options.event),this._setupEvents(e)),this._super(t,e),"collapsible"!==t||e||!1!==this.options.active||this._activate(0),"icons"===t&&(this._destroyIcons(),e&&this._createIcons())):this._activate(e)},_setOptionDisabled:function(t){this._super(t),this.element.attr("aria-disabled",t),this._toggleClass(null,"ui-state-disabled",!!t),this._toggleClass(this.headers.add(this.headers.next()),null,"ui-state-disabled",!!t)},_keydown:function(t){if(!t.altKey&&!t.ctrlKey){var e=T.ui.keyCode,i=this.headers.length,s=this.headers.index(t.target),n=!1;switch(t.keyCode){case e.RIGHT:case e.DOWN:n=this.headers[(s+1)%i];break;case e.LEFT:case e.UP:n=this.headers[(s-1+i)%i];break;case e.SPACE:case e.ENTER:this._eventHandler(t);break;case e.HOME:n=this.headers[0];break;case e.END:n=this.headers[i-1]}n&&(T(t.target).attr("tabIndex",-1),T(n).attr("tabIndex",0),T(n).trigger("focus"),t.preventDefault())}},_panelKeyDown:function(t){t.keyCode===T.ui.keyCode.UP&&t.ctrlKey&&T(t.currentTarget).prev().trigger("focus")},refresh:function(){var t=this.options;this._processPanels(),!1===t.active&&!0===t.collapsible||!this.headers.length?(t.active=!1,this.active=T()):!1===t.active?this._activate(0):this.active.length&&!T.contains(this.element[0],this.active[0])?this.headers.length===this.headers.find(".ui-state-disabled").length?(t.active=!1,this.active=T()):this._activate(Math.max(0,t.active-1)):t.active=this.headers.index(this.active),this._destroyIcons(),this._refresh()},_processPanels:function(){var t=this.headers,e=this.panels;this.headers=this.element.find(this.options.header),this._addClass(this.headers,"ui-accordion-header ui-accordion-header-collapsed","ui-state-default"),this.panels=this.headers.next().filter(":not(.ui-accordion-content-active)").hide(),this._addClass(this.panels,"ui-accordion-content","ui-helper-reset ui-widget-content"),e&&(this._off(t.not(this.headers)),this._off(e.not(this.panels)))},_refresh:function(){var i,t=this.options,e=t.heightStyle,s=this.element.parent();this.active=this._findActive(t.active),this._addClass(this.active,"ui-accordion-header-active","ui-state-active")._removeClass(this.active,"ui-accordion-header-collapsed"),this._addClass(this.active.next(),"ui-accordion-content-active"),this.active.next().show(),this.headers.attr("role","tab").each(function(){var t=T(this),e=t.uniqueId().attr("id"),i=t.next(),s=i.uniqueId().attr("id");t.attr("aria-controls",s),i.attr("aria-labelledby",e)}).next().attr("role","tabpanel"),this.headers.not(this.active).attr({"aria-selected":"false","aria-expanded":"false",tabIndex:-1}).next().attr({"aria-hidden":"true"}).hide(),this.active.length?this.active.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0}).next().attr({"aria-hidden":"false"}):this.headers.eq(0).attr("tabIndex",0),this._createIcons(),this._setupEvents(t.event),"fill"===e?(i=s.height(),this.element.siblings(":visible").each(function(){var t=T(this),e=t.css("position");"absolute"!==e&&"fixed"!==e&&(i-=t.outerHeight(!0))}),this.headers.each(function(){i-=T(this).outerHeight(!0)}),this.headers.next().each(function(){T(this).height(Math.max(0,i-T(this).innerHeight()+T(this).height()))}).css("overflow","auto")):"auto"===e&&(i=0,this.headers.next().each(function(){var t=T(this).is(":visible");t||T(this).show(),i=Math.max(i,T(this).css("height","").height()),t||T(this).hide()}).height(i))},_activate:function(t){var e=this._findActive(t)[0];e!==this.active[0]&&(e=e||this.active[0],this._eventHandler({target:e,currentTarget:e,preventDefault:T.noop}))},_findActive:function(t){return"number"==typeof t?this.headers.eq(t):T()},_setupEvents:function(t){var i={keydown:"_keydown"};t&&T.each(t.split(" "),function(t,e){i[e]="_eventHandler"}),this._off(this.headers.add(this.headers.next())),this._on(this.headers,i),this._on(this.headers.next(),{keydown:"_panelKeyDown"}),this._hoverable(this.headers),this._focusable(this.headers)},_eventHandler:function(t){var e,i,s=this.options,n=this.active,o=T(t.currentTarget),r=o[0]===n[0],a=r&&s.collapsible,l=a?T():o.next(),h=n.next(),u={oldHeader:n,oldPanel:h,newHeader:a?T():o,newPanel:l};t.preventDefault(),r&&!s.collapsible||!1===this._trigger("beforeActivate",t,u)||(s.active=!a&&this.headers.index(o),this.active=r?T():o,this._toggle(u),this._removeClass(n,"ui-accordion-header-active","ui-state-active"),s.icons&&(e=n.children(".ui-accordion-header-icon"),this._removeClass(e,null,s.icons.activeHeader)._addClass(e,null,s.icons.header)),r||(this._removeClass(o,"ui-accordion-header-collapsed")._addClass(o,"ui-accordion-header-active","ui-state-active"),s.icons&&(i=o.children(".ui-accordion-header-icon"),this._removeClass(i,null,s.icons.header)._addClass(i,null,s.icons.activeHeader)),this._addClass(o.next(),"ui-accordion-content-active")))},_toggle:function(t){var e=t.newPanel,i=this.prevShow.length?this.prevShow:t.oldPanel;this.prevShow.add(this.prevHide).stop(!0,!0),this.prevShow=e,this.prevHide=i,this.options.animate?this._animate(e,i,t):(i.hide(),e.show(),this._toggleComplete(t)),i.attr({"aria-hidden":"true"}),i.prev().attr({"aria-selected":"false","aria-expanded":"false"}),e.length&&i.length?i.prev().attr({tabIndex:-1,"aria-expanded":"false"}):e.length&&this.headers.filter(function(){return 0===parseInt(T(this).attr("tabIndex"),10)}).attr("tabIndex",-1),e.attr("aria-hidden","false").prev().attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0})},_animate:function(t,i,e){var s,n,o,r=this,a=0,l=t.css("box-sizing"),h=t.length&&(!i.length||t.index()<i.index()),u=this.options.animate||{},c=h&&u.down||u,d=function(){r._toggleComplete(e)};return"number"==typeof c&&(o=c),"string"==typeof c&&(n=c),n=n||c.easing||u.easing,o=o||c.duration||u.duration,i.length?t.length?(s=t.show().outerHeight(),i.animate(this.hideProps,{duration:o,easing:n,step:function(t,e){e.now=Math.round(t)}}),void t.hide().animate(this.showProps,{duration:o,easing:n,complete:d,step:function(t,e){e.now=Math.round(t),"height"!==e.prop?"content-box"===l&&(a+=e.now):"content"!==r.options.heightStyle&&(e.now=Math.round(s-i.outerHeight()-a),a=0)}})):i.animate(this.hideProps,o,n,d):t.animate(this.showProps,o,n,d)},_toggleComplete:function(t){var e=t.oldPanel,i=e.prev();this._removeClass(e,"ui-accordion-content-active"),this._removeClass(i,"ui-accordion-header-active")._addClass(i,"ui-accordion-header-collapsed"),e.length&&(e.parent()[0].className=e.parent()[0].className),this._trigger("activate",null,t)}}),T.ui.safeActiveElement=function(e){var i;try{i=e.activeElement}catch(t){i=e.body}return i||(i=e.body),i.nodeName||(i=e.body),i},T.widget("ui.menu",{version:"1.12.1",defaultElement:"<ul>",delay:300,options:{icons:{submenu:"ui-icon-caret-1-e"},items:"> *",menus:"ul",position:{my:"left top",at:"right top"},role:"menu",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element,this.mouseHandled=!1,this.element.uniqueId().attr({role:this.options.role,tabIndex:0}),this._addClass("ui-menu","ui-widget ui-widget-content"),this._on({"mousedown .ui-menu-item":function(t){t.preventDefault()},"click .ui-menu-item":function(t){var e=T(t.target),i=T(T.ui.safeActiveElement(this.document[0]));!this.mouseHandled&&e.not(".ui-state-disabled").length&&(this.select(t),t.isPropagationStopped()||(this.mouseHandled=!0),e.has(".ui-menu").length?this.expand(t):!this.element.is(":focus")&&i.closest(".ui-menu").length&&(this.element.trigger("focus",[!0]),this.active&&1===this.active.parents(".ui-menu").length&&clearTimeout(this.timer)))},"mouseenter .ui-menu-item":function(t){if(!this.previousFilter){var e=T(t.target).closest(".ui-menu-item"),i=T(t.currentTarget);e[0]===i[0]&&(this._removeClass(i.siblings().children(".ui-state-active"),null,"ui-state-active"),this.focus(t,i))}},mouseleave:"collapseAll","mouseleave .ui-menu":"collapseAll",focus:function(t,e){var i=this.active||this.element.find(this.options.items).eq(0);e||this.focus(t,i)},blur:function(t){this._delay(function(){!T.contains(this.element[0],T.ui.safeActiveElement(this.document[0]))&&this.collapseAll(t)})},keydown:"_keydown"}),this.refresh(),this._on(this.document,{click:function(t){this._closeOnDocumentClick(t)&&this.collapseAll(t),this.mouseHandled=!1}})},_destroy:function(){var t=this.element.find(".ui-menu-item").removeAttr("role aria-disabled").children(".ui-menu-item-wrapper").removeUniqueId().removeAttr("tabIndex role aria-haspopup");this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeAttr("role aria-labelledby aria-expanded aria-hidden aria-disabled tabIndex").removeUniqueId().show(),t.children().each(function(){var t=T(this);t.data("ui-menu-submenu-caret")&&t.remove()})},_keydown:function(t){var e,i,s,n,o=!0;switch(t.keyCode){case T.ui.keyCode.PAGE_UP:this.previousPage(t);break;case T.ui.keyCode.PAGE_DOWN:this.nextPage(t);break;case T.ui.keyCode.HOME:this._move("first","first",t);break;case T.ui.keyCode.END:this._move("last","last",t);break;case T.ui.keyCode.UP:this.previous(t);break;case T.ui.keyCode.DOWN:this.next(t);break;case T.ui.keyCode.LEFT:this.collapse(t);break;case T.ui.keyCode.RIGHT:this.active&&!this.active.is(".ui-state-disabled")&&this.expand(t);break;case T.ui.keyCode.ENTER:case T.ui.keyCode.SPACE:this._activate(t);break;case T.ui.keyCode.ESCAPE:this.collapse(t);break;default:o=!1,i=this.previousFilter||"",n=!1,s=96<=t.keyCode&&t.keyCode<=105?(t.keyCode-96).toString():String.fromCharCode(t.keyCode),clearTimeout(this.filterTimer),s===i?n=!0:s=i+s,e=this._filterMenuItems(s),(e=n&&-1!==e.index(this.active.next())?this.active.nextAll(".ui-menu-item"):e).length||(s=String.fromCharCode(t.keyCode),e=this._filterMenuItems(s)),e.length?(this.focus(t,e),this.previousFilter=s,this.filterTimer=this._delay(function(){delete this.previousFilter},1e3)):delete this.previousFilter}o&&t.preventDefault()},_activate:function(t){this.active&&!this.active.is(".ui-state-disabled")&&(this.active.children("[aria-haspopup='true']").length?this.expand(t):this.select(t))},refresh:function(){var t,e,i,s,n=this,o=this.options.icons.submenu,r=this.element.find(this.options.menus);this._toggleClass("ui-menu-icons",null,!!this.element.find(".ui-icon").length),e=r.filter(":not(.ui-menu)").hide().attr({role:this.options.role,"aria-hidden":"true","aria-expanded":"false"}).each(function(){var t=T(this),e=t.prev(),i=T("<span>").data("ui-menu-submenu-caret",!0);n._addClass(i,"ui-menu-icon","ui-icon "+o),e.attr("aria-haspopup","true").prepend(i),t.attr("aria-labelledby",e.attr("id"))}),this._addClass(e,"ui-menu","ui-widget ui-widget-content ui-front"),(t=r.add(this.element).find(this.options.items)).not(".ui-menu-item").each(function(){var t=T(this);n._isDivider(t)&&n._addClass(t,"ui-menu-divider","ui-widget-content")}),s=(i=t.not(".ui-menu-item, .ui-menu-divider")).children().not(".ui-menu").uniqueId().attr({tabIndex:-1,role:this._itemRole()}),this._addClass(i,"ui-menu-item")._addClass(s,"ui-menu-item-wrapper"),t.filter(".ui-state-disabled").attr("aria-disabled","true"),this.active&&!T.contains(this.element[0],this.active[0])&&this.blur()},_itemRole:function(){return{menu:"menuitem",listbox:"option"}[this.options.role]},_setOption:function(t,e){if("icons"===t){var i=this.element.find(".ui-menu-icon");this._removeClass(i,null,this.options.icons.submenu)._addClass(i,null,e.submenu)}this._super(t,e)},_setOptionDisabled:function(t){this._super(t),this.element.attr("aria-disabled",String(t)),this._toggleClass(null,"ui-state-disabled",!!t)},focus:function(t,e){var i,s,n;this.blur(t,t&&"focus"===t.type),this._scrollIntoView(e),this.active=e.first(),s=this.active.children(".ui-menu-item-wrapper"),this._addClass(s,null,"ui-state-active"),this.options.role&&this.element.attr("aria-activedescendant",s.attr("id")),n=this.active.parent().closest(".ui-menu-item").children(".ui-menu-item-wrapper"),this._addClass(n,null,"ui-state-active"),t&&"keydown"===t.type?this._close():this.timer=this._delay(function(){this._close()},this.delay),(i=e.children(".ui-menu")).length&&t&&/^mouse/.test(t.type)&&this._startOpening(i),this.activeMenu=e.parent(),this._trigger("focus",t,{item:e})},_scrollIntoView:function(t){var e,i,s,n,o,r;this._hasScroll()&&(e=parseFloat(T.css(this.activeMenu[0],"borderTopWidth"))||0,i=parseFloat(T.css(this.activeMenu[0],"paddingTop"))||0,s=t.offset().top-this.activeMenu.offset().top-e-i,n=this.activeMenu.scrollTop(),o=this.activeMenu.height(),r=t.outerHeight(),s<0?this.activeMenu.scrollTop(n+s):o<s+r&&this.activeMenu.scrollTop(n+s-o+r))},blur:function(t,e){e||clearTimeout(this.timer),this.active&&(this._removeClass(this.active.children(".ui-menu-item-wrapper"),null,"ui-state-active"),this._trigger("blur",t,{item:this.active}),this.active=null)},_startOpening:function(t){clearTimeout(this.timer),"true"===t.attr("aria-hidden")&&(this.timer=this._delay(function(){this._close(),this._open(t)},this.delay))},_open:function(t){var e=T.extend({of:this.active},this.options.position);clearTimeout(this.timer),this.element.find(".ui-menu").not(t.parents(".ui-menu")).hide().attr("aria-hidden","true"),t.show().removeAttr("aria-hidden").attr("aria-expanded","true").position(e)},collapseAll:function(e,i){clearTimeout(this.timer),this.timer=this._delay(function(){var t=i?this.element:T(e&&e.target).closest(this.element.find(".ui-menu"));t.length||(t=this.element),this._close(t),this.blur(e),this._removeClass(t.find(".ui-state-active"),null,"ui-state-active"),this.activeMenu=t},this.delay)},_close:function(t){t||(t=this.active?this.active.parent():this.element),t.find(".ui-menu").hide().attr("aria-hidden","true").attr("aria-expanded","false")},_closeOnDocumentClick:function(t){return!T(t.target).closest(".ui-menu").length},_isDivider:function(t){return!/[^\-\u2014\u2013\s]/.test(t.text())},collapse:function(t){var e=this.active&&this.active.parent().closest(".ui-menu-item",this.element);e&&e.length&&(this._close(),this.focus(t,e))},expand:function(t){var e=this.active&&this.active.children(".ui-menu ").find(this.options.items).first();e&&e.length&&(this._open(e.parent()),this._delay(function(){this.focus(t,e)}))},next:function(t){this._move("next","first",t)},previous:function(t){this._move("prev","last",t)},isFirstItem:function(){return this.active&&!this.active.prevAll(".ui-menu-item").length},isLastItem:function(){return this.active&&!this.active.nextAll(".ui-menu-item").length},_move:function(t,e,i){var s;this.active&&(s="first"===t||"last"===t?this.active["first"===t?"prevAll":"nextAll"](".ui-menu-item").eq(-1):this.active[t+"All"](".ui-menu-item").eq(0)),s&&s.length&&this.active||(s=this.activeMenu.find(this.options.items)[e]()),this.focus(i,s)},nextPage:function(t){var e,i,s;this.active?this.isLastItem()||(this._hasScroll()?(i=this.active.offset().top,s=this.element.height(),this.active.nextAll(".ui-menu-item").each(function(){return(e=T(this)).offset().top-i-s<0}),this.focus(t,e)):this.focus(t,this.activeMenu.find(this.options.items)[this.active?"last":"first"]())):this.next(t)},previousPage:function(t){var e,i,s;this.active?this.isFirstItem()||(this._hasScroll()?(i=this.active.offset().top,s=this.element.height(),this.active.prevAll(".ui-menu-item").each(function(){return 0<(e=T(this)).offset().top-i+s}),this.focus(t,e)):this.focus(t,this.activeMenu.find(this.options.items).first())):this.next(t)},_hasScroll:function(){return this.element.outerHeight()<this.element.prop("scrollHeight")},select:function(t){this.active=this.active||T(t.target).closest(".ui-menu-item");var e={item:this.active};this.active.has(".ui-menu").length||this.collapseAll(t,!0),this._trigger("select",t,e)},_filterMenuItems:function(t){var e=t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&"),i=new RegExp("^"+e,"i");return this.activeMenu.find(this.options.items).filter(".ui-menu-item").filter(function(){return i.test(T.trim(T(this).children(".ui-menu-item-wrapper").text()))})}});T.widget("ui.autocomplete",{version:"1.12.1",defaultElement:"<input>",options:{appendTo:null,autoFocus:!1,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},requestIndex:0,pending:0,_create:function(){var i,s,n,t=this.element[0].nodeName.toLowerCase(),e="textarea"===t,o="input"===t;this.isMultiLine=e||!o&&this._isContentEditable(this.element),this.valueMethod=this.element[e||o?"val":"text"],this.isNewMenu=!0,this._addClass("ui-autocomplete-input"),this.element.attr("autocomplete","off"),this._on(this.element,{keydown:function(t){if(this.element.prop("readOnly"))s=n=i=!0;else{s=n=i=!1;var e=T.ui.keyCode;switch(t.keyCode){case e.PAGE_UP:i=!0,this._move("previousPage",t);break;case e.PAGE_DOWN:i=!0,this._move("nextPage",t);break;case e.UP:i=!0,this._keyEvent("previous",t);break;case e.DOWN:i=!0,this._keyEvent("next",t);break;case e.ENTER:this.menu.active&&(i=!0,t.preventDefault(),this.menu.select(t));break;case e.TAB:this.menu.active&&this.menu.select(t);break;case e.ESCAPE:this.menu.element.is(":visible")&&(this.isMultiLine||this._value(this.term),this.close(t),t.preventDefault());break;default:s=!0,this._searchTimeout(t)}}},keypress:function(t){if(i)return i=!1,void(this.isMultiLine&&!this.menu.element.is(":visible")||t.preventDefault());if(!s){var e=T.ui.keyCode;switch(t.keyCode){case e.PAGE_UP:this._move("previousPage",t);break;case e.PAGE_DOWN:this._move("nextPage",t);break;case e.UP:this._keyEvent("previous",t);break;case e.DOWN:this._keyEvent("next",t)}}},input:function(t){if(n)return n=!1,void t.preventDefault();this._searchTimeout(t)},focus:function(){this.selectedItem=null,this.previous=this._value()},blur:function(t){this.cancelBlur?delete this.cancelBlur:(clearTimeout(this.searching),this.close(t),this._change(t))}}),this._initSource(),this.menu=T("<ul>").appendTo(this._appendTo()).menu({role:null}).hide().menu("instance"),this._addClass(this.menu.element,"ui-autocomplete","ui-front"),this._on(this.menu.element,{mousedown:function(t){t.preventDefault(),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur,this.element[0]!==T.ui.safeActiveElement(this.document[0])&&this.element.trigger("focus")})},menufocus:function(t,e){var i,s;if(this.isNewMenu&&(this.isNewMenu=!1,t.originalEvent&&/^mouse/.test(t.originalEvent.type)))return this.menu.blur(),void this.document.one("mousemove",function(){T(t.target).trigger(t.originalEvent)});s=e.item.data("ui-autocomplete-item"),!1!==this._trigger("focus",t,{item:s})&&t.originalEvent&&/^key/.test(t.originalEvent.type)&&this._value(s.value),(i=e.item.attr("aria-label")||s.value)&&T.trim(i).length&&(this.liveRegion.children().hide(),T("<div>").text(i).appendTo(this.liveRegion))},menuselect:function(t,e){var i=e.item.data("ui-autocomplete-item"),s=this.previous;this.element[0]!==T.ui.safeActiveElement(this.document[0])&&(this.element.trigger("focus"),this.previous=s,this._delay(function(){this.previous=s,this.selectedItem=i})),!1!==this._trigger("select",t,{item:i})&&this._value(i.value),this.term=this._value(),this.close(t),this.selectedItem=i}}),this.liveRegion=T("<div>",{role:"status","aria-live":"assertive","aria-relevant":"additions"}).appendTo(this.document[0].body),this._addClass(this.liveRegion,null,"ui-helper-hidden-accessible"),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_destroy:function(){clearTimeout(this.searching),this.element.removeAttr("autocomplete"),this.menu.element.remove(),this.liveRegion.remove()},_setOption:function(t,e){this._super(t,e),"source"===t&&this._initSource(),"appendTo"===t&&this.menu.element.appendTo(this._appendTo()),"disabled"===t&&e&&this.xhr&&this.xhr.abort()},_isEventTargetInWidget:function(t){var e=this.menu.element[0];return t.target===this.element[0]||t.target===e||T.contains(e,t.target)},_closeOnClickOutside:function(t){this._isEventTargetInWidget(t)||this.close()},_appendTo:function(){var t=this.options.appendTo;return t&&(t=t.jquery||t.nodeType?T(t):this.document.find(t).eq(0)),t&&t[0]||(t=this.element.closest(".ui-front, dialog")),t.length||(t=this.document[0].body),t},_initSource:function(){var i,s,n=this;T.isArray(this.options.source)?(i=this.options.source,this.source=function(t,e){e(T.ui.autocomplete.filter(i,t.term))}):"string"==typeof this.options.source?(s=this.options.source,this.source=function(t,e){n.xhr&&n.xhr.abort(),n.xhr=T.ajax({url:s,data:t,dataType:"json",success:function(t){e(t)},error:function(){e([])}})}):this.source=this.options.source},_searchTimeout:function(s){clearTimeout(this.searching),this.searching=this._delay(function(){var t=this.term===this._value(),e=this.menu.element.is(":visible"),i=s.altKey||s.ctrlKey||s.metaKey||s.shiftKey;t&&(!t||e||i)||(this.selectedItem=null,this.search(null,s))},this.options.delay)},search:function(t,e){return t=null!=t?t:this._value(),this.term=this._value(),t.length<this.options.minLength?this.close(e):!1!==this._trigger("search",e)?this._search(t):void 0},_search:function(t){this.pending++,this._addClass("ui-autocomplete-loading"),this.cancelSearch=!1,this.source({term:t},this._response())},_response:function(){var e=++this.requestIndex;return T.proxy(function(t){e===this.requestIndex&&this.__response(t),this.pending--,this.pending||this._removeClass("ui-autocomplete-loading")},this)},__response:function(t){t&&(t=this._normalize(t)),this._trigger("response",null,{content:t}),!this.options.disabled&&t&&t.length&&!this.cancelSearch?(this._suggest(t),this._trigger("open")):this._close()},close:function(t){this.cancelSearch=!0,this._close(t)},_close:function(t){this._off(this.document,"mousedown"),this.menu.element.is(":visible")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger("close",t))},_change:function(t){this.previous!==this._value()&&this._trigger("change",t,{item:this.selectedItem})},_normalize:function(t){return t.length&&t[0].label&&t[0].value?t:T.map(t,function(t){return"string"==typeof t?{label:t,value:t}:T.extend({},t,{label:t.label||t.value,value:t.value||t.label})})},_suggest:function(t){var e=this.menu.element.empty();this._renderMenu(e,t),this.isNewMenu=!0,this.menu.refresh(),e.show(),this._resizeMenu(),e.position(T.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next(),this._on(this.document,{mousedown:"_closeOnClickOutside"})},_resizeMenu:function(){var t=this.menu.element;t.outerWidth(Math.max(t.width("").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(i,t){var s=this;T.each(t,function(t,e){s._renderItemData(i,e)})},_renderItemData:function(t,e){return this._renderItem(t,e).data("ui-autocomplete-item",e)},_renderItem:function(t,e){return T("<li>").append(T("<div>").text(e.label)).appendTo(t)},_move:function(t,e){if(this.menu.element.is(":visible"))return this.menu.isFirstItem()&&/^previous/.test(t)||this.menu.isLastItem()&&/^next/.test(t)?(this.isMultiLine||this._value(this.term),void this.menu.blur()):void this.menu[t](e);this.search(null,e)},widget:function(){return this.menu.element},_value:function(){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(t,e){this.isMultiLine&&!this.menu.element.is(":visible")||(this._move(t,e),e.preventDefault())},_isContentEditable:function(t){if(!t.length)return!1;var e=t.prop("contentEditable");return"inherit"===e?this._isContentEditable(t.parent()):"true"===e}}),T.extend(T.ui.autocomplete,{escapeRegex:function(t){return t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")},filter:function(t,e){var i=new RegExp(T.ui.autocomplete.escapeRegex(e),"i");return T.grep(t,function(t){return i.test(t.label||t.value||t)})}}),T.widget("ui.autocomplete",T.ui.autocomplete,{options:{messages:{noResults:"No search results.",results:function(t){return t+(1<t?" results are":" result is")+" available, use up and down arrow keys to navigate."}}},__response:function(t){var e;this._superApply(arguments),this.options.disabled||this.cancelSearch||(e=t&&t.length?this.options.messages.results(t.length):this.options.messages.noResults,this.liveRegion.children().hide(),T("<div>").text(e).appendTo(this.liveRegion))}});T.ui.autocomplete;var r=/ui-corner-([a-z]){2,6}/g;T.widget("ui.controlgroup",{version:"1.12.1",defaultElement:"<div>",options:{direction:"horizontal",disabled:null,onlyVisible:!0,items:{button:"input[type=button], input[type=submit], input[type=reset], button, a",controlgroupLabel:".ui-controlgroup-label",checkboxradio:"input[type='checkbox'], input[type='radio']",selectmenu:"select",spinner:".ui-spinner-input"}},_create:function(){this._enhance()},_enhance:function(){this.element.attr("role","toolbar"),this.refresh()},_destroy:function(){this._callChildMethod("destroy"),this.childWidgets.removeData("ui-controlgroup-data"),this.element.removeAttr("role"),this.options.items.controlgroupLabel&&this.element.find(this.options.items.controlgroupLabel).find(".ui-controlgroup-label-contents").contents().unwrap()},_initWidgets:function(){var r=this,a=[];T.each(this.options.items,function(n,t){var e,o={};if(t)return"controlgroupLabel"===n?((e=r.element.find(t)).each(function(){var t=T(this);t.children(".ui-controlgroup-label-contents").length||t.contents().wrapAll("<span class='ui-controlgroup-label-contents'></span>")}),r._addClass(e,null,"ui-widget ui-widget-content ui-state-default"),void(a=a.concat(e.get()))):void(T.fn[n]&&(o=r["_"+n+"Options"]?r["_"+n+"Options"]("middle"):{classes:{}},r.element.find(t).each(function(){var t=T(this),e=t[n]("instance"),i=T.widget.extend({},o);if("button"!==n||!t.parent(".ui-spinner").length){e||(e=t[n]()[n]("instance")),e&&(i.classes=r._resolveClassesValues(i.classes,e)),t[n](i);var s=t[n]("widget");T.data(s[0],"ui-controlgroup-data",e||t[n]("instance")),a.push(s[0])}})))}),this.childWidgets=T(T.unique(a)),this._addClass(this.childWidgets,"ui-controlgroup-item")},_callChildMethod:function(e){this.childWidgets.each(function(){var t=T(this).data("ui-controlgroup-data");t&&t[e]&&t[e]()})},_updateCornerClass:function(t,e){var i=this._buildSimpleOptions(e,"label").classes.label;this._removeClass(t,null,"ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-corner-all"),this._addClass(t,null,i)},_buildSimpleOptions:function(t,e){var i="vertical"===this.options.direction,s={classes:{}};return s.classes[e]={middle:"",first:"ui-corner-"+(i?"top":"left"),last:"ui-corner-"+(i?"bottom":"right"),only:"ui-corner-all"}[t],s},_spinnerOptions:function(t){var e=this._buildSimpleOptions(t,"ui-spinner");return e.classes["ui-spinner-up"]="",e.classes["ui-spinner-down"]="",e},_buttonOptions:function(t){return this._buildSimpleOptions(t,"ui-button")},_checkboxradioOptions:function(t){return this._buildSimpleOptions(t,"ui-checkboxradio-label")},_selectmenuOptions:function(t){var e="vertical"===this.options.direction;return{width:!!e&&"auto",classes:{middle:{"ui-selectmenu-button-open":"","ui-selectmenu-button-closed":""},first:{"ui-selectmenu-button-open":"ui-corner-"+(e?"top":"tl"),"ui-selectmenu-button-closed":"ui-corner-"+(e?"top":"left")},last:{"ui-selectmenu-button-open":e?"":"ui-corner-tr","ui-selectmenu-button-closed":"ui-corner-"+(e?"bottom":"right")},only:{"ui-selectmenu-button-open":"ui-corner-top","ui-selectmenu-button-closed":"ui-corner-all"}}[t]}},_resolveClassesValues:function(i,s){var n={};return T.each(i,function(t){var e=s.options.classes[t]||"";e=T.trim(e.replace(r,"")),n[t]=(e+" "+i[t]).replace(/\s+/g," ")}),n},_setOption:function(t,e){"direction"===t&&this._removeClass("ui-controlgroup-"+this.options.direction),this._super(t,e),"disabled"!==t?this.refresh():this._callChildMethod(e?"disable":"enable")},refresh:function(){var n,o=this;this._addClass("ui-controlgroup ui-controlgroup-"+this.options.direction),"horizontal"===this.options.direction&&this._addClass(null,"ui-helper-clearfix"),this._initWidgets(),n=this.childWidgets,this.options.onlyVisible&&(n=n.filter(":visible")),n.length&&(T.each(["first","last"],function(t,e){var i=n[e]().data("ui-controlgroup-data");if(i&&o["_"+i.widgetName+"Options"]){var s=o["_"+i.widgetName+"Options"](1===n.length?"only":e);s.classes=o._resolveClassesValues(s.classes,i),i.element[i.widgetName](s)}else o._updateCornerClass(n[e](),e)}),this._callChildMethod("refresh"))}});T.widget("ui.checkboxradio",[T.ui.formResetMixin,{version:"1.12.1",options:{disabled:null,label:null,icon:!0,classes:{"ui-checkboxradio-label":"ui-corner-all","ui-checkboxradio-icon":"ui-corner-all"}},_getCreateOptions:function(){var t,e,i=this,s=this._super()||{};return this._readType(),e=this.element.labels(),this.label=T(e[e.length-1]),this.label.length||T.error("No label found for checkboxradio widget"),this.originalLabel="",this.label.contents().not(this.element[0]).each(function(){i.originalLabel+=3===this.nodeType?T(this).text():this.outerHTML}),this.originalLabel&&(s.label=this.originalLabel),null!=(t=this.element[0].disabled)&&(s.disabled=t),s},_create:function(){var t=this.element[0].checked;this._bindFormResetHandler(),null==this.options.disabled&&(this.options.disabled=this.element[0].disabled),this._setOption("disabled",this.options.disabled),this._addClass("ui-checkboxradio","ui-helper-hidden-accessible"),this._addClass(this.label,"ui-checkboxradio-label","ui-button ui-widget"),"radio"===this.type&&this._addClass(this.label,"ui-checkboxradio-radio-label"),this.options.label&&this.options.label!==this.originalLabel?this._updateLabel():this.originalLabel&&(this.options.label=this.originalLabel),this._enhance(),t&&(this._addClass(this.label,"ui-checkboxradio-checked","ui-state-active"),this.icon&&this._addClass(this.icon,null,"ui-state-hover")),this._on({change:"_toggleClasses",focus:function(){this._addClass(this.label,null,"ui-state-focus ui-visual-focus")},blur:function(){this._removeClass(this.label,null,"ui-state-focus ui-visual-focus")}})},_readType:function(){var t=this.element[0].nodeName.toLowerCase();this.type=this.element[0].type,"input"===t&&/radio|checkbox/.test(this.type)||T.error("Can't create checkboxradio on element.nodeName="+t+" and element.type="+this.type)},_enhance:function(){this._updateIcon(this.element[0].checked)},widget:function(){return this.label},_getRadioGroup:function(){var t=this.element[0].name,e="input[name='"+T.ui.escapeSelector(t)+"']";return t?(this.form.length?T(this.form[0].elements).filter(e):T(e).filter(function(){return 0===T(this).form().length})).not(this.element):T([])},_toggleClasses:function(){var t=this.element[0].checked;this._toggleClass(this.label,"ui-checkboxradio-checked","ui-state-active",t),this.options.icon&&"checkbox"===this.type&&this._toggleClass(this.icon,null,"ui-icon-check ui-state-checked",t)._toggleClass(this.icon,null,"ui-icon-blank",!t),"radio"===this.type&&this._getRadioGroup().each(function(){var t=T(this).checkboxradio("instance");t&&t._removeClass(t.label,"ui-checkboxradio-checked","ui-state-active")})},_destroy:function(){this._unbindFormResetHandler(),this.icon&&(this.icon.remove(),this.iconSpace.remove())},_setOption:function(t,e){if("label"!==t||e){if(this._super(t,e),"disabled"===t)return this._toggleClass(this.label,null,"ui-state-disabled",e),void(this.element[0].disabled=e);this.refresh()}},_updateIcon:function(t){var e="ui-icon ui-icon-background ";this.options.icon?(this.icon||(this.icon=T("<span>"),this.iconSpace=T("<span> </span>"),this._addClass(this.iconSpace,"ui-checkboxradio-icon-space")),"checkbox"===this.type?(e+=t?"ui-icon-check ui-state-checked":"ui-icon-blank",this._removeClass(this.icon,null,t?"ui-icon-blank":"ui-icon-check")):e+="ui-icon-blank",this._addClass(this.icon,"ui-checkboxradio-icon",e),t||this._removeClass(this.icon,null,"ui-icon-check ui-state-checked"),this.icon.prependTo(this.label).after(this.iconSpace)):void 0!==this.icon&&(this.icon.remove(),this.iconSpace.remove(),delete this.icon)},_updateLabel:function(){var t=this.label.contents().not(this.element[0]);this.icon&&(t=t.not(this.icon[0])),this.iconSpace&&(t=t.not(this.iconSpace[0])),t.remove(),this.label.append(this.options.label)},refresh:function(){var t=this.element[0].checked,e=this.element[0].disabled;this._updateIcon(t),this._toggleClass(this.label,"ui-checkboxradio-checked","ui-state-active",t),null!==this.options.label&&this._updateLabel(),e!==this.options.disabled&&this._setOptions({disabled:e})}}]);var d;T.ui.checkboxradio;T.widget("ui.button",{version:"1.12.1",defaultElement:"<button>",options:{classes:{"ui-button":"ui-corner-all"},disabled:null,icon:null,iconPosition:"beginning",label:null,showLabel:!0},_getCreateOptions:function(){var t,e=this._super()||{};return this.isInput=this.element.is("input"),null!=(t=this.element[0].disabled)&&(e.disabled=t),this.originalLabel=this.isInput?this.element.val():this.element.html(),this.originalLabel&&(e.label=this.originalLabel),e},_create:function(){!this.option.showLabel&!this.options.icon&&(this.options.showLabel=!0),null==this.options.disabled&&(this.options.disabled=this.element[0].disabled||!1),this.hasTitle=!!this.element.attr("title"),this.options.label&&this.options.label!==this.originalLabel&&(this.isInput?this.element.val(this.options.label):this.element.html(this.options.label)),this._addClass("ui-button","ui-widget"),this._setOption("disabled",this.options.disabled),this._enhance(),this.element.is("a")&&this._on({keyup:function(t){t.keyCode===T.ui.keyCode.SPACE&&(t.preventDefault(),this.element[0].click?this.element[0].click():this.element.trigger("click"))}})},_enhance:function(){this.element.is("button")||this.element.attr("role","button"),this.options.icon&&(this._updateIcon("icon",this.options.icon),this._updateTooltip())},_updateTooltip:function(){this.title=this.element.attr("title"),this.options.showLabel||this.title||this.element.attr("title",this.options.label)},_updateIcon:function(t,e){var i="iconPosition"!==t,s=i?this.options.iconPosition:e,n="top"===s||"bottom"===s;this.icon?i&&this._removeClass(this.icon,null,this.options.icon):(this.icon=T("<span>"),this._addClass(this.icon,"ui-button-icon","ui-icon"),this.options.showLabel||this._addClass("ui-button-icon-only")),i&&this._addClass(this.icon,null,e),this._attachIcon(s),n?(this._addClass(this.icon,null,"ui-widget-icon-block"),this.iconSpace&&this.iconSpace.remove()):(this.iconSpace||(this.iconSpace=T("<span> </span>"),this._addClass(this.iconSpace,"ui-button-icon-space")),this._removeClass(this.icon,null,"ui-wiget-icon-block"),this._attachIconSpace(s))},_destroy:function(){this.element.removeAttr("role"),this.icon&&this.icon.remove(),this.iconSpace&&this.iconSpace.remove(),this.hasTitle||this.element.removeAttr("title")},_attachIconSpace:function(t){this.icon[/^(?:end|bottom)/.test(t)?"before":"after"](this.iconSpace)},_attachIcon:function(t){this.element[/^(?:end|bottom)/.test(t)?"append":"prepend"](this.icon)},_setOptions:function(t){var e=void 0===t.showLabel?this.options.showLabel:t.showLabel,i=void 0===t.icon?this.options.icon:t.icon;e||i||(t.showLabel=!0),this._super(t)},_setOption:function(t,e){"icon"===t&&(e?this._updateIcon(t,e):this.icon&&(this.icon.remove(),this.iconSpace&&this.iconSpace.remove())),"iconPosition"===t&&this._updateIcon(t,e),"showLabel"===t&&(this._toggleClass("ui-button-icon-only",null,!e),this._updateTooltip()),"label"===t&&(this.isInput?this.element.val(e):(this.element.html(e),this.icon&&(this._attachIcon(this.options.iconPosition),this._attachIconSpace(this.options.iconPosition)))),this._super(t,e),"disabled"===t&&(this._toggleClass(null,"ui-state-disabled",e),(this.element[0].disabled=e)&&this.element.blur())},refresh:function(){var t=this.element.is("input, button")?this.element[0].disabled:this.element.hasClass("ui-button-disabled");t!==this.options.disabled&&this._setOptions({disabled:t}),this._updateTooltip()}}),!1!==T.uiBackCompat&&(T.widget("ui.button",T.ui.button,{options:{text:!0,icons:{primary:null,secondary:null}},_create:function(){this.options.showLabel&&!this.options.text&&(this.options.showLabel=this.options.text),!this.options.showLabel&&this.options.text&&(this.options.text=this.options.showLabel),this.options.icon||!this.options.icons.primary&&!this.options.icons.secondary?this.options.icon&&(this.options.icons.primary=this.options.icon):this.options.icons.primary?this.options.icon=this.options.icons.primary:(this.options.icon=this.options.icons.secondary,this.options.iconPosition="end"),this._super()},_setOption:function(t,e){"text"!==t?("showLabel"===t&&(this.options.text=e),"icon"===t&&(this.options.icons.primary=e),"icons"===t&&(e.primary?(this._super("icon",e.primary),this._super("iconPosition","beginning")):e.secondary&&(this._super("icon",e.secondary),this._super("iconPosition","end"))),this._superApply(arguments)):this._super("showLabel",e)}}),T.fn.button=(d=T.fn.button,function(){return!this.length||this.length&&"INPUT"!==this[0].tagName||this.length&&"INPUT"===this[0].tagName&&"checkbox"!==this.attr("type")&&"radio"!==this.attr("type")?d.apply(this,arguments):(T.ui.checkboxradio||T.error("Checkboxradio widget missing"),0===arguments.length?this.checkboxradio({icon:!1}):this.checkboxradio.apply(this,arguments))}),T.fn.buttonset=function(){return T.ui.controlgroup||T.error("Controlgroup widget missing"),"option"===arguments[0]&&"items"===arguments[1]&&arguments[2]?this.controlgroup.apply(this,[arguments[0],"items.button",arguments[2]]):"option"===arguments[0]&&"items"===arguments[1]?this.controlgroup.apply(this,[arguments[0],"items.button"]):("object"==typeof arguments[0]&&arguments[0].items&&(arguments[0].items={button:arguments[0].items}),this.controlgroup.apply(this,arguments))});var p;T.ui.button;function f(){this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId="ui-datepicker-div",this._inlineClass="ui-datepicker-inline",this._appendClass="ui-datepicker-append",this._triggerClass="ui-datepicker-trigger",this._dialogClass="ui-datepicker-dialog",this._disableClass="ui-datepicker-disabled",this._unselectableClass="ui-datepicker-unselectable",this._currentClass="ui-datepicker-current-day",this._dayOverClass="ui-datepicker-days-cell-over",this.regional=[],this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},T.extend(this._defaults,this.regional[""]),this.regional.en=T.extend(!0,{},this.regional[""]),this.regional["en-US"]=T.extend(!0,{},this.regional.en),this.dpDiv=g(T("<div id='"+this._mainDivId+"' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"))}function g(t){var e="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return t.on("mouseout",e,function(){T(this).removeClass("ui-state-hover"),-1!==this.className.indexOf("ui-datepicker-prev")&&T(this).removeClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&&T(this).removeClass("ui-datepicker-next-hover")}).on("mouseover",e,m)}function m(){T.datepicker._isDisabledDatepicker(p.inline?p.dpDiv.parent()[0]:p.input[0])||(T(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),T(this).addClass("ui-state-hover"),-1!==this.className.indexOf("ui-datepicker-prev")&&T(this).addClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&&T(this).addClass("ui-datepicker-next-hover"))}function v(t,e){for(var i in T.extend(t,e),e)null==e[i]&&(t[i]=e[i]);return t}T.extend(T.ui,{datepicker:{version:"1.12.1"}}),T.extend(f.prototype,{markerClassName:"hasDatepicker",maxRows:4,_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(t){return v(this._defaults,t||{}),this},_attachDatepicker:function(t,e){var i,s,n;s="div"===(i=t.nodeName.toLowerCase())||"span"===i,t.id||(this.uuid+=1,t.id="dp"+this.uuid),(n=this._newInst(T(t),s)).settings=T.extend({},e||{}),"input"===i?this._connectDatepicker(t,n):s&&this._inlineDatepicker(t,n)},_newInst:function(t,e){return{id:t[0].id.replace(/([^A-Za-z0-9_\-])/g,"\\\\$1"),input:t,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:e,dpDiv:e?g(T("<div class='"+this._inlineClass+" ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")):this.dpDiv}},_connectDatepicker:function(t,e){var i=T(t);e.append=T([]),e.trigger=T([]),i.hasClass(this.markerClassName)||(this._attachments(i,e),i.addClass(this.markerClassName).on("keydown",this._doKeyDown).on("keypress",this._doKeyPress).on("keyup",this._doKeyUp),this._autoSize(e),T.data(t,"datepicker",e),e.settings.disabled&&this._disableDatepicker(t))},_attachments:function(t,e){var i,s,n,o=this._get(e,"appendText"),r=this._get(e,"isRTL");e.append&&e.append.remove(),o&&(e.append=T("<span class='"+this._appendClass+"'>"+o+"</span>"),t[r?"before":"after"](e.append)),t.off("focus",this._showDatepicker),e.trigger&&e.trigger.remove(),"focus"!==(i=this._get(e,"showOn"))&&"both"!==i||t.on("focus",this._showDatepicker),"button"!==i&&"both"!==i||(s=this._get(e,"buttonText"),n=this._get(e,"buttonImage"),e.trigger=T(this._get(e,"buttonImageOnly")?T("<img/>").addClass(this._triggerClass).attr({src:n,alt:s,title:s}):T("<button type='button'></button>").addClass(this._triggerClass).html(n?T("<img/>").attr({src:n,alt:s,title:s}):s)),t[r?"before":"after"](e.trigger),e.trigger.on("click",function(){return T.datepicker._datepickerShowing&&T.datepicker._lastInput===t[0]?T.datepicker._hideDatepicker():(T.datepicker._datepickerShowing&&T.datepicker._lastInput!==t[0]&&T.datepicker._hideDatepicker(),T.datepicker._showDatepicker(t[0])),!1}))},_autoSize:function(t){if(this._get(t,"autoSize")&&!t.inline){var e,i,s,n,o=new Date(2009,11,20),r=this._get(t,"dateFormat");r.match(/[DM]/)&&(e=function(t){for(n=s=i=0;n<t.length;n++)t[n].length>i&&(i=t[n].length,s=n);return s},o.setMonth(e(this._get(t,r.match(/MM/)?"monthNames":"monthNamesShort"))),o.setDate(e(this._get(t,r.match(/DD/)?"dayNames":"dayNamesShort"))+20-o.getDay())),t.input.attr("size",this._formatDate(t,o).length)}},_inlineDatepicker:function(t,e){var i=T(t);i.hasClass(this.markerClassName)||(i.addClass(this.markerClassName).append(e.dpDiv),T.data(t,"datepicker",e),this._setDate(e,this._getDefaultDate(e),!0),this._updateDatepicker(e),this._updateAlternate(e),e.settings.disabled&&this._disableDatepicker(t),e.dpDiv.css("display","block"))},_dialogDatepicker:function(t,e,i,s,n){var o,r,a,l,h,u=this._dialogInst;return u||(this.uuid+=1,o="dp"+this.uuid,this._dialogInput=T("<input type='text' id='"+o+"' style='position: absolute; top: -100px; width: 0px;'/>"),this._dialogInput.on("keydown",this._doKeyDown),T("body").append(this._dialogInput),(u=this._dialogInst=this._newInst(this._dialogInput,!1)).settings={},T.data(this._dialogInput[0],"datepicker",u)),v(u.settings,s||{}),e=e&&e.constructor===Date?this._formatDate(u,e):e,this._dialogInput.val(e),this._pos=n?n.length?n:[n.pageX,n.pageY]:null,this._pos||(r=document.documentElement.clientWidth,a=document.documentElement.clientHeight,l=document.documentElement.scrollLeft||document.body.scrollLeft,h=document.documentElement.scrollTop||document.body.scrollTop,this._pos=[r/2-100+l,a/2-150+h]),this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px"),u.settings.onSelect=i,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),T.blockUI&&T.blockUI(this.dpDiv),T.data(this._dialogInput[0],"datepicker",u),this},_destroyDatepicker:function(t){var e,i=T(t),s=T.data(t,"datepicker");i.hasClass(this.markerClassName)&&(e=t.nodeName.toLowerCase(),T.removeData(t,"datepicker"),"input"===e?(s.append.remove(),s.trigger.remove(),i.removeClass(this.markerClassName).off("focus",this._showDatepicker).off("keydown",this._doKeyDown).off("keypress",this._doKeyPress).off("keyup",this._doKeyUp)):"div"!==e&&"span"!==e||i.removeClass(this.markerClassName).empty(),p===s&&(p=null))},_enableDatepicker:function(e){var t,i,s=T(e),n=T.data(e,"datepicker");s.hasClass(this.markerClassName)&&("input"===(t=e.nodeName.toLowerCase())?(e.disabled=!1,n.trigger.filter("button").each(function(){this.disabled=!1}).end().filter("img").css({opacity:"1.0",cursor:""})):"div"!==t&&"span"!==t||((i=s.children("."+this._inlineClass)).children().removeClass("ui-state-disabled"),i.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!1)),this._disabledInputs=T.map(this._disabledInputs,function(t){return t===e?null:t}))},_disableDatepicker:function(e){var t,i,s=T(e),n=T.data(e,"datepicker");s.hasClass(this.markerClassName)&&("input"===(t=e.nodeName.toLowerCase())?(e.disabled=!0,n.trigger.filter("button").each(function(){this.disabled=!0}).end().filter("img").css({opacity:"0.5",cursor:"default"})):"div"!==t&&"span"!==t||((i=s.children("."+this._inlineClass)).children().addClass("ui-state-disabled"),i.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!0)),this._disabledInputs=T.map(this._disabledInputs,function(t){return t===e?null:t}),this._disabledInputs[this._disabledInputs.length]=e)},_isDisabledDatepicker:function(t){if(!t)return!1;for(var e=0;e<this._disabledInputs.length;e++)if(this._disabledInputs[e]===t)return!0;return!1},_getInst:function(t){try{return T.data(t,"datepicker")}catch(t){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(t,e,i){var s,n,o,r,a=this._getInst(t);if(2===arguments.length&&"string"==typeof e)return"defaults"===e?T.extend({},T.datepicker._defaults):a?"all"===e?T.extend({},a.settings):this._get(a,e):null;s=e||{},"string"==typeof e&&((s={})[e]=i),a&&(this._curInst===a&&this._hideDatepicker(),n=this._getDateDatepicker(t,!0),o=this._getMinMaxDate(a,"min"),r=this._getMinMaxDate(a,"max"),v(a.settings,s),null!==o&&void 0!==s.dateFormat&&void 0===s.minDate&&(a.settings.minDate=this._formatDate(a,o)),null!==r&&void 0!==s.dateFormat&&void 0===s.maxDate&&(a.settings.maxDate=this._formatDate(a,r)),"disabled"in s&&(s.disabled?this._disableDatepicker(t):this._enableDatepicker(t)),this._attachments(T(t),a),this._autoSize(a),this._setDate(a,n),this._updateAlternate(a),this._updateDatepicker(a))},_changeDatepicker:function(t,e,i){this._optionDatepicker(t,e,i)},_refreshDatepicker:function(t){var e=this._getInst(t);e&&this._updateDatepicker(e)},_setDateDatepicker:function(t,e){var i=this._getInst(t);i&&(this._setDate(i,e),this._updateDatepicker(i),this._updateAlternate(i))},_getDateDatepicker:function(t,e){var i=this._getInst(t);return i&&!i.inline&&this._setDateFromField(i,e),i?this._getDate(i):null},_doKeyDown:function(t){var e,i,s,n=T.datepicker._getInst(t.target),o=!0,r=n.dpDiv.is(".ui-datepicker-rtl");if(n._keyEvent=!0,T.datepicker._datepickerShowing)switch(t.keyCode){case 9:T.datepicker._hideDatepicker(),o=!1;break;case 13:return(s=T("td."+T.datepicker._dayOverClass+":not(."+T.datepicker._currentClass+")",n.dpDiv))[0]&&T.datepicker._selectDay(t.target,n.selectedMonth,n.selectedYear,s[0]),(e=T.datepicker._get(n,"onSelect"))?(i=T.datepicker._formatDate(n),e.apply(n.input?n.input[0]:null,[i,n])):T.datepicker._hideDatepicker(),!1;case 27:T.datepicker._hideDatepicker();break;case 33:T.datepicker._adjustDate(t.target,t.ctrlKey?-T.datepicker._get(n,"stepBigMonths"):-T.datepicker._get(n,"stepMonths"),"M");break;case 34:T.datepicker._adjustDate(t.target,t.ctrlKey?+T.datepicker._get(n,"stepBigMonths"):+T.datepicker._get(n,"stepMonths"),"M");break;case 35:(t.ctrlKey||t.metaKey)&&T.datepicker._clearDate(t.target),o=t.ctrlKey||t.metaKey;break;case 36:(t.ctrlKey||t.metaKey)&&T.datepicker._gotoToday(t.target),o=t.ctrlKey||t.metaKey;break;case 37:(t.ctrlKey||t.metaKey)&&T.datepicker._adjustDate(t.target,r?1:-1,"D"),o=t.ctrlKey||t.metaKey,t.originalEvent.altKey&&T.datepicker._adjustDate(t.target,t.ctrlKey?-T.datepicker._get(n,"stepBigMonths"):-T.datepicker._get(n,"stepMonths"),"M");break;case 38:(t.ctrlKey||t.metaKey)&&T.datepicker._adjustDate(t.target,-7,"D"),o=t.ctrlKey||t.metaKey;break;case 39:(t.ctrlKey||t.metaKey)&&T.datepicker._adjustDate(t.target,r?-1:1,"D"),o=t.ctrlKey||t.metaKey,t.originalEvent.altKey&&T.datepicker._adjustDate(t.target,t.ctrlKey?+T.datepicker._get(n,"stepBigMonths"):+T.datepicker._get(n,"stepMonths"),"M");break;case 40:(t.ctrlKey||t.metaKey)&&T.datepicker._adjustDate(t.target,7,"D"),o=t.ctrlKey||t.metaKey;break;default:o=!1}else 36===t.keyCode&&t.ctrlKey?T.datepicker._showDatepicker(this):o=!1;o&&(t.preventDefault(),t.stopPropagation())},_doKeyPress:function(t){var e,i,s=T.datepicker._getInst(t.target);if(T.datepicker._get(s,"constrainInput"))return e=T.datepicker._possibleChars(T.datepicker._get(s,"dateFormat")),i=String.fromCharCode(null==t.charCode?t.keyCode:t.charCode),t.ctrlKey||t.metaKey||i<" "||!e||-1<e.indexOf(i)},_doKeyUp:function(t){var e=T.datepicker._getInst(t.target);if(e.input.val()!==e.lastVal)try{T.datepicker.parseDate(T.datepicker._get(e,"dateFormat"),e.input?e.input.val():null,T.datepicker._getFormatConfig(e))&&(T.datepicker._setDateFromField(e),T.datepicker._updateAlternate(e),T.datepicker._updateDatepicker(e))}catch(t){}return!0},_showDatepicker:function(t){var e,i,s,n,o,r,a;("input"!==(t=t.target||t).nodeName.toLowerCase()&&(t=T("input",t.parentNode)[0]),T.datepicker._isDisabledDatepicker(t)||T.datepicker._lastInput===t)||(e=T.datepicker._getInst(t),T.datepicker._curInst&&T.datepicker._curInst!==e&&(T.datepicker._curInst.dpDiv.stop(!0,!0),e&&T.datepicker._datepickerShowing&&T.datepicker._hideDatepicker(T.datepicker._curInst.input[0])),!1!==(s=(i=T.datepicker._get(e,"beforeShow"))?i.apply(t,[t,e]):{})&&(v(e.settings,s),e.lastVal=null,T.datepicker._lastInput=t,T.datepicker._setDateFromField(e),T.datepicker._inDialog&&(t.value=""),T.datepicker._pos||(T.datepicker._pos=T.datepicker._findPos(t),T.datepicker._pos[1]+=t.offsetHeight),n=!1,T(t).parents().each(function(){return!(n|="fixed"===T(this).css("position"))}),o={left:T.datepicker._pos[0],top:T.datepicker._pos[1]},T.datepicker._pos=null,e.dpDiv.empty(),e.dpDiv.css({position:"absolute",display:"block",top:"-1000px"}),T.datepicker._updateDatepicker(e),o=T.datepicker._checkOffset(e,o,n),e.dpDiv.css({position:T.datepicker._inDialog&&T.blockUI?"static":n?"fixed":"absolute",display:"none",left:o.left+"px",top:o.top+"px"}),e.inline||(r=T.datepicker._get(e,"showAnim"),a=T.datepicker._get(e,"duration"),e.dpDiv.css("z-index",function(t){for(var e,i;t.length&&t[0]!==document;){if(("absolute"===(e=t.css("position"))||"relative"===e||"fixed"===e)&&(i=parseInt(t.css("zIndex"),10),!isNaN(i)&&0!==i))return i;t=t.parent()}return 0}(T(t))+1),T.datepicker._datepickerShowing=!0,T.effects&&T.effects.effect[r]?e.dpDiv.show(r,T.datepicker._get(e,"showOptions"),a):e.dpDiv[r||"show"](r?a:null),T.datepicker._shouldFocusInput(e)&&e.input.trigger("focus"),T.datepicker._curInst=e)))},_updateDatepicker:function(t){this.maxRows=4,(p=t).dpDiv.empty().append(this._generateHTML(t)),this._attachHandlers(t);var e,i=this._getNumberOfMonths(t),s=i[1],n=t.dpDiv.find("."+this._dayOverClass+" a");0<n.length&&m.apply(n.get(0)),t.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),1<s&&t.dpDiv.addClass("ui-datepicker-multi-"+s).css("width",17*s+"em"),t.dpDiv[(1!==i[0]||1!==i[1]?"add":"remove")+"Class"]("ui-datepicker-multi"),t.dpDiv[(this._get(t,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl"),t===T.datepicker._curInst&&T.datepicker._datepickerShowing&&T.datepicker._shouldFocusInput(t)&&t.input.trigger("focus"),t.yearshtml&&(e=t.yearshtml,setTimeout(function(){e===t.yearshtml&&t.yearshtml&&t.dpDiv.find("select.ui-datepicker-year:first").replaceWith(t.yearshtml),e=t.yearshtml=null},0))},_shouldFocusInput:function(t){return t.input&&t.input.is(":visible")&&!t.input.is(":disabled")&&!t.input.is(":focus")},_checkOffset:function(t,e,i){var s=t.dpDiv.outerWidth(),n=t.dpDiv.outerHeight(),o=t.input?t.input.outerWidth():0,r=t.input?t.input.outerHeight():0,a=document.documentElement.clientWidth+(i?0:T(document).scrollLeft()),l=document.documentElement.clientHeight+(i?0:T(document).scrollTop());return e.left-=this._get(t,"isRTL")?s-o:0,e.left-=i&&e.left===t.input.offset().left?T(document).scrollLeft():0,e.top-=i&&e.top===t.input.offset().top+r?T(document).scrollTop():0,e.left-=Math.min(e.left,e.left+s>a&&s<a?Math.abs(e.left+s-a):0),e.top-=Math.min(e.top,e.top+n>l&&n<l?Math.abs(n+r):0),e},_findPos:function(t){for(var e,i=this._getInst(t),s=this._get(i,"isRTL");t&&("hidden"===t.type||1!==t.nodeType||T.expr.filters.hidden(t));)t=t[s?"previousSibling":"nextSibling"];return[(e=T(t).offset()).left,e.top]},_hideDatepicker:function(t){var e,i,s,n,o=this._curInst;!o||t&&o!==T.data(t,"datepicker")||this._datepickerShowing&&(e=this._get(o,"showAnim"),i=this._get(o,"duration"),s=function(){T.datepicker._tidyDialog(o)},T.effects&&(T.effects.effect[e]||T.effects[e])?o.dpDiv.hide(e,T.datepicker._get(o,"showOptions"),i,s):o.dpDiv["slideDown"===e?"slideUp":"fadeIn"===e?"fadeOut":"hide"](e?i:null,s),e||s(),this._datepickerShowing=!1,(n=this._get(o,"onClose"))&&n.apply(o.input?o.input[0]:null,[o.input?o.input.val():"",o]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),T.blockUI&&(T.unblockUI(),T("body").append(this.dpDiv))),this._inDialog=!1)},_tidyDialog:function(t){t.dpDiv.removeClass(this._dialogClass).off(".ui-datepicker-calendar")},_checkExternalClick:function(t){if(T.datepicker._curInst){var e=T(t.target),i=T.datepicker._getInst(e[0]);(e[0].id===T.datepicker._mainDivId||0!==e.parents("#"+T.datepicker._mainDivId).length||e.hasClass(T.datepicker.markerClassName)||e.closest("."+T.datepicker._triggerClass).length||!T.datepicker._datepickerShowing||T.datepicker._inDialog&&T.blockUI)&&(!e.hasClass(T.datepicker.markerClassName)||T.datepicker._curInst===i)||T.datepicker._hideDatepicker()}},_adjustDate:function(t,e,i){var s=T(t),n=this._getInst(s[0]);this._isDisabledDatepicker(s[0])||(this._adjustInstDate(n,e+("M"===i?this._get(n,"showCurrentAtPos"):0),i),this._updateDatepicker(n))},_gotoToday:function(t){var e,i=T(t),s=this._getInst(i[0]);this._get(s,"gotoCurrent")&&s.currentDay?(s.selectedDay=s.currentDay,s.drawMonth=s.selectedMonth=s.currentMonth,s.drawYear=s.selectedYear=s.currentYear):(e=new Date,s.selectedDay=e.getDate(),s.drawMonth=s.selectedMonth=e.getMonth(),s.drawYear=s.selectedYear=e.getFullYear()),this._notifyChange(s),this._adjustDate(i)},_selectMonthYear:function(t,e,i){var s=T(t),n=this._getInst(s[0]);n["selected"+("M"===i?"Month":"Year")]=n["draw"+("M"===i?"Month":"Year")]=parseInt(e.options[e.selectedIndex].value,10),this._notifyChange(n),this._adjustDate(s)},_selectDay:function(t,e,i,s){var n,o=T(t);T(s).hasClass(this._unselectableClass)||this._isDisabledDatepicker(o[0])||((n=this._getInst(o[0])).selectedDay=n.currentDay=T("a",s).html(),n.selectedMonth=n.currentMonth=e,n.selectedYear=n.currentYear=i,this._selectDate(t,this._formatDate(n,n.currentDay,n.currentMonth,n.currentYear)))},_clearDate:function(t){var e=T(t);this._selectDate(e,"")},_selectDate:function(t,e){var i,s=T(t),n=this._getInst(s[0]);e=null!=e?e:this._formatDate(n),n.input&&n.input.val(e),this._updateAlternate(n),(i=this._get(n,"onSelect"))?i.apply(n.input?n.input[0]:null,[e,n]):n.input&&n.input.trigger("change"),n.inline?this._updateDatepicker(n):(this._hideDatepicker(),this._lastInput=n.input[0],"object"!=typeof n.input[0]&&n.input.trigger("focus"),this._lastInput=null)},_updateAlternate:function(t){var e,i,s,n=this._get(t,"altField");n&&(e=this._get(t,"altFormat")||this._get(t,"dateFormat"),i=this._getDate(t),s=this.formatDate(e,i,this._getFormatConfig(t)),T(n).val(s))},noWeekends:function(t){var e=t.getDay();return[0<e&&e<6,""]},iso8601Week:function(t){var e,i=new Date(t.getTime());return i.setDate(i.getDate()+4-(i.getDay()||7)),e=i.getTime(),i.setMonth(0),i.setDate(1),Math.floor(Math.round((e-i)/864e5)/7)+1},parseDate:function(i,o,t){if(null==i||null==o)throw"Invalid arguments";if(""===(o="object"==typeof o?o.toString():o+""))return null;var s,e,n,r,a=0,l=(t?t.shortYearCutoff:null)||this._defaults.shortYearCutoff,h="string"!=typeof l?l:(new Date).getFullYear()%100+parseInt(l,10),u=(t?t.dayNamesShort:null)||this._defaults.dayNamesShort,c=(t?t.dayNames:null)||this._defaults.dayNames,d=(t?t.monthNamesShort:null)||this._defaults.monthNamesShort,p=(t?t.monthNames:null)||this._defaults.monthNames,f=-1,g=-1,m=-1,v=-1,_=!1,b=function(t){var e=s+1<i.length&&i.charAt(s+1)===t;return e&&s++,e},y=function(t){var e=b(t),i="@"===t?14:"!"===t?20:"y"===t&&e?4:"o"===t?3:2,s=new RegExp("^\\d{"+("y"===t?i:1)+","+i+"}"),n=o.substring(a).match(s);if(!n)throw"Missing number at position "+a;return a+=n[0].length,parseInt(n[0],10)},w=function(t,e,i){var s=-1,n=T.map(b(t)?i:e,function(t,e){return[[e,t]]}).sort(function(t,e){return-(t[1].length-e[1].length)});if(T.each(n,function(t,e){var i=e[1];if(o.substr(a,i.length).toLowerCase()===i.toLowerCase())return s=e[0],a+=i.length,!1}),-1!==s)return s+1;throw"Unknown name at position "+a},x=function(){if(o.charAt(a)!==i.charAt(s))throw"Unexpected literal at position "+a;a++};for(s=0;s<i.length;s++)if(_)"'"!==i.charAt(s)||b("'")?x():_=!1;else switch(i.charAt(s)){case"d":m=y("d");break;case"D":w("D",u,c);break;case"o":v=y("o");break;case"m":g=y("m");break;case"M":g=w("M",d,p);break;case"y":f=y("y");break;case"@":f=(r=new Date(y("@"))).getFullYear(),g=r.getMonth()+1,m=r.getDate();break;case"!":f=(r=new Date((y("!")-this._ticksTo1970)/1e4)).getFullYear(),g=r.getMonth()+1,m=r.getDate();break;case"'":b("'")?x():_=!0;break;default:x()}if(a<o.length&&(n=o.substr(a),!/^\s+/.test(n)))throw"Extra/unparsed characters found in date: "+n;if(-1===f?f=(new Date).getFullYear():f<100&&(f+=(new Date).getFullYear()-(new Date).getFullYear()%100+(f<=h?0:-100)),-1<v)for(g=1,m=v;;){if(m<=(e=this._getDaysInMonth(f,g-1)))break;g++,m-=e}if((r=this._daylightSavingAdjust(new Date(f,g-1,m))).getFullYear()!==f||r.getMonth()+1!==g||r.getDate()!==m)throw"Invalid date";return r},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:24*(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925))*60*60*1e7,formatDate:function(i,t,e){if(!t)return"";var s,n=(e?e.dayNamesShort:null)||this._defaults.dayNamesShort,o=(e?e.dayNames:null)||this._defaults.dayNames,r=(e?e.monthNamesShort:null)||this._defaults.monthNamesShort,a=(e?e.monthNames:null)||this._defaults.monthNames,l=function(t){var e=s+1<i.length&&i.charAt(s+1)===t;return e&&s++,e},h=function(t,e,i){var s=""+e;if(l(t))for(;s.length<i;)s="0"+s;return s},u=function(t,e,i,s){return l(t)?s[e]:i[e]},c="",d=!1;if(t)for(s=0;s<i.length;s++)if(d)"'"!==i.charAt(s)||l("'")?c+=i.charAt(s):d=!1;else switch(i.charAt(s)){case"d":c+=h("d",t.getDate(),2);break;case"D":c+=u("D",t.getDay(),n,o);break;case"o":c+=h("o",Math.round((new Date(t.getFullYear(),t.getMonth(),t.getDate()).getTime()-new Date(t.getFullYear(),0,0).getTime())/864e5),3);break;case"m":c+=h("m",t.getMonth()+1,2);break;case"M":c+=u("M",t.getMonth(),r,a);break;case"y":c+=l("y")?t.getFullYear():(t.getFullYear()%100<10?"0":"")+t.getFullYear()%100;break;case"@":c+=t.getTime();break;case"!":c+=1e4*t.getTime()+this._ticksTo1970;break;case"'":l("'")?c+="'":d=!0;break;default:c+=i.charAt(s)}return c},_possibleChars:function(i){var s,t="",e=!1,n=function(t){var e=s+1<i.length&&i.charAt(s+1)===t;return e&&s++,e};for(s=0;s<i.length;s++)if(e)"'"!==i.charAt(s)||n("'")?t+=i.charAt(s):e=!1;else switch(i.charAt(s)){case"d":case"m":case"y":case"@":t+="0123456789";break;case"D":case"M":return null;case"'":n("'")?t+="'":e=!0;break;default:t+=i.charAt(s)}return t},_get:function(t,e){return void 0!==t.settings[e]?t.settings[e]:this._defaults[e]},_setDateFromField:function(t,e){if(t.input.val()!==t.lastVal){var i=this._get(t,"dateFormat"),s=t.lastVal=t.input?t.input.val():null,n=this._getDefaultDate(t),o=n,r=this._getFormatConfig(t);try{o=this.parseDate(i,s,r)||n}catch(t){s=e?"":s}t.selectedDay=o.getDate(),t.drawMonth=t.selectedMonth=o.getMonth(),t.drawYear=t.selectedYear=o.getFullYear(),t.currentDay=s?o.getDate():0,t.currentMonth=s?o.getMonth():0,t.currentYear=s?o.getFullYear():0,this._adjustInstDate(t)}},_getDefaultDate:function(t){return this._restrictMinMax(t,this._determineDate(t,this._get(t,"defaultDate"),new Date))},_determineDate:function(a,t,e){var i,s,n=null==t||""===t?e:"string"==typeof t?function(t){try{return T.datepicker.parseDate(T.datepicker._get(a,"dateFormat"),t,T.datepicker._getFormatConfig(a))}catch(t){}for(var e=(t.toLowerCase().match(/^c/)?T.datepicker._getDate(a):null)||new Date,i=e.getFullYear(),s=e.getMonth(),n=e.getDate(),o=/([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,r=o.exec(t);r;){switch(r[2]||"d"){case"d":case"D":n+=parseInt(r[1],10);break;case"w":case"W":n+=7*parseInt(r[1],10);break;case"m":case"M":s+=parseInt(r[1],10),n=Math.min(n,T.datepicker._getDaysInMonth(i,s));break;case"y":case"Y":i+=parseInt(r[1],10),n=Math.min(n,T.datepicker._getDaysInMonth(i,s))}r=o.exec(t)}return new Date(i,s,n)}(t):"number"==typeof t?isNaN(t)?e:(i=t,(s=new Date).setDate(s.getDate()+i),s):new Date(t.getTime());return(n=n&&"Invalid Date"===n.toString()?e:n)&&(n.setHours(0),n.setMinutes(0),n.setSeconds(0),n.setMilliseconds(0)),this._daylightSavingAdjust(n)},_daylightSavingAdjust:function(t){return t?(t.setHours(12<t.getHours()?t.getHours()+2:0),t):null},_setDate:function(t,e,i){var s=!e,n=t.selectedMonth,o=t.selectedYear,r=this._restrictMinMax(t,this._determineDate(t,e,new Date));t.selectedDay=t.currentDay=r.getDate(),t.drawMonth=t.selectedMonth=t.currentMonth=r.getMonth(),t.drawYear=t.selectedYear=t.currentYear=r.getFullYear(),n===t.selectedMonth&&o===t.selectedYear||i||this._notifyChange(t),this._adjustInstDate(t),t.input&&t.input.val(s?"":this._formatDate(t))},_getDate:function(t){return!t.currentYear||t.input&&""===t.input.val()?null:this._daylightSavingAdjust(new Date(t.currentYear,t.currentMonth,t.currentDay))},_attachHandlers:function(t){var e=this._get(t,"stepMonths"),i="#"+t.id.replace(/\\\\/g,"\\");t.dpDiv.find("[data-handler]").map(function(){var t={prev:function(){T.datepicker._adjustDate(i,-e,"M")},next:function(){T.datepicker._adjustDate(i,+e,"M")},hide:function(){T.datepicker._hideDatepicker()},today:function(){T.datepicker._gotoToday(i)},selectDay:function(){return T.datepicker._selectDay(i,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this),!1},selectMonth:function(){return T.datepicker._selectMonthYear(i,this,"M"),!1},selectYear:function(){return T.datepicker._selectMonthYear(i,this,"Y"),!1}};T(this).on(this.getAttribute("data-event"),t[this.getAttribute("data-handler")])})},_generateHTML:function(t){var e,i,s,n,o,r,a,l,h,u,c,d,p,f,g,m,v,_,b,y,w,x,k,C,D,T,S,I,P,M,A,E,N,H,O,z,W,L,F,R=new Date,j=this._daylightSavingAdjust(new Date(R.getFullYear(),R.getMonth(),R.getDate())),q=this._get(t,"isRTL"),B=this._get(t,"showButtonPanel"),Y=this._get(t,"hideIfNoPrevNext"),$=this._get(t,"navigationAsDateFormat"),U=this._getNumberOfMonths(t),K=this._get(t,"showCurrentAtPos"),V=this._get(t,"stepMonths"),X=1!==U[0]||1!==U[1],G=this._daylightSavingAdjust(t.currentDay?new Date(t.currentYear,t.currentMonth,t.currentDay):new Date(9999,9,9)),Q=this._getMinMaxDate(t,"min"),J=this._getMinMaxDate(t,"max"),Z=t.drawMonth-K,tt=t.drawYear;if(Z<0&&(Z+=12,tt--),J)for(e=this._daylightSavingAdjust(new Date(J.getFullYear(),J.getMonth()-U[0]*U[1]+1,J.getDate())),e=Q&&e<Q?Q:e;this._daylightSavingAdjust(new Date(tt,Z,1))>e;)--Z<0&&(Z=11,tt--);for(t.drawMonth=Z,t.drawYear=tt,i=this._get(t,"prevText"),i=$?this.formatDate(i,this._daylightSavingAdjust(new Date(tt,Z-V,1)),this._getFormatConfig(t)):i,s=this._canAdjustMonth(t,-1,tt,Z)?"<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='"+i+"'><span class='ui-icon ui-icon-circle-triangle-"+(q?"e":"w")+"'>"+i+"</span></a>":Y?"":"<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='"+i+"'><span class='ui-icon ui-icon-circle-triangle-"+(q?"e":"w")+"'>"+i+"</span></a>",n=this._get(t,"nextText"),n=$?this.formatDate(n,this._daylightSavingAdjust(new Date(tt,Z+V,1)),this._getFormatConfig(t)):n,o=this._canAdjustMonth(t,1,tt,Z)?"<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='"+n+"'><span class='ui-icon ui-icon-circle-triangle-"+(q?"w":"e")+"'>"+n+"</span></a>":Y?"":"<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='"+n+"'><span class='ui-icon ui-icon-circle-triangle-"+(q?"w":"e")+"'>"+n+"</span></a>",r=this._get(t,"currentText"),a=this._get(t,"gotoCurrent")&&t.currentDay?G:j,r=$?this.formatDate(r,a,this._getFormatConfig(t)):r,l=t.inline?"":"<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>"+this._get(t,"closeText")+"</button>",h=B?"<div class='ui-datepicker-buttonpane ui-widget-content'>"+(q?l:"")+(this._isInRange(t,a)?"<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>"+r+"</button>":"")+(q?"":l)+"</div>":"",u=parseInt(this._get(t,"firstDay"),10),u=isNaN(u)?0:u,c=this._get(t,"showWeek"),d=this._get(t,"dayNames"),p=this._get(t,"dayNamesMin"),f=this._get(t,"monthNames"),g=this._get(t,"monthNamesShort"),m=this._get(t,"beforeShowDay"),v=this._get(t,"showOtherMonths"),_=this._get(t,"selectOtherMonths"),b=this._getDefaultDate(t),y="",x=0;x<U[0];x++){for(k="",this.maxRows=4,C=0;C<U[1];C++){if(D=this._daylightSavingAdjust(new Date(tt,Z,t.selectedDay)),T=" ui-corner-all",S="",X){if(S+="<div class='ui-datepicker-group",1<U[1])switch(C){case 0:S+=" ui-datepicker-group-first",T=" ui-corner-"+(q?"right":"left");break;case U[1]-1:S+=" ui-datepicker-group-last",T=" ui-corner-"+(q?"left":"right");break;default:S+=" ui-datepicker-group-middle",T=""}S+="'>"}for(S+="<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix"+T+"'>"+(/all|left/.test(T)&&0===x?q?o:s:"")+(/all|right/.test(T)&&0===x?q?s:o:"")+this._generateMonthYearHeader(t,Z,tt,Q,J,0<x||0<C,f,g)+"</div><table class='ui-datepicker-calendar'><thead><tr>",I=c?"<th class='ui-datepicker-week-col'>"+this._get(t,"weekHeader")+"</th>":"",w=0;w<7;w++)I+="<th scope='col'"+(5<=(w+u+6)%7?" class='ui-datepicker-week-end'":"")+"><span title='"+d[P=(w+u)%7]+"'>"+p[P]+"</span></th>";for(S+=I+"</tr></thead><tbody>",M=this._getDaysInMonth(tt,Z),tt===t.selectedYear&&Z===t.selectedMonth&&(t.selectedDay=Math.min(t.selectedDay,M)),A=(this._getFirstDayOfMonth(tt,Z)-u+7)%7,E=Math.ceil((A+M)/7),N=X&&this.maxRows>E?this.maxRows:E,this.maxRows=N,H=this._daylightSavingAdjust(new Date(tt,Z,1-A)),O=0;O<N;O++){for(S+="<tr>",z=c?"<td class='ui-datepicker-week-col'>"+this._get(t,"calculateWeek")(H)+"</td>":"",w=0;w<7;w++)W=m?m.apply(t.input?t.input[0]:null,[H]):[!0,""],F=(L=H.getMonth()!==Z)&&!_||!W[0]||Q&&H<Q||J&&J<H,z+="<td class='"+(5<=(w+u+6)%7?" ui-datepicker-week-end":"")+(L?" ui-datepicker-other-month":"")+(H.getTime()===D.getTime()&&Z===t.selectedMonth&&t._keyEvent||b.getTime()===H.getTime()&&b.getTime()===D.getTime()?" "+this._dayOverClass:"")+(F?" "+this._unselectableClass+" ui-state-disabled":"")+(L&&!v?"":" "+W[1]+(H.getTime()===G.getTime()?" "+this._currentClass:"")+(H.getTime()===j.getTime()?" ui-datepicker-today":""))+"'"+(L&&!v||!W[2]?"":" title='"+W[2].replace(/'/g,"&#39;")+"'")+(F?"":" data-handler='selectDay' data-event='click' data-month='"+H.getMonth()+"' data-year='"+H.getFullYear()+"'")+">"+(L&&!v?"&#xa0;":F?"<span class='ui-state-default'>"+H.getDate()+"</span>":"<a class='ui-state-default"+(H.getTime()===j.getTime()?" ui-state-highlight":"")+(H.getTime()===G.getTime()?" ui-state-active":"")+(L?" ui-priority-secondary":"")+"' href='#'>"+H.getDate()+"</a>")+"</td>",H.setDate(H.getDate()+1),H=this._daylightSavingAdjust(H);S+=z+"</tr>"}11<++Z&&(Z=0,tt++),k+=S+="</tbody></table>"+(X?"</div>"+(0<U[0]&&C===U[1]-1?"<div class='ui-datepicker-row-break'></div>":""):"")}y+=k}return y+=h,t._keyEvent=!1,y},_generateMonthYearHeader:function(t,e,i,s,n,o,r,a){var l,h,u,c,d,p,f,g,m=this._get(t,"changeMonth"),v=this._get(t,"changeYear"),_=this._get(t,"showMonthAfterYear"),b="<div class='ui-datepicker-title'>",y="";if(o||!m)y+="<span class='ui-datepicker-month'>"+r[e]+"</span>";else{for(l=s&&s.getFullYear()===i,h=n&&n.getFullYear()===i,y+="<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>",u=0;u<12;u++)(!l||u>=s.getMonth())&&(!h||u<=n.getMonth())&&(y+="<option value='"+u+"'"+(u===e?" selected='selected'":"")+">"+a[u]+"</option>");y+="</select>"}if(_||(b+=y+(!o&&m&&v?"":"&#xa0;")),!t.yearshtml)if(t.yearshtml="",o||!v)b+="<span class='ui-datepicker-year'>"+i+"</span>";else{for(c=this._get(t,"yearRange").split(":"),d=(new Date).getFullYear(),f=(p=function(t){var e=t.match(/c[+\-].*/)?i+parseInt(t.substring(1),10):t.match(/[+\-].*/)?d+parseInt(t,10):parseInt(t,10);return isNaN(e)?d:e})(c[0]),g=Math.max(f,p(c[1]||"")),f=s?Math.max(f,s.getFullYear()):f,g=n?Math.min(g,n.getFullYear()):g,t.yearshtml+="<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";f<=g;f++)t.yearshtml+="<option value='"+f+"'"+(f===i?" selected='selected'":"")+">"+f+"</option>";t.yearshtml+="</select>",b+=t.yearshtml,t.yearshtml=null}return b+=this._get(t,"yearSuffix"),_&&(b+=(!o&&m&&v?"":"&#xa0;")+y),b+="</div>"},_adjustInstDate:function(t,e,i){var s=t.selectedYear+("Y"===i?e:0),n=t.selectedMonth+("M"===i?e:0),o=Math.min(t.selectedDay,this._getDaysInMonth(s,n))+("D"===i?e:0),r=this._restrictMinMax(t,this._daylightSavingAdjust(new Date(s,n,o)));t.selectedDay=r.getDate(),t.drawMonth=t.selectedMonth=r.getMonth(),t.drawYear=t.selectedYear=r.getFullYear(),"M"!==i&&"Y"!==i||this._notifyChange(t)},_restrictMinMax:function(t,e){var i=this._getMinMaxDate(t,"min"),s=this._getMinMaxDate(t,"max"),n=i&&e<i?i:e;return s&&s<n?s:n},_notifyChange:function(t){var e=this._get(t,"onChangeMonthYear");e&&e.apply(t.input?t.input[0]:null,[t.selectedYear,t.selectedMonth+1,t])},_getNumberOfMonths:function(t){var e=this._get(t,"numberOfMonths");return null==e?[1,1]:"number"==typeof e?[1,e]:e},_getMinMaxDate:function(t,e){return this._determineDate(t,this._get(t,e+"Date"),null)},_getDaysInMonth:function(t,e){return 32-this._daylightSavingAdjust(new Date(t,e,32)).getDate()},_getFirstDayOfMonth:function(t,e){return new Date(t,e,1).getDay()},_canAdjustMonth:function(t,e,i,s){var n=this._getNumberOfMonths(t),o=this._daylightSavingAdjust(new Date(i,s+(e<0?e:n[0]*n[1]),1));return e<0&&o.setDate(this._getDaysInMonth(o.getFullYear(),o.getMonth())),this._isInRange(t,o)},_isInRange:function(t,e){var i,s,n=this._getMinMaxDate(t,"min"),o=this._getMinMaxDate(t,"max"),r=null,a=null,l=this._get(t,"yearRange");return l&&(i=l.split(":"),s=(new Date).getFullYear(),r=parseInt(i[0],10),a=parseInt(i[1],10),i[0].match(/[+\-].*/)&&(r+=s),i[1].match(/[+\-].*/)&&(a+=s)),(!n||e.getTime()>=n.getTime())&&(!o||e.getTime()<=o.getTime())&&(!r||e.getFullYear()>=r)&&(!a||e.getFullYear()<=a)},_getFormatConfig:function(t){var e=this._get(t,"shortYearCutoff");return{shortYearCutoff:e="string"!=typeof e?e:(new Date).getFullYear()%100+parseInt(e,10),dayNamesShort:this._get(t,"dayNamesShort"),dayNames:this._get(t,"dayNames"),monthNamesShort:this._get(t,"monthNamesShort"),monthNames:this._get(t,"monthNames")}},_formatDate:function(t,e,i,s){e||(t.currentDay=t.selectedDay,t.currentMonth=t.selectedMonth,t.currentYear=t.selectedYear);var n=e?"object"==typeof e?e:this._daylightSavingAdjust(new Date(s,i,e)):this._daylightSavingAdjust(new Date(t.currentYear,t.currentMonth,t.currentDay));return this.formatDate(this._get(t,"dateFormat"),n,this._getFormatConfig(t))}}),T.fn.datepicker=function(t){if(!this.length)return this;T.datepicker.initialized||(T(document).on("mousedown",T.datepicker._checkExternalClick),T.datepicker.initialized=!0),0===T("#"+T.datepicker._mainDivId).length&&T("body").append(T.datepicker.dpDiv);var e=Array.prototype.slice.call(arguments,1);return"string"!=typeof t||"isDisabled"!==t&&"getDate"!==t&&"widget"!==t?"option"===t&&2===arguments.length&&"string"==typeof arguments[1]?T.datepicker["_"+t+"Datepicker"].apply(T.datepicker,[this[0]].concat(e)):this.each(function(){"string"==typeof t?T.datepicker["_"+t+"Datepicker"].apply(T.datepicker,[this].concat(e)):T.datepicker._attachDatepicker(this,t)}):T.datepicker["_"+t+"Datepicker"].apply(T.datepicker,[this[0]].concat(e))},T.datepicker=new f,T.datepicker.initialized=!1,T.datepicker.uuid=(new Date).getTime(),T.datepicker.version="1.12.1";T.datepicker,T.ui.ie=!!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase());var _=!1;T(document).on("mouseup",function(){_=!1});T.widget("ui.mouse",{version:"1.12.1",options:{cancel:"input, textarea, button, select, option",distance:1,delay:0},_mouseInit:function(){var e=this;this.element.on("mousedown."+this.widgetName,function(t){return e._mouseDown(t)}).on("click."+this.widgetName,function(t){if(!0===T.data(t.target,e.widgetName+".preventClickEvent"))return T.removeData(t.target,e.widgetName+".preventClickEvent"),t.stopImmediatePropagation(),!1}),this.started=!1},_mouseDestroy:function(){this.element.off("."+this.widgetName),this._mouseMoveDelegate&&this.document.off("mousemove."+this.widgetName,this._mouseMoveDelegate).off("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(t){if(!_){this._mouseMoved=!1,this._mouseStarted&&this._mouseUp(t),this._mouseDownEvent=t;var e=this,i=1===t.which,s=!("string"!=typeof this.options.cancel||!t.target.nodeName)&&T(t.target).closest(this.options.cancel).length;return!(i&&!s&&this._mouseCapture(t))||(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){e.mouseDelayMet=!0},this.options.delay)),this._mouseDistanceMet(t)&&this._mouseDelayMet(t)&&(this._mouseStarted=!1!==this._mouseStart(t),!this._mouseStarted)?(t.preventDefault(),!0):(!0===T.data(t.target,this.widgetName+".preventClickEvent")&&T.removeData(t.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(t){return e._mouseMove(t)},this._mouseUpDelegate=function(t){return e._mouseUp(t)},this.document.on("mousemove."+this.widgetName,this._mouseMoveDelegate).on("mouseup."+this.widgetName,this._mouseUpDelegate),t.preventDefault(),_=!0))}},_mouseMove:function(t){if(this._mouseMoved){if(T.ui.ie&&(!document.documentMode||document.documentMode<9)&&!t.button)return this._mouseUp(t);if(!t.which)if(t.originalEvent.altKey||t.originalEvent.ctrlKey||t.originalEvent.metaKey||t.originalEvent.shiftKey)this.ignoreMissingWhich=!0;else if(!this.ignoreMissingWhich)return this._mouseUp(t)}return(t.which||t.button)&&(this._mouseMoved=!0),this._mouseStarted?(this._mouseDrag(t),t.preventDefault()):(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)&&(this._mouseStarted=!1!==this._mouseStart(this._mouseDownEvent,t),this._mouseStarted?this._mouseDrag(t):this._mouseUp(t)),!this._mouseStarted)},_mouseUp:function(t){this.document.off("mousemove."+this.widgetName,this._mouseMoveDelegate).off("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,t.target===this._mouseDownEvent.target&&T.data(t.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(t)),this._mouseDelayTimer&&(clearTimeout(this._mouseDelayTimer),delete this._mouseDelayTimer),this.ignoreMissingWhich=!1,_=!1,t.preventDefault()},_mouseDistanceMet:function(t){return Math.max(Math.abs(this._mouseDownEvent.pageX-t.pageX),Math.abs(this._mouseDownEvent.pageY-t.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}}),T.ui.plugin={add:function(t,e,i){var s,n=T.ui[t].prototype;for(s in i)n.plugins[s]=n.plugins[s]||[],n.plugins[s].push([e,i[s]])},call:function(t,e,i,s){var n,o=t.plugins[e];if(o&&(s||t.element[0].parentNode&&11!==t.element[0].parentNode.nodeType))for(n=0;n<o.length;n++)t.options[o[n][0]]&&o[n][1].apply(t.element,i)}},T.ui.safeBlur=function(t){t&&"body"!==t.nodeName.toLowerCase()&&T(t).trigger("blur")};T.widget("ui.draggable",T.ui.mouse,{version:"1.12.1",widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1,drag:null,start:null,stop:null},_create:function(){"original"===this.options.helper&&this._setPositionRelative(),this.options.addClasses&&this._addClass("ui-draggable"),this._setHandleClassName(),this._mouseInit()},_setOption:function(t,e){this._super(t,e),"handle"===t&&(this._removeHandleClassName(),this._setHandleClassName())},_destroy:function(){(this.helper||this.element).is(".ui-draggable-dragging")?this.destroyOnClear=!0:(this._removeHandleClassName(),this._mouseDestroy())},_mouseCapture:function(t){var e=this.options;return!(this.helper||e.disabled||0<T(t.target).closest(".ui-resizable-handle").length)&&(this.handle=this._getHandle(t),!!this.handle&&(this._blurActiveElement(t),this._blockFrames(!0===e.iframeFix?"iframe":e.iframeFix),!0))},_blockFrames:function(t){this.iframeBlocks=this.document.find(t).map(function(){var t=T(this);return T("<div>").css("position","absolute").appendTo(t.parent()).outerWidth(t.outerWidth()).outerHeight(t.outerHeight()).offset(t.offset())[0]})},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_blurActiveElement:function(t){var e=T.ui.safeActiveElement(this.document[0]);T(t.target).closest(e).length||T.ui.safeBlur(e)},_mouseStart:function(t){var e=this.options;return this.helper=this._createHelper(t),this._addClass(this.helper,"ui-draggable-dragging"),this._cacheHelperProportions(),T.ui.ddmanager&&(T.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css("position"),this.scrollParent=this.helper.scrollParent(!0),this.offsetParent=this.helper.offsetParent(),this.hasFixedAncestor=0<this.helper.parents().filter(function(){return"fixed"===T(this).css("position")}).length,this.positionAbs=this.element.offset(),this._refreshOffsets(t),this.originalPosition=this.position=this._generatePosition(t,!1),this.originalPageX=t.pageX,this.originalPageY=t.pageY,e.cursorAt&&this._adjustOffsetFromHelper(e.cursorAt),this._setContainment(),!1===this._trigger("start",t)?(this._clear(),!1):(this._cacheHelperProportions(),T.ui.ddmanager&&!e.dropBehaviour&&T.ui.ddmanager.prepareOffsets(this,t),this._mouseDrag(t,!0),T.ui.ddmanager&&T.ui.ddmanager.dragStart(this,t),!0)},_refreshOffsets:function(t){this.offset={top:this.positionAbs.top-this.margins.top,left:this.positionAbs.left-this.margins.left,scroll:!1,parent:this._getParentOffset(),relative:this._getRelativeOffset()},this.offset.click={left:t.pageX-this.offset.left,top:t.pageY-this.offset.top}},_mouseDrag:function(t,e){if(this.hasFixedAncestor&&(this.offset.parent=this._getParentOffset()),this.position=this._generatePosition(t,!0),this.positionAbs=this._convertPositionTo("absolute"),!e){var i=this._uiHash();if(!1===this._trigger("drag",t,i))return this._mouseUp(new T.Event("mouseup",t)),!1;this.position=i.position}return this.helper[0].style.left=this.position.left+"px",this.helper[0].style.top=this.position.top+"px",T.ui.ddmanager&&T.ui.ddmanager.drag(this,t),!1},_mouseStop:function(t){var e=this,i=!1;return T.ui.ddmanager&&!this.options.dropBehaviour&&(i=T.ui.ddmanager.drop(this,t)),this.dropped&&(i=this.dropped,this.dropped=!1),"invalid"===this.options.revert&&!i||"valid"===this.options.revert&&i||!0===this.options.revert||T.isFunction(this.options.revert)&&this.options.revert.call(this.element,i)?T(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){!1!==e._trigger("stop",t)&&e._clear()}):!1!==this._trigger("stop",t)&&this._clear(),!1},_mouseUp:function(t){return this._unblockFrames(),T.ui.ddmanager&&T.ui.ddmanager.dragStop(this,t),this.handleElement.is(t.target)&&this.element.trigger("focus"),T.ui.mouse.prototype._mouseUp.call(this,t)},cancel:function(){return this.helper.is(".ui-draggable-dragging")?this._mouseUp(new T.Event("mouseup",{target:this.element[0]})):this._clear(),this},_getHandle:function(t){return!this.options.handle||!!T(t.target).closest(this.element.find(this.options.handle)).length},_setHandleClassName:function(){this.handleElement=this.options.handle?this.element.find(this.options.handle):this.element,this._addClass(this.handleElement,"ui-draggable-handle")},_removeHandleClassName:function(){this._removeClass(this.handleElement,"ui-draggable-handle")},_createHelper:function(t){var e=this.options,i=T.isFunction(e.helper),s=i?T(e.helper.apply(this.element[0],[t])):"clone"===e.helper?this.element.clone().removeAttr("id"):this.element;return s.parents("body").length||s.appendTo("parent"===e.appendTo?this.element[0].parentNode:e.appendTo),i&&s[0]===this.element[0]&&this._setPositionRelative(),s[0]===this.element[0]||/(fixed|absolute)/.test(s.css("position"))||s.css("position","absolute"),s},_setPositionRelative:function(){/^(?:r|a|f)/.test(this.element.css("position"))||(this.element[0].style.position="relative")},_adjustOffsetFromHelper:function(t){"string"==typeof t&&(t=t.split(" ")),T.isArray(t)&&(t={left:+t[0],top:+t[1]||0}),"left"in t&&(this.offset.click.left=t.left+this.margins.left),"right"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),"top"in t&&(this.offset.click.top=t.top+this.margins.top),"bottom"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_isRootNode:function(t){return/(html|body)/i.test(t.tagName)||t===this.document[0]},_getParentOffset:function(){var t=this.offsetParent.offset(),e=this.document[0];return"absolute"===this.cssPosition&&this.scrollParent[0]!==e&&T.contains(this.scrollParent[0],this.offsetParent[0])&&(t.left+=this.scrollParent.scrollLeft(),t.top+=this.scrollParent.scrollTop()),this._isRootNode(this.offsetParent[0])&&(t={top:0,left:0}),{top:t.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:t.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"!==this.cssPosition)return{top:0,left:0};var t=this.element.position(),e=this._isRootNode(this.scrollParent[0]);return{top:t.top-(parseInt(this.helper.css("top"),10)||0)+(e?0:this.scrollParent.scrollTop()),left:t.left-(parseInt(this.helper.css("left"),10)||0)+(e?0:this.scrollParent.scrollLeft())}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var t,e,i,s=this.options,n=this.document[0];this.relativeContainer=null,s.containment?"window"!==s.containment?"document"!==s.containment?s.containment.constructor!==Array?("parent"===s.containment&&(s.containment=this.helper[0].parentNode),(i=(e=T(s.containment))[0])&&(t=/(scroll|auto)/.test(e.css("overflow")),this.containment=[(parseInt(e.css("borderLeftWidth"),10)||0)+(parseInt(e.css("paddingLeft"),10)||0),(parseInt(e.css("borderTopWidth"),10)||0)+(parseInt(e.css("paddingTop"),10)||0),(t?Math.max(i.scrollWidth,i.offsetWidth):i.offsetWidth)-(parseInt(e.css("borderRightWidth"),10)||0)-(parseInt(e.css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(t?Math.max(i.scrollHeight,i.offsetHeight):i.offsetHeight)-(parseInt(e.css("borderBottomWidth"),10)||0)-(parseInt(e.css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relativeContainer=e)):this.containment=s.containment:this.containment=[0,0,T(n).width()-this.helperProportions.width-this.margins.left,(T(n).height()||n.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]:this.containment=[T(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,T(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,T(window).scrollLeft()+T(window).width()-this.helperProportions.width-this.margins.left,T(window).scrollTop()+(T(window).height()||n.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]:this.containment=null},_convertPositionTo:function(t,e){e||(e=this.position);var i="absolute"===t?1:-1,s=this._isRootNode(this.scrollParent[0]);return{top:e.top+this.offset.relative.top*i+this.offset.parent.top*i-("fixed"===this.cssPosition?-this.offset.scroll.top:s?0:this.offset.scroll.top)*i,left:e.left+this.offset.relative.left*i+this.offset.parent.left*i-("fixed"===this.cssPosition?-this.offset.scroll.left:s?0:this.offset.scroll.left)*i}},_generatePosition:function(t,e){var i,s,n,o,r=this.options,a=this._isRootNode(this.scrollParent[0]),l=t.pageX,h=t.pageY;return a&&this.offset.scroll||(this.offset.scroll={top:this.scrollParent.scrollTop(),left:this.scrollParent.scrollLeft()}),e&&(this.containment&&(i=this.relativeContainer?(s=this.relativeContainer.offset(),[this.containment[0]+s.left,this.containment[1]+s.top,this.containment[2]+s.left,this.containment[3]+s.top]):this.containment,t.pageX-this.offset.click.left<i[0]&&(l=i[0]+this.offset.click.left),t.pageY-this.offset.click.top<i[1]&&(h=i[1]+this.offset.click.top),t.pageX-this.offset.click.left>i[2]&&(l=i[2]+this.offset.click.left),t.pageY-this.offset.click.top>i[3]&&(h=i[3]+this.offset.click.top)),r.grid&&(n=r.grid[1]?this.originalPageY+Math.round((h-this.originalPageY)/r.grid[1])*r.grid[1]:this.originalPageY,h=i?n-this.offset.click.top>=i[1]||n-this.offset.click.top>i[3]?n:n-this.offset.click.top>=i[1]?n-r.grid[1]:n+r.grid[1]:n,o=r.grid[0]?this.originalPageX+Math.round((l-this.originalPageX)/r.grid[0])*r.grid[0]:this.originalPageX,l=i?o-this.offset.click.left>=i[0]||o-this.offset.click.left>i[2]?o:o-this.offset.click.left>=i[0]?o-r.grid[0]:o+r.grid[0]:o),"y"===r.axis&&(l=this.originalPageX),"x"===r.axis&&(h=this.originalPageY)),{top:h-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.offset.scroll.top:a?0:this.offset.scroll.top),left:l-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.offset.scroll.left:a?0:this.offset.scroll.left)}},_clear:function(){this._removeClass(this.helper,"ui-draggable-dragging"),this.helper[0]===this.element[0]||this.cancelHelperRemoval||this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1,this.destroyOnClear&&this.destroy()},_trigger:function(t,e,i){return i=i||this._uiHash(),T.ui.plugin.call(this,t,[e,i,this],!0),/^(drag|start|stop)/.test(t)&&(this.positionAbs=this._convertPositionTo("absolute"),i.offset=this.positionAbs),T.Widget.prototype._trigger.call(this,t,e,i)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),T.ui.plugin.add("draggable","connectToSortable",{start:function(e,t,i){var s=T.extend({},t,{item:i.element});i.sortables=[],T(i.options.connectToSortable).each(function(){var t=T(this).sortable("instance");t&&!t.options.disabled&&(i.sortables.push(t),t.refreshPositions(),t._trigger("activate",e,s))})},stop:function(e,t,i){var s=T.extend({},t,{item:i.element});i.cancelHelperRemoval=!1,T.each(i.sortables,function(){var t=this;t.isOver?(t.isOver=0,i.cancelHelperRemoval=!0,t.cancelHelperRemoval=!1,t._storedCSS={position:t.placeholder.css("position"),top:t.placeholder.css("top"),left:t.placeholder.css("left")},t._mouseStop(e),t.options.helper=t.options._helper):(t.cancelHelperRemoval=!0,t._trigger("deactivate",e,s))})},drag:function(i,s,n){T.each(n.sortables,function(){var t=!1,e=this;e.positionAbs=n.positionAbs,e.helperProportions=n.helperProportions,e.offset.click=n.offset.click,e._intersectsWith(e.containerCache)&&(t=!0,T.each(n.sortables,function(){return this.positionAbs=n.positionAbs,this.helperProportions=n.helperProportions,this.offset.click=n.offset.click,this!==e&&this._intersectsWith(this.containerCache)&&T.contains(e.element[0],this.element[0])&&(t=!1),t})),t?(e.isOver||(e.isOver=1,n._parent=s.helper.parent(),e.currentItem=s.helper.appendTo(e.element).data("ui-sortable-item",!0),e.options._helper=e.options.helper,e.options.helper=function(){return s.helper[0]},i.target=e.currentItem[0],e._mouseCapture(i,!0),e._mouseStart(i,!0,!0),e.offset.click.top=n.offset.click.top,e.offset.click.left=n.offset.click.left,e.offset.parent.left-=n.offset.parent.left-e.offset.parent.left,e.offset.parent.top-=n.offset.parent.top-e.offset.parent.top,n._trigger("toSortable",i),n.dropped=e.element,T.each(n.sortables,function(){this.refreshPositions()}),n.currentItem=n.element,e.fromOutside=n),e.currentItem&&(e._mouseDrag(i),s.position=e.position)):e.isOver&&(e.isOver=0,e.cancelHelperRemoval=!0,e.options._revert=e.options.revert,e.options.revert=!1,e._trigger("out",i,e._uiHash(e)),e._mouseStop(i,!0),e.options.revert=e.options._revert,e.options.helper=e.options._helper,e.placeholder&&e.placeholder.remove(),s.helper.appendTo(n._parent),n._refreshOffsets(i),s.position=n._generatePosition(i,!0),n._trigger("fromSortable",i),n.dropped=!1,T.each(n.sortables,function(){this.refreshPositions()}))})}}),T.ui.plugin.add("draggable","cursor",{start:function(t,e,i){var s=T("body"),n=i.options;s.css("cursor")&&(n._cursor=s.css("cursor")),s.css("cursor",n.cursor)},stop:function(t,e,i){var s=i.options;s._cursor&&T("body").css("cursor",s._cursor)}}),T.ui.plugin.add("draggable","opacity",{start:function(t,e,i){var s=T(e.helper),n=i.options;s.css("opacity")&&(n._opacity=s.css("opacity")),s.css("opacity",n.opacity)},stop:function(t,e,i){var s=i.options;s._opacity&&T(e.helper).css("opacity",s._opacity)}}),T.ui.plugin.add("draggable","scroll",{start:function(t,e,i){i.scrollParentNotHidden||(i.scrollParentNotHidden=i.helper.scrollParent(!1)),i.scrollParentNotHidden[0]!==i.document[0]&&"HTML"!==i.scrollParentNotHidden[0].tagName&&(i.overflowOffset=i.scrollParentNotHidden.offset())},drag:function(t,e,i){var s=i.options,n=!1,o=i.scrollParentNotHidden[0],r=i.document[0];o!==r&&"HTML"!==o.tagName?(s.axis&&"x"===s.axis||(i.overflowOffset.top+o.offsetHeight-t.pageY<s.scrollSensitivity?o.scrollTop=n=o.scrollTop+s.scrollSpeed:t.pageY-i.overflowOffset.top<s.scrollSensitivity&&(o.scrollTop=n=o.scrollTop-s.scrollSpeed)),s.axis&&"y"===s.axis||(i.overflowOffset.left+o.offsetWidth-t.pageX<s.scrollSensitivity?o.scrollLeft=n=o.scrollLeft+s.scrollSpeed:t.pageX-i.overflowOffset.left<s.scrollSensitivity&&(o.scrollLeft=n=o.scrollLeft-s.scrollSpeed))):(s.axis&&"x"===s.axis||(t.pageY-T(r).scrollTop()<s.scrollSensitivity?n=T(r).scrollTop(T(r).scrollTop()-s.scrollSpeed):T(window).height()-(t.pageY-T(r).scrollTop())<s.scrollSensitivity&&(n=T(r).scrollTop(T(r).scrollTop()+s.scrollSpeed))),s.axis&&"y"===s.axis||(t.pageX-T(r).scrollLeft()<s.scrollSensitivity?n=T(r).scrollLeft(T(r).scrollLeft()-s.scrollSpeed):T(window).width()-(t.pageX-T(r).scrollLeft())<s.scrollSensitivity&&(n=T(r).scrollLeft(T(r).scrollLeft()+s.scrollSpeed)))),!1!==n&&T.ui.ddmanager&&!s.dropBehaviour&&T.ui.ddmanager.prepareOffsets(i,t)}}),T.ui.plugin.add("draggable","snap",{start:function(t,e,i){var s=i.options;i.snapElements=[],T(s.snap.constructor!==String?s.snap.items||":data(ui-draggable)":s.snap).each(function(){var t=T(this),e=t.offset();this!==i.element[0]&&i.snapElements.push({item:this,width:t.outerWidth(),height:t.outerHeight(),top:e.top,left:e.left})})},drag:function(t,e,i){var s,n,o,r,a,l,h,u,c,d,p=i.options,f=p.snapTolerance,g=e.offset.left,m=g+i.helperProportions.width,v=e.offset.top,_=v+i.helperProportions.height;for(c=i.snapElements.length-1;0<=c;c--)l=(a=i.snapElements[c].left-i.margins.left)+i.snapElements[c].width,u=(h=i.snapElements[c].top-i.margins.top)+i.snapElements[c].height,m<a-f||l+f<g||_<h-f||u+f<v||!T.contains(i.snapElements[c].item.ownerDocument,i.snapElements[c].item)?(i.snapElements[c].snapping&&i.options.snap.release&&i.options.snap.release.call(i.element,t,T.extend(i._uiHash(),{snapItem:i.snapElements[c].item})),i.snapElements[c].snapping=!1):("inner"!==p.snapMode&&(s=Math.abs(h-_)<=f,n=Math.abs(u-v)<=f,o=Math.abs(a-m)<=f,r=Math.abs(l-g)<=f,s&&(e.position.top=i._convertPositionTo("relative",{top:h-i.helperProportions.height,left:0}).top),n&&(e.position.top=i._convertPositionTo("relative",{top:u,left:0}).top),o&&(e.position.left=i._convertPositionTo("relative",{top:0,left:a-i.helperProportions.width}).left),r&&(e.position.left=i._convertPositionTo("relative",{top:0,left:l}).left)),d=s||n||o||r,"outer"!==p.snapMode&&(s=Math.abs(h-v)<=f,n=Math.abs(u-_)<=f,o=Math.abs(a-g)<=f,r=Math.abs(l-m)<=f,s&&(e.position.top=i._convertPositionTo("relative",{top:h,left:0}).top),n&&(e.position.top=i._convertPositionTo("relative",{top:u-i.helperProportions.height,left:0}).top),o&&(e.position.left=i._convertPositionTo("relative",{top:0,left:a}).left),r&&(e.position.left=i._convertPositionTo("relative",{top:0,left:l-i.helperProportions.width}).left)),!i.snapElements[c].snapping&&(s||n||o||r||d)&&i.options.snap.snap&&i.options.snap.snap.call(i.element,t,T.extend(i._uiHash(),{snapItem:i.snapElements[c].item})),i.snapElements[c].snapping=s||n||o||r||d)}}),T.ui.plugin.add("draggable","stack",{start:function(t,e,i){var s,n=i.options,o=T.makeArray(T(n.stack)).sort(function(t,e){return(parseInt(T(t).css("zIndex"),10)||0)-(parseInt(T(e).css("zIndex"),10)||0)});o.length&&(s=parseInt(T(o[0]).css("zIndex"),10)||0,T(o).each(function(t){T(this).css("zIndex",s+t)}),this.css("zIndex",s+o.length))}}),T.ui.plugin.add("draggable","zIndex",{start:function(t,e,i){var s=T(e.helper),n=i.options;s.css("zIndex")&&(n._zIndex=s.css("zIndex")),s.css("zIndex",n.zIndex)},stop:function(t,e,i){var s=i.options;s._zIndex&&T(e.helper).css("zIndex",s._zIndex)}});T.ui.draggable;T.widget("ui.resizable",T.ui.mouse,{version:"1.12.1",widgetEventPrefix:"resize",options:{alsoResize:!1,animate:!1,animateDuration:"slow",animateEasing:"swing",aspectRatio:!1,autoHide:!1,classes:{"ui-resizable-se":"ui-icon ui-icon-gripsmall-diagonal-se"},containment:!1,ghost:!1,grid:!1,handles:"e,s,se",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:90,resize:null,start:null,stop:null},_num:function(t){return parseFloat(t)||0},_isNumber:function(t){return!isNaN(parseFloat(t))},_hasScroll:function(t,e){if("hidden"===T(t).css("overflow"))return!1;var i,s=e&&"left"===e?"scrollLeft":"scrollTop";return 0<t[s]||(t[s]=1,i=0<t[s],t[s]=0,i)},_create:function(){var t,e=this.options,i=this;this._addClass("ui-resizable"),T.extend(this,{_aspectRatio:!!e.aspectRatio,aspectRatio:e.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:e.helper||e.ghost||e.animate?e.helper||"ui-resizable-helper":null}),this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i)&&(this.element.wrap(T("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css("top"),left:this.element.css("left")})),this.element=this.element.parent().data("ui-resizable",this.element.resizable("instance")),this.elementIsWrapper=!0,t={marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom"),marginLeft:this.originalElement.css("marginLeft")},this.element.css(t),this.originalElement.css("margin",0),this.originalResizeStyle=this.originalElement.css("resize"),this.originalElement.css("resize","none"),this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"})),this.originalElement.css(t),this._proportionallyResize()),this._setupHandles(),e.autoHide&&T(this.element).on("mouseenter",function(){e.disabled||(i._removeClass("ui-resizable-autohide"),i._handles.show())}).on("mouseleave",function(){e.disabled||i.resizing||(i._addClass("ui-resizable-autohide"),i._handles.hide())}),this._mouseInit()},_destroy:function(){this._mouseDestroy();var t,e=function(t){T(t).removeData("resizable").removeData("ui-resizable").off(".resizable").find(".ui-resizable-handle").remove()};return this.elementIsWrapper&&(e(this.element),t=this.element,this.originalElement.css({position:t.css("position"),width:t.outerWidth(),height:t.outerHeight(),top:t.css("top"),left:t.css("left")}).insertAfter(t),t.remove()),this.originalElement.css("resize",this.originalResizeStyle),e(this.originalElement),this},_setOption:function(t,e){switch(this._super(t,e),t){case"handles":this._removeHandles(),this._setupHandles()}},_setupHandles:function(){var t,e,i,s,n,o=this.options,r=this;if(this.handles=o.handles||(T(".ui-resizable-handle",this.element).length?{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",nw:".ui-resizable-nw"}:"e,s,se"),this._handles=T(),this.handles.constructor===String)for("all"===this.handles&&(this.handles="n,e,s,w,se,sw,ne,nw"),i=this.handles.split(","),this.handles={},e=0;e<i.length;e++)s="ui-resizable-"+(t=T.trim(i[e])),n=T("<div>"),this._addClass(n,"ui-resizable-handle "+s),n.css({zIndex:o.zIndex}),this.handles[t]=".ui-resizable-"+t,this.element.append(n);this._renderAxis=function(t){var e,i,s,n;for(e in t=t||this.element,this.handles)this.handles[e].constructor===String?this.handles[e]=this.element.children(this.handles[e]).first().show():(this.handles[e].jquery||this.handles[e].nodeType)&&(this.handles[e]=T(this.handles[e]),this._on(this.handles[e],{mousedown:r._mouseDown})),this.elementIsWrapper&&this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i)&&(i=T(this.handles[e],this.element),n=/sw|ne|nw|se|n|s/.test(e)?i.outerHeight():i.outerWidth(),s=["padding",/ne|nw|n/.test(e)?"Top":/se|sw|s/.test(e)?"Bottom":/^e$/.test(e)?"Right":"Left"].join(""),t.css(s,n),this._proportionallyResize()),this._handles=this._handles.add(this.handles[e])},this._renderAxis(this.element),this._handles=this._handles.add(this.element.find(".ui-resizable-handle")),this._handles.disableSelection(),this._handles.on("mouseover",function(){r.resizing||(this.className&&(n=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)),r.axis=n&&n[1]?n[1]:"se")}),o.autoHide&&(this._handles.hide(),this._addClass("ui-resizable-autohide"))},_removeHandles:function(){this._handles.remove()},_mouseCapture:function(t){var e,i,s=!1;for(e in this.handles)((i=T(this.handles[e])[0])===t.target||T.contains(i,t.target))&&(s=!0);return!this.options.disabled&&s},_mouseStart:function(t){var e,i,s,n=this.options,o=this.element;return this.resizing=!0,this._renderProxy(),e=this._num(this.helper.css("left")),i=this._num(this.helper.css("top")),n.containment&&(e+=T(n.containment).scrollLeft()||0,i+=T(n.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:e,top:i},this.size=this._helper?{width:this.helper.width(),height:this.helper.height()}:{width:o.width(),height:o.height()},this.originalSize=this._helper?{width:o.outerWidth(),height:o.outerHeight()}:{width:o.width(),height:o.height()},this.sizeDiff={width:o.outerWidth()-o.width(),height:o.outerHeight()-o.height()},this.originalPosition={left:e,top:i},this.originalMousePosition={left:t.pageX,top:t.pageY},this.aspectRatio="number"==typeof n.aspectRatio?n.aspectRatio:this.originalSize.width/this.originalSize.height||1,s=T(".ui-resizable-"+this.axis).css("cursor"),T("body").css("cursor","auto"===s?this.axis+"-resize":s),this._addClass("ui-resizable-resizing"),this._propagate("start",t),!0},_mouseDrag:function(t){var e,i,s=this.originalMousePosition,n=this.axis,o=t.pageX-s.left||0,r=t.pageY-s.top||0,a=this._change[n];return this._updatePrevProperties(),a&&(e=a.apply(this,[t,o,r]),this._updateVirtualBoundaries(t.shiftKey),(this._aspectRatio||t.shiftKey)&&(e=this._updateRatio(e,t)),e=this._respectSize(e,t),this._updateCache(e),this._propagate("resize",t),i=this._applyChanges(),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),T.isEmptyObject(i)||(this._updatePrevProperties(),this._trigger("resize",t,this.ui()),this._applyChanges())),!1},_mouseStop:function(t){this.resizing=!1;var e,i,s,n,o,r,a,l=this.options,h=this;return this._helper&&(s=(i=(e=this._proportionallyResizeElements).length&&/textarea/i.test(e[0].nodeName))&&this._hasScroll(e[0],"left")?0:h.sizeDiff.height,n=i?0:h.sizeDiff.width,o={width:h.helper.width()-n,height:h.helper.height()-s},r=parseFloat(h.element.css("left"))+(h.position.left-h.originalPosition.left)||null,a=parseFloat(h.element.css("top"))+(h.position.top-h.originalPosition.top)||null,l.animate||this.element.css(T.extend(o,{top:a,left:r})),h.helper.height(h.size.height),h.helper.width(h.size.width),this._helper&&!l.animate&&this._proportionallyResize()),T("body").css("cursor","auto"),this._removeClass("ui-resizable-resizing"),this._propagate("stop",t),this._helper&&this.helper.remove(),!1},_updatePrevProperties:function(){this.prevPosition={top:this.position.top,left:this.position.left},this.prevSize={width:this.size.width,height:this.size.height}},_applyChanges:function(){var t={};return this.position.top!==this.prevPosition.top&&(t.top=this.position.top+"px"),this.position.left!==this.prevPosition.left&&(t.left=this.position.left+"px"),this.size.width!==this.prevSize.width&&(t.width=this.size.width+"px"),this.size.height!==this.prevSize.height&&(t.height=this.size.height+"px"),this.helper.css(t),t},_updateVirtualBoundaries:function(t){var e,i,s,n,o,r=this.options;o={minWidth:this._isNumber(r.minWidth)?r.minWidth:0,maxWidth:this._isNumber(r.maxWidth)?r.maxWidth:1/0,minHeight:this._isNumber(r.minHeight)?r.minHeight:0,maxHeight:this._isNumber(r.maxHeight)?r.maxHeight:1/0},(this._aspectRatio||t)&&(e=o.minHeight*this.aspectRatio,s=o.minWidth/this.aspectRatio,i=o.maxHeight*this.aspectRatio,n=o.maxWidth/this.aspectRatio,e>o.minWidth&&(o.minWidth=e),s>o.minHeight&&(o.minHeight=s),i<o.maxWidth&&(o.maxWidth=i),n<o.maxHeight&&(o.maxHeight=n)),this._vBoundaries=o},_updateCache:function(t){this.offset=this.helper.offset(),this._isNumber(t.left)&&(this.position.left=t.left),this._isNumber(t.top)&&(this.position.top=t.top),this._isNumber(t.height)&&(this.size.height=t.height),this._isNumber(t.width)&&(this.size.width=t.width)},_updateRatio:function(t){var e=this.position,i=this.size,s=this.axis;return this._isNumber(t.height)?t.width=t.height*this.aspectRatio:this._isNumber(t.width)&&(t.height=t.width/this.aspectRatio),"sw"===s&&(t.left=e.left+(i.width-t.width),t.top=null),"nw"===s&&(t.top=e.top+(i.height-t.height),t.left=e.left+(i.width-t.width)),t},_respectSize:function(t){var e=this._vBoundaries,i=this.axis,s=this._isNumber(t.width)&&e.maxWidth&&e.maxWidth<t.width,n=this._isNumber(t.height)&&e.maxHeight&&e.maxHeight<t.height,o=this._isNumber(t.width)&&e.minWidth&&e.minWidth>t.width,r=this._isNumber(t.height)&&e.minHeight&&e.minHeight>t.height,a=this.originalPosition.left+this.originalSize.width,l=this.originalPosition.top+this.originalSize.height,h=/sw|nw|w/.test(i),u=/nw|ne|n/.test(i);return o&&(t.width=e.minWidth),r&&(t.height=e.minHeight),s&&(t.width=e.maxWidth),n&&(t.height=e.maxHeight),o&&h&&(t.left=a-e.minWidth),s&&h&&(t.left=a-e.maxWidth),r&&u&&(t.top=l-e.minHeight),n&&u&&(t.top=l-e.maxHeight),t.width||t.height||t.left||!t.top?t.width||t.height||t.top||!t.left||(t.left=null):t.top=null,t},_getPaddingPlusBorderDimensions:function(t){for(var e=0,i=[],s=[t.css("borderTopWidth"),t.css("borderRightWidth"),t.css("borderBottomWidth"),t.css("borderLeftWidth")],n=[t.css("paddingTop"),t.css("paddingRight"),t.css("paddingBottom"),t.css("paddingLeft")];e<4;e++)i[e]=parseFloat(s[e])||0,i[e]+=parseFloat(n[e])||0;return{height:i[0]+i[2],width:i[1]+i[3]}},_proportionallyResize:function(){if(this._proportionallyResizeElements.length)for(var t,e=0,i=this.helper||this.element;e<this._proportionallyResizeElements.length;e++)t=this._proportionallyResizeElements[e],this.outerDimensions||(this.outerDimensions=this._getPaddingPlusBorderDimensions(t)),t.css({height:i.height()-this.outerDimensions.height||0,width:i.width()-this.outerDimensions.width||0})},_renderProxy:function(){var t=this.element,e=this.options;this.elementOffset=t.offset(),this._helper?(this.helper=this.helper||T("<div style='overflow:hidden;'></div>"),this._addClass(this.helper,this._helper),this.helper.css({width:this.element.outerWidth(),height:this.element.outerHeight(),position:"absolute",left:this.elementOffset.left+"px",top:this.elementOffset.top+"px",zIndex:++e.zIndex}),this.helper.appendTo("body").disableSelection()):this.helper=this.element},_change:{e:function(t,e){return{width:this.originalSize.width+e}},w:function(t,e){var i=this.originalSize;return{left:this.originalPosition.left+e,width:i.width-e}},n:function(t,e,i){var s=this.originalSize;return{top:this.originalPosition.top+i,height:s.height-i}},s:function(t,e,i){return{height:this.originalSize.height+i}},se:function(t,e,i){return T.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[t,e,i]))},sw:function(t,e,i){return T.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[t,e,i]))},ne:function(t,e,i){return T.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[t,e,i]))},nw:function(t,e,i){return T.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[t,e,i]))}},_propagate:function(t,e){T.ui.plugin.call(this,t,[e,this.ui()]),"resize"!==t&&this._trigger(t,e,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),T.ui.plugin.add("resizable","animate",{stop:function(e){var i=T(this).resizable("instance"),t=i.options,s=i._proportionallyResizeElements,n=s.length&&/textarea/i.test(s[0].nodeName),o=n&&i._hasScroll(s[0],"left")?0:i.sizeDiff.height,r=n?0:i.sizeDiff.width,a={width:i.size.width-r,height:i.size.height-o},l=parseFloat(i.element.css("left"))+(i.position.left-i.originalPosition.left)||null,h=parseFloat(i.element.css("top"))+(i.position.top-i.originalPosition.top)||null;i.element.animate(T.extend(a,h&&l?{top:h,left:l}:{}),{duration:t.animateDuration,easing:t.animateEasing,step:function(){var t={width:parseFloat(i.element.css("width")),height:parseFloat(i.element.css("height")),top:parseFloat(i.element.css("top")),left:parseFloat(i.element.css("left"))};s&&s.length&&T(s[0]).css({width:t.width,height:t.height}),i._updateCache(t),i._propagate("resize",e)}})}}),T.ui.plugin.add("resizable","containment",{start:function(){var i,s,t,e,n,o,r,a=T(this).resizable("instance"),l=a.options,h=a.element,u=l.containment,c=u instanceof T?u.get(0):/parent/.test(u)?h.parent().get(0):u;c&&(a.containerElement=T(c),/document/.test(u)||u===document?(a.containerOffset={left:0,top:0},a.containerPosition={left:0,top:0},a.parentData={element:T(document),left:0,top:0,width:T(document).width(),height:T(document).height()||document.body.parentNode.scrollHeight}):(i=T(c),s=[],T(["Top","Right","Left","Bottom"]).each(function(t,e){s[t]=a._num(i.css("padding"+e))}),a.containerOffset=i.offset(),a.containerPosition=i.position(),a.containerSize={height:i.innerHeight()-s[3],width:i.innerWidth()-s[1]},t=a.containerOffset,e=a.containerSize.height,n=a.containerSize.width,o=a._hasScroll(c,"left")?c.scrollWidth:n,r=a._hasScroll(c)?c.scrollHeight:e,a.parentData={element:c,left:t.left,top:t.top,width:o,height:r}))},resize:function(t){var e,i,s,n,o=T(this).resizable("instance"),r=o.options,a=o.containerOffset,l=o.position,h=o._aspectRatio||t.shiftKey,u={top:0,left:0},c=o.containerElement,d=!0;c[0]!==document&&/static/.test(c.css("position"))&&(u=a),l.left<(o._helper?a.left:0)&&(o.size.width=o.size.width+(o._helper?o.position.left-a.left:o.position.left-u.left),h&&(o.size.height=o.size.width/o.aspectRatio,d=!1),o.position.left=r.helper?a.left:0),l.top<(o._helper?a.top:0)&&(o.size.height=o.size.height+(o._helper?o.position.top-a.top:o.position.top),h&&(o.size.width=o.size.height*o.aspectRatio,d=!1),o.position.top=o._helper?a.top:0),s=o.containerElement.get(0)===o.element.parent().get(0),n=/relative|absolute/.test(o.containerElement.css("position")),o.offset.top=s&&n?(o.offset.left=o.parentData.left+o.position.left,o.parentData.top+o.position.top):(o.offset.left=o.element.offset().left,o.element.offset().top),e=Math.abs(o.sizeDiff.width+(o._helper?o.offset.left-u.left:o.offset.left-a.left)),i=Math.abs(o.sizeDiff.height+(o._helper?o.offset.top-u.top:o.offset.top-a.top)),e+o.size.width>=o.parentData.width&&(o.size.width=o.parentData.width-e,h&&(o.size.height=o.size.width/o.aspectRatio,d=!1)),i+o.size.height>=o.parentData.height&&(o.size.height=o.parentData.height-i,h&&(o.size.width=o.size.height*o.aspectRatio,d=!1)),d||(o.position.left=o.prevPosition.left,o.position.top=o.prevPosition.top,o.size.width=o.prevSize.width,o.size.height=o.prevSize.height)},stop:function(){var t=T(this).resizable("instance"),e=t.options,i=t.containerOffset,s=t.containerPosition,n=t.containerElement,o=T(t.helper),r=o.offset(),a=o.outerWidth()-t.sizeDiff.width,l=o.outerHeight()-t.sizeDiff.height;t._helper&&!e.animate&&/relative/.test(n.css("position"))&&T(this).css({left:r.left-s.left-i.left,width:a,height:l}),t._helper&&!e.animate&&/static/.test(n.css("position"))&&T(this).css({left:r.left-s.left-i.left,width:a,height:l})}}),T.ui.plugin.add("resizable","alsoResize",{start:function(){var t=T(this).resizable("instance").options;T(t.alsoResize).each(function(){var t=T(this);t.data("ui-resizable-alsoresize",{width:parseFloat(t.width()),height:parseFloat(t.height()),left:parseFloat(t.css("left")),top:parseFloat(t.css("top"))})})},resize:function(t,i){var e=T(this).resizable("instance"),s=e.options,n=e.originalSize,o=e.originalPosition,r={height:e.size.height-n.height||0,width:e.size.width-n.width||0,top:e.position.top-o.top||0,left:e.position.left-o.left||0};T(s.alsoResize).each(function(){var t=T(this),s=T(this).data("ui-resizable-alsoresize"),n={},e=t.parents(i.originalElement[0]).length?["width","height"]:["width","height","top","left"];T.each(e,function(t,e){var i=(s[e]||0)+(r[e]||0);i&&0<=i&&(n[e]=i||null)}),t.css(n)})},stop:function(){T(this).removeData("ui-resizable-alsoresize")}}),T.ui.plugin.add("resizable","ghost",{start:function(){var t=T(this).resizable("instance"),e=t.size;t.ghost=t.originalElement.clone(),t.ghost.css({opacity:.25,display:"block",position:"relative",height:e.height,width:e.width,margin:0,left:0,top:0}),t._addClass(t.ghost,"ui-resizable-ghost"),!1!==T.uiBackCompat&&"string"==typeof t.options.ghost&&t.ghost.addClass(this.options.ghost),t.ghost.appendTo(t.helper)},resize:function(){var t=T(this).resizable("instance");t.ghost&&t.ghost.css({position:"relative",height:t.size.height,width:t.size.width})},stop:function(){var t=T(this).resizable("instance");t.ghost&&t.helper&&t.helper.get(0).removeChild(t.ghost.get(0))}}),T.ui.plugin.add("resizable","grid",{resize:function(){var t,e=T(this).resizable("instance"),i=e.options,s=e.size,n=e.originalSize,o=e.originalPosition,r=e.axis,a="number"==typeof i.grid?[i.grid,i.grid]:i.grid,l=a[0]||1,h=a[1]||1,u=Math.round((s.width-n.width)/l)*l,c=Math.round((s.height-n.height)/h)*h,d=n.width+u,p=n.height+c,f=i.maxWidth&&i.maxWidth<d,g=i.maxHeight&&i.maxHeight<p,m=i.minWidth&&i.minWidth>d,v=i.minHeight&&i.minHeight>p;i.grid=a,m&&(d+=l),v&&(p+=h),f&&(d-=l),g&&(p-=h),/^(se|s|e)$/.test(r)?(e.size.width=d,e.size.height=p):/^(ne)$/.test(r)?(e.size.width=d,e.size.height=p,e.position.top=o.top-c):/^(sw)$/.test(r)?(e.size.width=d,e.size.height=p,e.position.left=o.left-u):((p-h<=0||d-l<=0)&&(t=e._getPaddingPlusBorderDimensions(this)),e.position.top=0<p-h?(e.size.height=p,o.top-c):(p=h-t.height,e.size.height=p,o.top+n.height-p),e.position.left=0<d-l?(e.size.width=d,o.left-u):(d=l-t.width,e.size.width=d,o.left+n.width-d))}});T.ui.resizable;T.widget("ui.dialog",{version:"1.12.1",options:{appendTo:"body",autoOpen:!0,buttons:[],classes:{"ui-dialog":"ui-corner-all","ui-dialog-titlebar":"ui-corner-all"},closeOnEscape:!0,closeText:"Close",draggable:!0,hide:null,height:"auto",maxHeight:null,maxWidth:null,minHeight:150,minWidth:150,modal:!1,position:{my:"center",at:"center",of:window,collision:"fit",using:function(t){var e=T(this).css(t).offset().top;e<0&&T(this).css("top",t.top-e)}},resizable:!0,show:null,title:null,width:300,beforeClose:null,close:null,drag:null,dragStart:null,dragStop:null,focus:null,open:null,resize:null,resizeStart:null,resizeStop:null},sizeRelatedOptions:{buttons:!0,height:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,width:!0},resizableRelatedOptions:{maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0},_create:function(){this.originalCss={display:this.element[0].style.display,width:this.element[0].style.width,minHeight:this.element[0].style.minHeight,maxHeight:this.element[0].style.maxHeight,height:this.element[0].style.height},this.originalPosition={parent:this.element.parent(),index:this.element.parent().children().index(this.element)},this.originalTitle=this.element.attr("title"),null==this.options.title&&null!=this.originalTitle&&(this.options.title=this.originalTitle),this.options.disabled&&(this.options.disabled=!1),this._createWrapper(),this.element.show().removeAttr("title").appendTo(this.uiDialog),this._addClass("ui-dialog-content","ui-widget-content"),this._createTitlebar(),this._createButtonPane(),this.options.draggable&&T.fn.draggable&&this._makeDraggable(),this.options.resizable&&T.fn.resizable&&this._makeResizable(),this._isOpen=!1,this._trackFocus()},_init:function(){this.options.autoOpen&&this.open()},_appendTo:function(){var t=this.options.appendTo;return t&&(t.jquery||t.nodeType)?T(t):this.document.find(t||"body").eq(0)},_destroy:function(){var t,e=this.originalPosition;this._untrackInstance(),this._destroyOverlay(),this.element.removeUniqueId().css(this.originalCss).detach(),this.uiDialog.remove(),this.originalTitle&&this.element.attr("title",this.originalTitle),(t=e.parent.children().eq(e.index)).length&&t[0]!==this.element[0]?t.before(this.element):e.parent.append(this.element)},widget:function(){return this.uiDialog},disable:T.noop,enable:T.noop,close:function(t){var e=this;this._isOpen&&!1!==this._trigger("beforeClose",t)&&(this._isOpen=!1,this._focusedElement=null,this._destroyOverlay(),this._untrackInstance(),this.opener.filter(":focusable").trigger("focus").length||T.ui.safeBlur(T.ui.safeActiveElement(this.document[0])),this._hide(this.uiDialog,this.options.hide,function(){e._trigger("close",t)}))},isOpen:function(){return this._isOpen},moveToTop:function(){this._moveToTop()},_moveToTop:function(t,e){var i=!1,s=this.uiDialog.siblings(".ui-front:visible").map(function(){return+T(this).css("z-index")}).get(),n=Math.max.apply(null,s);return n>=+this.uiDialog.css("z-index")&&(this.uiDialog.css("z-index",n+1),i=!0),i&&!e&&this._trigger("focus",t),i},open:function(){var t=this;this._isOpen?this._moveToTop()&&this._focusTabbable():(this._isOpen=!0,this.opener=T(T.ui.safeActiveElement(this.document[0])),this._size(),this._position(),this._createOverlay(),this._moveToTop(null,!0),this.overlay&&this.overlay.css("z-index",this.uiDialog.css("z-index")-1),this._show(this.uiDialog,this.options.show,function(){t._focusTabbable(),t._trigger("focus")}),this._makeFocusTarget(),this._trigger("open"))},_focusTabbable:function(){var t=this._focusedElement;t||(t=this.element.find("[autofocus]")),t.length||(t=this.element.find(":tabbable")),t.length||(t=this.uiDialogButtonPane.find(":tabbable")),t.length||(t=this.uiDialogTitlebarClose.filter(":tabbable")),t.length||(t=this.uiDialog),t.eq(0).trigger("focus")},_keepFocus:function(t){function e(){var t=T.ui.safeActiveElement(this.document[0]);this.uiDialog[0]===t||T.contains(this.uiDialog[0],t)||this._focusTabbable()}t.preventDefault(),e.call(this),this._delay(e)},_createWrapper:function(){this.uiDialog=T("<div>").hide().attr({tabIndex:-1,role:"dialog"}).appendTo(this._appendTo()),this._addClass(this.uiDialog,"ui-dialog","ui-widget ui-widget-content ui-front"),this._on(this.uiDialog,{keydown:function(t){if(this.options.closeOnEscape&&!t.isDefaultPrevented()&&t.keyCode&&t.keyCode===T.ui.keyCode.ESCAPE)return t.preventDefault(),void this.close(t);if(t.keyCode===T.ui.keyCode.TAB&&!t.isDefaultPrevented()){var e=this.uiDialog.find(":tabbable"),i=e.filter(":first"),s=e.filter(":last");t.target!==s[0]&&t.target!==this.uiDialog[0]||t.shiftKey?t.target!==i[0]&&t.target!==this.uiDialog[0]||!t.shiftKey||(this._delay(function(){s.trigger("focus")}),t.preventDefault()):(this._delay(function(){i.trigger("focus")}),t.preventDefault())}},mousedown:function(t){this._moveToTop(t)&&this._focusTabbable()}}),this.element.find("[aria-describedby]").length||this.uiDialog.attr({"aria-describedby":this.element.uniqueId().attr("id")})},_createTitlebar:function(){var t;this.uiDialogTitlebar=T("<div>"),this._addClass(this.uiDialogTitlebar,"ui-dialog-titlebar","ui-widget-header ui-helper-clearfix"),this._on(this.uiDialogTitlebar,{mousedown:function(t){T(t.target).closest(".ui-dialog-titlebar-close")||this.uiDialog.trigger("focus")}}),this.uiDialogTitlebarClose=T("<button type='button'></button>").button({label:T("<a>").text(this.options.closeText).html(),icon:"ui-icon-closethick",showLabel:!1}).appendTo(this.uiDialogTitlebar),this._addClass(this.uiDialogTitlebarClose,"ui-dialog-titlebar-close"),this._on(this.uiDialogTitlebarClose,{click:function(t){t.preventDefault(),this.close(t)}}),t=T("<span>").uniqueId().prependTo(this.uiDialogTitlebar),this._addClass(t,"ui-dialog-title"),this._title(t),this.uiDialogTitlebar.prependTo(this.uiDialog),this.uiDialog.attr({"aria-labelledby":t.attr("id")})},_title:function(t){this.options.title?t.text(this.options.title):t.html("&#160;")},_createButtonPane:function(){this.uiDialogButtonPane=T("<div>"),this._addClass(this.uiDialogButtonPane,"ui-dialog-buttonpane","ui-widget-content ui-helper-clearfix"),this.uiButtonSet=T("<div>").appendTo(this.uiDialogButtonPane),this._addClass(this.uiButtonSet,"ui-dialog-buttonset"),this._createButtons()},_createButtons:function(){var n=this,t=this.options.buttons;this.uiDialogButtonPane.remove(),this.uiButtonSet.empty(),T.isEmptyObject(t)||T.isArray(t)&&!t.length?this._removeClass(this.uiDialog,"ui-dialog-buttons"):(T.each(t,function(t,e){var i,s;e=T.isFunction(e)?{click:e,text:t}:e,e=T.extend({type:"button"},e),i=e.click,s={icon:e.icon,iconPosition:e.iconPosition,showLabel:e.showLabel,icons:e.icons,text:e.text},delete e.click,delete e.icon,delete e.iconPosition,delete e.showLabel,delete e.icons,"boolean"==typeof e.text&&delete e.text,T("<button></button>",e).button(s).appendTo(n.uiButtonSet).on("click",function(){i.apply(n.element[0],arguments)})}),this._addClass(this.uiDialog,"ui-dialog-buttons"),this.uiDialogButtonPane.appendTo(this.uiDialog))},_makeDraggable:function(){var n=this,o=this.options;function r(t){return{position:t.position,offset:t.offset}}this.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close",handle:".ui-dialog-titlebar",containment:"document",start:function(t,e){n._addClass(T(this),"ui-dialog-dragging"),n._blockFrames(),n._trigger("dragStart",t,r(e))},drag:function(t,e){n._trigger("drag",t,r(e))},stop:function(t,e){var i=e.offset.left-n.document.scrollLeft(),s=e.offset.top-n.document.scrollTop();o.position={my:"left top",at:"left"+(0<=i?"+":"")+i+" top"+(0<=s?"+":"")+s,of:n.window},n._removeClass(T(this),"ui-dialog-dragging"),n._unblockFrames(),n._trigger("dragStop",t,r(e))}})},_makeResizable:function(){var o=this,r=this.options,t=r.resizable,e=this.uiDialog.css("position"),i="string"==typeof t?t:"n,e,s,w,se,sw,ne,nw";function a(t){return{originalPosition:t.originalPosition,originalSize:t.originalSize,position:t.position,size:t.size}}this.uiDialog.resizable({cancel:".ui-dialog-content",containment:"document",alsoResize:this.element,maxWidth:r.maxWidth,maxHeight:r.maxHeight,minWidth:r.minWidth,minHeight:this._minHeight(),handles:i,start:function(t,e){o._addClass(T(this),"ui-dialog-resizing"),o._blockFrames(),o._trigger("resizeStart",t,a(e))},resize:function(t,e){o._trigger("resize",t,a(e))},stop:function(t,e){var i=o.uiDialog.offset(),s=i.left-o.document.scrollLeft(),n=i.top-o.document.scrollTop();r.height=o.uiDialog.height(),r.width=o.uiDialog.width(),r.position={my:"left top",at:"left"+(0<=s?"+":"")+s+" top"+(0<=n?"+":"")+n,of:o.window},o._removeClass(T(this),"ui-dialog-resizing"),o._unblockFrames(),o._trigger("resizeStop",t,a(e))}}).css("position",e)},_trackFocus:function(){this._on(this.widget(),{focusin:function(t){this._makeFocusTarget(),this._focusedElement=T(t.target)}})},_makeFocusTarget:function(){this._untrackInstance(),this._trackingInstances().unshift(this)},_untrackInstance:function(){var t=this._trackingInstances(),e=T.inArray(this,t);-1!==e&&t.splice(e,1)},_trackingInstances:function(){var t=this.document.data("ui-dialog-instances");return t||(t=[],this.document.data("ui-dialog-instances",t)),t},_minHeight:function(){var t=this.options;return"auto"===t.height?t.minHeight:Math.min(t.minHeight,t.height)},_position:function(){var t=this.uiDialog.is(":visible");t||this.uiDialog.show(),this.uiDialog.position(this.options.position),t||this.uiDialog.hide()},_setOptions:function(t){var i=this,s=!1,n={};T.each(t,function(t,e){i._setOption(t,e),t in i.sizeRelatedOptions&&(s=!0),t in i.resizableRelatedOptions&&(n[t]=e)}),s&&(this._size(),this._position()),this.uiDialog.is(":data(ui-resizable)")&&this.uiDialog.resizable("option",n)},_setOption:function(t,e){var i,s,n=this.uiDialog;"disabled"!==t&&(this._super(t,e),"appendTo"===t&&this.uiDialog.appendTo(this._appendTo()),"buttons"===t&&this._createButtons(),"closeText"===t&&this.uiDialogTitlebarClose.button({label:T("<a>").text(""+this.options.closeText).html()}),"draggable"===t&&((i=n.is(":data(ui-draggable)"))&&!e&&n.draggable("destroy"),!i&&e&&this._makeDraggable()),"position"===t&&this._position(),"resizable"===t&&((s=n.is(":data(ui-resizable)"))&&!e&&n.resizable("destroy"),s&&"string"==typeof e&&n.resizable("option","handles",e),s||!1===e||this._makeResizable()),"title"===t&&this._title(this.uiDialogTitlebar.find(".ui-dialog-title")))},_size:function(){var t,e,i,s=this.options;this.element.show().css({width:"auto",minHeight:0,maxHeight:"none",height:0}),s.minWidth>s.width&&(s.width=s.minWidth),t=this.uiDialog.css({height:"auto",width:s.width}).outerHeight(),e=Math.max(0,s.minHeight-t),i="number"==typeof s.maxHeight?Math.max(0,s.maxHeight-t):"none","auto"===s.height?this.element.css({minHeight:e,maxHeight:i,height:"auto"}):this.element.height(Math.max(0,s.height-t)),this.uiDialog.is(":data(ui-resizable)")&&this.uiDialog.resizable("option","minHeight",this._minHeight())},_blockFrames:function(){this.iframeBlocks=this.document.find("iframe").map(function(){var t=T(this);return T("<div>").css({position:"absolute",width:t.outerWidth(),height:t.outerHeight()}).appendTo(t.parent()).offset(t.offset())[0]})},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_allowInteraction:function(t){return!!T(t.target).closest(".ui-dialog").length||!!T(t.target).closest(".ui-datepicker").length},_createOverlay:function(){if(this.options.modal){var e=!0;this._delay(function(){e=!1}),this.document.data("ui-dialog-overlays")||this._on(this.document,{focusin:function(t){e||this._allowInteraction(t)||(t.preventDefault(),this._trackingInstances()[0]._focusTabbable())}}),this.overlay=T("<div>").appendTo(this._appendTo()),this._addClass(this.overlay,null,"ui-widget-overlay ui-front"),this._on(this.overlay,{mousedown:"_keepFocus"}),this.document.data("ui-dialog-overlays",(this.document.data("ui-dialog-overlays")||0)+1)}},_destroyOverlay:function(){if(this.options.modal&&this.overlay){var t=this.document.data("ui-dialog-overlays")-1;t?this.document.data("ui-dialog-overlays",t):(this._off(this.document,"focusin"),this.document.removeData("ui-dialog-overlays")),this.overlay.remove(),this.overlay=null}}}),!1!==T.uiBackCompat&&T.widget("ui.dialog",T.ui.dialog,{options:{dialogClass:""},_createWrapper:function(){this._super(),this.uiDialog.addClass(this.options.dialogClass)},_setOption:function(t,e){"dialogClass"===t&&this.uiDialog.removeClass(this.options.dialogClass).addClass(e),this._superApply(arguments)}});T.ui.dialog;T.widget("ui.droppable",{version:"1.12.1",widgetEventPrefix:"drop",options:{accept:"*",addClasses:!0,greedy:!1,scope:"default",tolerance:"intersect",activate:null,deactivate:null,drop:null,out:null,over:null},_create:function(){var t,e=this.options,i=e.accept;this.isover=!1,this.isout=!0,this.accept=T.isFunction(i)?i:function(t){return t.is(i)},this.proportions=function(){if(!arguments.length)return t||(t={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight});t=arguments[0]},this._addToManager(e.scope),e.addClasses&&this._addClass("ui-droppable")},_addToManager:function(t){T.ui.ddmanager.droppables[t]=T.ui.ddmanager.droppables[t]||[],T.ui.ddmanager.droppables[t].push(this)},_splice:function(t){for(var e=0;e<t.length;e++)t[e]===this&&t.splice(e,1)},_destroy:function(){var t=T.ui.ddmanager.droppables[this.options.scope];this._splice(t)},_setOption:function(t,e){if("accept"===t)this.accept=T.isFunction(e)?e:function(t){return t.is(e)};else if("scope"===t){var i=T.ui.ddmanager.droppables[this.options.scope];this._splice(i),this._addToManager(e)}this._super(t,e)},_activate:function(t){var e=T.ui.ddmanager.current;this._addActiveClass(),e&&this._trigger("activate",t,this.ui(e))},_deactivate:function(t){var e=T.ui.ddmanager.current;this._removeActiveClass(),e&&this._trigger("deactivate",t,this.ui(e))},_over:function(t){var e=T.ui.ddmanager.current;e&&(e.currentItem||e.element)[0]!==this.element[0]&&this.accept.call(this.element[0],e.currentItem||e.element)&&(this._addHoverClass(),this._trigger("over",t,this.ui(e)))},_out:function(t){var e=T.ui.ddmanager.current;e&&(e.currentItem||e.element)[0]!==this.element[0]&&this.accept.call(this.element[0],e.currentItem||e.element)&&(this._removeHoverClass(),this._trigger("out",t,this.ui(e)))},_drop:function(e,t){var i=t||T.ui.ddmanager.current,s=!1;return!(!i||(i.currentItem||i.element)[0]===this.element[0])&&(this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function(){var t=T(this).droppable("instance");if(t.options.greedy&&!t.options.disabled&&t.options.scope===i.options.scope&&t.accept.call(t.element[0],i.currentItem||i.element)&&b(i,T.extend(t,{offset:t.element.offset()}),t.options.tolerance,e))return!(s=!0)}),!s&&(!!this.accept.call(this.element[0],i.currentItem||i.element)&&(this._removeActiveClass(),this._removeHoverClass(),this._trigger("drop",e,this.ui(i)),this.element)))},ui:function(t){return{draggable:t.currentItem||t.element,helper:t.helper,position:t.position,offset:t.positionAbs}},_addHoverClass:function(){this._addClass("ui-droppable-hover")},_removeHoverClass:function(){this._removeClass("ui-droppable-hover")},_addActiveClass:function(){this._addClass("ui-droppable-active")},_removeActiveClass:function(){this._removeClass("ui-droppable-active")}});var b=T.ui.intersect=function(){function d(t,e,i){return e<=t&&t<e+i}return function(t,e,i,s){if(!e.offset)return!1;var n=(t.positionAbs||t.position.absolute).left+t.margins.left,o=(t.positionAbs||t.position.absolute).top+t.margins.top,r=n+t.helperProportions.width,a=o+t.helperProportions.height,l=e.offset.left,h=e.offset.top,u=l+e.proportions().width,c=h+e.proportions().height;switch(i){case"fit":return l<=n&&r<=u&&h<=o&&a<=c;case"intersect":return l<n+t.helperProportions.width/2&&r-t.helperProportions.width/2<u&&h<o+t.helperProportions.height/2&&a-t.helperProportions.height/2<c;case"pointer":return d(s.pageY,h,e.proportions().height)&&d(s.pageX,l,e.proportions().width);case"touch":return(h<=o&&o<=c||h<=a&&a<=c||o<h&&c<a)&&(l<=n&&n<=u||l<=r&&r<=u||n<l&&u<r);default:return!1}}}();!(T.ui.ddmanager={current:null,droppables:{default:[]},prepareOffsets:function(t,e){var i,s,n=T.ui.ddmanager.droppables[t.options.scope]||[],o=e?e.type:null,r=(t.currentItem||t.element).find(":data(ui-droppable)").addBack();t:for(i=0;i<n.length;i++)if(!(n[i].options.disabled||t&&!n[i].accept.call(n[i].element[0],t.currentItem||t.element))){for(s=0;s<r.length;s++)if(r[s]===n[i].element[0]){n[i].proportions().height=0;continue t}n[i].visible="none"!==n[i].element.css("display"),n[i].visible&&("mousedown"===o&&n[i]._activate.call(n[i],e),n[i].offset=n[i].element.offset(),n[i].proportions({width:n[i].element[0].offsetWidth,height:n[i].element[0].offsetHeight}))}},drop:function(t,e){var i=!1;return T.each((T.ui.ddmanager.droppables[t.options.scope]||[]).slice(),function(){this.options&&(!this.options.disabled&&this.visible&&b(t,this,this.options.tolerance,e)&&(i=this._drop.call(this,e)||i),!this.options.disabled&&this.visible&&this.accept.call(this.element[0],t.currentItem||t.element)&&(this.isout=!0,this.isover=!1,this._deactivate.call(this,e)))}),i},dragStart:function(t,e){t.element.parentsUntil("body").on("scroll.droppable",function(){t.options.refreshPositions||T.ui.ddmanager.prepareOffsets(t,e)})},drag:function(o,r){o.options.refreshPositions&&T.ui.ddmanager.prepareOffsets(o,r),T.each(T.ui.ddmanager.droppables[o.options.scope]||[],function(){if(!this.options.disabled&&!this.greedyChild&&this.visible){var t,e,i,s=b(o,this,this.options.tolerance,r),n=!s&&this.isover?"isout":s&&!this.isover?"isover":null;n&&(this.options.greedy&&(e=this.options.scope,(i=this.element.parents(":data(ui-droppable)").filter(function(){return T(this).droppable("instance").options.scope===e})).length&&((t=T(i[0]).droppable("instance")).greedyChild="isover"===n)),t&&"isover"===n&&(t.isover=!1,t.isout=!0,t._out.call(t,r)),this[n]=!0,this["isout"===n?"isover":"isout"]=!1,this["isover"===n?"_over":"_out"].call(this,r),t&&"isout"===n&&(t.isout=!1,t.isover=!0,t._over.call(t,r)))}})},dragStop:function(t,e){t.element.parentsUntil("body").off("scroll.droppable"),t.options.refreshPositions||T.ui.ddmanager.prepareOffsets(t,e)}})!==T.uiBackCompat&&T.widget("ui.droppable",T.ui.droppable,{options:{hoverClass:!1,activeClass:!1},_addActiveClass:function(){this._super(),this.options.activeClass&&this.element.addClass(this.options.activeClass)},_removeActiveClass:function(){this._super(),this.options.activeClass&&this.element.removeClass(this.options.activeClass)},_addHoverClass:function(){this._super(),this.options.hoverClass&&this.element.addClass(this.options.hoverClass)},_removeHoverClass:function(){this._super(),this.options.hoverClass&&this.element.removeClass(this.options.hoverClass)}});T.ui.droppable,T.widget("ui.progressbar",{version:"1.12.1",options:{classes:{"ui-progressbar":"ui-corner-all","ui-progressbar-value":"ui-corner-left","ui-progressbar-complete":"ui-corner-right"},max:100,value:0,change:null,complete:null},min:0,_create:function(){this.oldValue=this.options.value=this._constrainedValue(),this.element.attr({role:"progressbar","aria-valuemin":this.min}),this._addClass("ui-progressbar","ui-widget ui-widget-content"),this.valueDiv=T("<div>").appendTo(this.element),this._addClass(this.valueDiv,"ui-progressbar-value","ui-widget-header"),this._refreshValue()},_destroy:function(){this.element.removeAttr("role aria-valuemin aria-valuemax aria-valuenow"),this.valueDiv.remove()},value:function(t){if(void 0===t)return this.options.value;this.options.value=this._constrainedValue(t),this._refreshValue()},_constrainedValue:function(t){return void 0===t&&(t=this.options.value),this.indeterminate=!1===t,"number"!=typeof t&&(t=0),!this.indeterminate&&Math.min(this.options.max,Math.max(this.min,t))},_setOptions:function(t){var e=t.value;delete t.value,this._super(t),this.options.value=this._constrainedValue(e),this._refreshValue()},_setOption:function(t,e){"max"===t&&(e=Math.max(this.min,e)),this._super(t,e)},_setOptionDisabled:function(t){this._super(t),this.element.attr("aria-disabled",t),this._toggleClass(null,"ui-state-disabled",!!t)},_percentage:function(){return this.indeterminate?100:100*(this.options.value-this.min)/(this.options.max-this.min)},_refreshValue:function(){var t=this.options.value,e=this._percentage();this.valueDiv.toggle(this.indeterminate||t>this.min).width(e.toFixed(0)+"%"),this._toggleClass(this.valueDiv,"ui-progressbar-complete",null,t===this.options.max)._toggleClass("ui-progressbar-indeterminate",null,this.indeterminate),this.indeterminate?(this.element.removeAttr("aria-valuenow"),this.overlayDiv||(this.overlayDiv=T("<div>").appendTo(this.valueDiv),this._addClass(this.overlayDiv,"ui-progressbar-overlay"))):(this.element.attr({"aria-valuemax":this.options.max,"aria-valuenow":t}),this.overlayDiv&&(this.overlayDiv.remove(),this.overlayDiv=null)),this.oldValue!==t&&(this.oldValue=t,this._trigger("change")),t===this.options.max&&this._trigger("complete")}}),T.widget("ui.selectable",T.ui.mouse,{version:"1.12.1",options:{appendTo:"body",autoRefresh:!0,distance:0,filter:"*",tolerance:"touch",selected:null,selecting:null,start:null,stop:null,unselected:null,unselecting:null},_create:function(){var s=this;this._addClass("ui-selectable"),this.dragged=!1,this.refresh=function(){s.elementPos=T(s.element[0]).offset(),s.selectees=T(s.options.filter,s.element[0]),s._addClass(s.selectees,"ui-selectee"),s.selectees.each(function(){var t=T(this),e=t.offset(),i={left:e.left-s.elementPos.left,top:e.top-s.elementPos.top};T.data(this,"selectable-item",{element:this,$element:t,left:i.left,top:i.top,right:i.left+t.outerWidth(),bottom:i.top+t.outerHeight(),startselected:!1,selected:t.hasClass("ui-selected"),selecting:t.hasClass("ui-selecting"),unselecting:t.hasClass("ui-unselecting")})})},this.refresh(),this._mouseInit(),this.helper=T("<div>"),this._addClass(this.helper,"ui-selectable-helper")},_destroy:function(){this.selectees.removeData("selectable-item"),this._mouseDestroy()},_mouseStart:function(i){var s=this,t=this.options;this.opos=[i.pageX,i.pageY],this.elementPos=T(this.element[0]).offset(),this.options.disabled||(this.selectees=T(t.filter,this.element[0]),this._trigger("start",i),T(t.appendTo).append(this.helper),this.helper.css({left:i.pageX,top:i.pageY,width:0,height:0}),t.autoRefresh&&this.refresh(),this.selectees.filter(".ui-selected").each(function(){var t=T.data(this,"selectable-item");t.startselected=!0,i.metaKey||i.ctrlKey||(s._removeClass(t.$element,"ui-selected"),t.selected=!1,s._addClass(t.$element,"ui-unselecting"),t.unselecting=!0,s._trigger("unselecting",i,{unselecting:t.element}))}),T(i.target).parents().addBack().each(function(){var t,e=T.data(this,"selectable-item");if(e)return t=!i.metaKey&&!i.ctrlKey||!e.$element.hasClass("ui-selected"),s._removeClass(e.$element,t?"ui-unselecting":"ui-selected")._addClass(e.$element,t?"ui-selecting":"ui-unselecting"),e.unselecting=!t,e.selecting=t,(e.selected=t)?s._trigger("selecting",i,{selecting:e.element}):s._trigger("unselecting",i,{unselecting:e.element}),!1}))},_mouseDrag:function(s){if(this.dragged=!0,!this.options.disabled){var t,n=this,o=this.options,r=this.opos[0],a=this.opos[1],l=s.pageX,h=s.pageY;return l<r&&(t=l,l=r,r=t),h<a&&(t=h,h=a,a=t),this.helper.css({left:r,top:a,width:l-r,height:h-a}),this.selectees.each(function(){var t=T.data(this,"selectable-item"),e=!1,i={};t&&t.element!==n.element[0]&&(i.left=t.left+n.elementPos.left,i.right=t.right+n.elementPos.left,i.top=t.top+n.elementPos.top,i.bottom=t.bottom+n.elementPos.top,"touch"===o.tolerance?e=!(i.left>l||i.right<r||i.top>h||i.bottom<a):"fit"===o.tolerance&&(e=i.left>r&&i.right<l&&i.top>a&&i.bottom<h),e?(t.selected&&(n._removeClass(t.$element,"ui-selected"),t.selected=!1),t.unselecting&&(n._removeClass(t.$element,"ui-unselecting"),t.unselecting=!1),t.selecting||(n._addClass(t.$element,"ui-selecting"),t.selecting=!0,n._trigger("selecting",s,{selecting:t.element}))):(t.selecting&&((s.metaKey||s.ctrlKey)&&t.startselected?(n._removeClass(t.$element,"ui-selecting"),t.selecting=!1,n._addClass(t.$element,"ui-selected"),t.selected=!0):(n._removeClass(t.$element,"ui-selecting"),t.selecting=!1,t.startselected&&(n._addClass(t.$element,"ui-unselecting"),t.unselecting=!0),n._trigger("unselecting",s,{unselecting:t.element}))),t.selected&&(s.metaKey||s.ctrlKey||t.startselected||(n._removeClass(t.$element,"ui-selected"),t.selected=!1,n._addClass(t.$element,"ui-unselecting"),t.unselecting=!0,n._trigger("unselecting",s,{unselecting:t.element})))))}),!1}},_mouseStop:function(e){var i=this;return this.dragged=!1,T(".ui-unselecting",this.element[0]).each(function(){var t=T.data(this,"selectable-item");i._removeClass(t.$element,"ui-unselecting"),t.unselecting=!1,t.startselected=!1,i._trigger("unselected",e,{unselected:t.element})}),T(".ui-selecting",this.element[0]).each(function(){var t=T.data(this,"selectable-item");i._removeClass(t.$element,"ui-selecting")._addClass(t.$element,"ui-selected"),t.selecting=!1,t.selected=!0,t.startselected=!0,i._trigger("selected",e,{selected:t.element})}),this._trigger("stop",e),this.helper.remove(),!1}}),T.widget("ui.selectmenu",[T.ui.formResetMixin,{version:"1.12.1",defaultElement:"<select>",options:{appendTo:null,classes:{"ui-selectmenu-button-open":"ui-corner-top","ui-selectmenu-button-closed":"ui-corner-all"},disabled:null,icons:{button:"ui-icon-triangle-1-s"},position:{my:"left top",at:"left bottom",collision:"none"},width:!1,change:null,close:null,focus:null,open:null,select:null},_create:function(){var t=this.element.uniqueId().attr("id");this.ids={element:t,button:t+"-button",menu:t+"-menu"},this._drawButton(),this._drawMenu(),this._bindFormResetHandler(),this._rendered=!1,this.menuItems=T()},_drawButton:function(){var t,e=this,i=this._parseOption(this.element.find("option:selected"),this.element[0].selectedIndex);this.labels=this.element.labels().attr("for",this.ids.button),this._on(this.labels,{click:function(t){this.button.focus(),t.preventDefault()}}),this.element.hide(),this.button=T("<span>",{tabindex:this.options.disabled?-1:0,id:this.ids.button,role:"combobox","aria-expanded":"false","aria-autocomplete":"list","aria-owns":this.ids.menu,"aria-haspopup":"true",title:this.element.attr("title")}).insertAfter(this.element),this._addClass(this.button,"ui-selectmenu-button ui-selectmenu-button-closed","ui-button ui-widget"),t=T("<span>").appendTo(this.button),this._addClass(t,"ui-selectmenu-icon","ui-icon "+this.options.icons.button),this.buttonItem=this._renderButtonItem(i).appendTo(this.button),!1!==this.options.width&&this._resizeButton(),this._on(this.button,this._buttonEvents),this.button.one("focusin",function(){e._rendered||e._refreshMenu()})},_drawMenu:function(){var s=this;this.menu=T("<ul>",{"aria-hidden":"true","aria-labelledby":this.ids.button,id:this.ids.menu}),this.menuWrap=T("<div>").append(this.menu),this._addClass(this.menuWrap,"ui-selectmenu-menu","ui-front"),this.menuWrap.appendTo(this._appendTo()),this.menuInstance=this.menu.menu({classes:{"ui-menu":"ui-corner-bottom"},role:"listbox",select:function(t,e){t.preventDefault(),s._setSelection(),s._select(e.item.data("ui-selectmenu-item"),t)},focus:function(t,e){var i=e.item.data("ui-selectmenu-item");null!=s.focusIndex&&i.index!==s.focusIndex&&(s._trigger("focus",t,{item:i}),s.isOpen||s._select(i,t)),s.focusIndex=i.index,s.button.attr("aria-activedescendant",s.menuItems.eq(i.index).attr("id"))}}).menu("instance"),this.menuInstance._off(this.menu,"mouseleave"),this.menuInstance._closeOnDocumentClick=function(){return!1},this.menuInstance._isDivider=function(){return!1}},refresh:function(){this._refreshMenu(),this.buttonItem.replaceWith(this.buttonItem=this._renderButtonItem(this._getSelectedItem().data("ui-selectmenu-item")||{})),null===this.options.width&&this._resizeButton()},_refreshMenu:function(){var t,e=this.element.find("option");this.menu.empty(),this._parseOptions(e),this._renderMenu(this.menu,this.items),this.menuInstance.refresh(),this.menuItems=this.menu.find("li").not(".ui-selectmenu-optgroup").find(".ui-menu-item-wrapper"),this._rendered=!0,e.length&&(t=this._getSelectedItem(),this.menuInstance.focus(null,t),this._setAria(t.data("ui-selectmenu-item")),this._setOption("disabled",this.element.prop("disabled")))},open:function(t){this.options.disabled||(this._rendered?(this._removeClass(this.menu.find(".ui-state-active"),null,"ui-state-active"),this.menuInstance.focus(null,this._getSelectedItem())):this._refreshMenu(),this.menuItems.length&&(this.isOpen=!0,this._toggleAttr(),this._resizeMenu(),this._position(),this._on(this.document,this._documentClick),this._trigger("open",t)))},_position:function(){this.menuWrap.position(T.extend({of:this.button},this.options.position))},close:function(t){this.isOpen&&(this.isOpen=!1,this._toggleAttr(),this.range=null,this._off(this.document),this._trigger("close",t))},widget:function(){return this.button},menuWidget:function(){return this.menu},_renderButtonItem:function(t){var e=T("<span>");return this._setText(e,t.label),this._addClass(e,"ui-selectmenu-text"),e},_renderMenu:function(s,t){var n=this,o="";T.each(t,function(t,e){var i;e.optgroup!==o&&(i=T("<li>",{text:e.optgroup}),n._addClass(i,"ui-selectmenu-optgroup","ui-menu-divider"+(e.element.parent("optgroup").prop("disabled")?" ui-state-disabled":"")),i.appendTo(s),o=e.optgroup),n._renderItemData(s,e)})},_renderItemData:function(t,e){return this._renderItem(t,e).data("ui-selectmenu-item",e)},_renderItem:function(t,e){var i=T("<li>"),s=T("<div>",{title:e.element.attr("title")});return e.disabled&&this._addClass(i,null,"ui-state-disabled"),this._setText(s,e.label),i.append(s).appendTo(t)},_setText:function(t,e){e?t.text(e):t.html("&#160;")},_move:function(t,e){var i,s,n=".ui-menu-item";this.isOpen?i=this.menuItems.eq(this.focusIndex).parent("li"):(i=this.menuItems.eq(this.element[0].selectedIndex).parent("li"),n+=":not(.ui-state-disabled)"),(s="first"===t||"last"===t?i["first"===t?"prevAll":"nextAll"](n).eq(-1):i[t+"All"](n).eq(0)).length&&this.menuInstance.focus(e,s)},_getSelectedItem:function(){return this.menuItems.eq(this.element[0].selectedIndex).parent("li")},_toggle:function(t){this[this.isOpen?"close":"open"](t)},_setSelection:function(){var t;this.range&&(window.getSelection?((t=window.getSelection()).removeAllRanges(),t.addRange(this.range)):this.range.select(),this.button.focus())},_documentClick:{mousedown:function(t){this.isOpen&&(T(t.target).closest(".ui-selectmenu-menu, #"+T.ui.escapeSelector(this.ids.button)).length||this.close(t))}},_buttonEvents:{mousedown:function(){var t;window.getSelection?(t=window.getSelection()).rangeCount&&(this.range=t.getRangeAt(0)):this.range=document.selection.createRange()},click:function(t){this._setSelection(),this._toggle(t)},keydown:function(t){var e=!0;switch(t.keyCode){case T.ui.keyCode.TAB:case T.ui.keyCode.ESCAPE:this.close(t),e=!1;break;case T.ui.keyCode.ENTER:this.isOpen&&this._selectFocusedItem(t);break;case T.ui.keyCode.UP:t.altKey?this._toggle(t):this._move("prev",t);break;case T.ui.keyCode.DOWN:t.altKey?this._toggle(t):this._move("next",t);break;case T.ui.keyCode.SPACE:this.isOpen?this._selectFocusedItem(t):this._toggle(t);break;case T.ui.keyCode.LEFT:this._move("prev",t);break;case T.ui.keyCode.RIGHT:this._move("next",t);break;case T.ui.keyCode.HOME:case T.ui.keyCode.PAGE_UP:this._move("first",t);break;case T.ui.keyCode.END:case T.ui.keyCode.PAGE_DOWN:this._move("last",t);break;default:this.menu.trigger(t),e=!1}e&&t.preventDefault()}},_selectFocusedItem:function(t){var e=this.menuItems.eq(this.focusIndex).parent("li");e.hasClass("ui-state-disabled")||this._select(e.data("ui-selectmenu-item"),t)},_select:function(t,e){var i=this.element[0].selectedIndex;this.element[0].selectedIndex=t.index,this.buttonItem.replaceWith(this.buttonItem=this._renderButtonItem(t)),this._setAria(t),this._trigger("select",e,{item:t}),t.index!==i&&this._trigger("change",e,{item:t}),this.close(e)},_setAria:function(t){var e=this.menuItems.eq(t.index).attr("id");this.button.attr({"aria-labelledby":e,"aria-activedescendant":e}),this.menu.attr("aria-activedescendant",e)},_setOption:function(t,e){if("icons"===t){var i=this.button.find("span.ui-icon");this._removeClass(i,null,this.options.icons.button)._addClass(i,null,e.button)}this._super(t,e),"appendTo"===t&&this.menuWrap.appendTo(this._appendTo()),"width"===t&&this._resizeButton()},_setOptionDisabled:function(t){this._super(t),this.menuInstance.option("disabled",t),this.button.attr("aria-disabled",t),this._toggleClass(this.button,null,"ui-state-disabled",t),this.element.prop("disabled",t),t?(this.button.attr("tabindex",-1),this.close()):this.button.attr("tabindex",0)},_appendTo:function(){var t=this.options.appendTo;return t&&(t=t.jquery||t.nodeType?T(t):this.document.find(t).eq(0)),t&&t[0]||(t=this.element.closest(".ui-front, dialog")),t.length||(t=this.document[0].body),t},_toggleAttr:function(){this.button.attr("aria-expanded",this.isOpen),this._removeClass(this.button,"ui-selectmenu-button-"+(this.isOpen?"closed":"open"))._addClass(this.button,"ui-selectmenu-button-"+(this.isOpen?"open":"closed"))._toggleClass(this.menuWrap,"ui-selectmenu-open",null,this.isOpen),this.menu.attr("aria-hidden",!this.isOpen)},_resizeButton:function(){var t=this.options.width;!1!==t?(null===t&&(t=this.element.show().outerWidth(),this.element.hide()),this.button.outerWidth(t)):this.button.css("width","")},_resizeMenu:function(){this.menu.outerWidth(Math.max(this.button.outerWidth(),this.menu.width("").outerWidth()+1))},_getCreateOptions:function(){var t=this._super();return t.disabled=this.element.prop("disabled"),t},_parseOptions:function(t){var i=this,s=[];t.each(function(t,e){s.push(i._parseOption(T(e),t))}),this.items=s},_parseOption:function(t,e){var i=t.parent("optgroup");return{element:t,index:e,value:t.val(),label:t.text(),optgroup:i.attr("label")||"",disabled:i.prop("disabled")||t.prop("disabled")}},_destroy:function(){this._unbindFormResetHandler(),this.menuWrap.remove(),this.button.remove(),this.element.show(),this.element.removeUniqueId(),this.labels.attr("for",this.ids.element)}}]),T.widget("ui.slider",T.ui.mouse,{version:"1.12.1",widgetEventPrefix:"slide",options:{animate:!1,classes:{"ui-slider":"ui-corner-all","ui-slider-handle":"ui-corner-all","ui-slider-range":"ui-corner-all ui-widget-header"},distance:0,max:100,min:0,orientation:"horizontal",range:!1,step:1,value:0,values:null,change:null,slide:null,start:null,stop:null},numPages:5,_create:function(){this._keySliding=!1,this._mouseSliding=!1,this._animateOff=!0,this._handleIndex=null,this._detectOrientation(),this._mouseInit(),this._calculateNewMax(),this._addClass("ui-slider ui-slider-"+this.orientation,"ui-widget ui-widget-content"),this._refresh(),this._animateOff=!1},_refresh:function(){this._createRange(),this._createHandles(),this._setupEvents(),this._refreshValue()},_createHandles:function(){var t,e,i=this.options,s=this.element.find(".ui-slider-handle"),n=[];for(e=i.values&&i.values.length||1,s.length>e&&(s.slice(e).remove(),s=s.slice(0,e)),t=s.length;t<e;t++)n.push("<span tabindex='0'></span>");this.handles=s.add(T(n.join("")).appendTo(this.element)),this._addClass(this.handles,"ui-slider-handle","ui-state-default"),this.handle=this.handles.eq(0),this.handles.each(function(t){T(this).data("ui-slider-handle-index",t).attr("tabIndex",0)})},_createRange:function(){var t=this.options;t.range?(!0===t.range&&(t.values?t.values.length&&2!==t.values.length?t.values=[t.values[0],t.values[0]]:T.isArray(t.values)&&(t.values=t.values.slice(0)):t.values=[this._valueMin(),this._valueMin()]),this.range&&this.range.length?(this._removeClass(this.range,"ui-slider-range-min ui-slider-range-max"),this.range.css({left:"",bottom:""})):(this.range=T("<div>").appendTo(this.element),this._addClass(this.range,"ui-slider-range")),"min"!==t.range&&"max"!==t.range||this._addClass(this.range,"ui-slider-range-"+t.range)):(this.range&&this.range.remove(),this.range=null)},_setupEvents:function(){this._off(this.handles),this._on(this.handles,this._handleEvents),this._hoverable(this.handles),this._focusable(this.handles)},_destroy:function(){this.handles.remove(),this.range&&this.range.remove(),this._mouseDestroy()},_mouseCapture:function(t){var e,i,s,n,o,r,a,l=this,h=this.options;return!h.disabled&&(this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()},this.elementOffset=this.element.offset(),e={x:t.pageX,y:t.pageY},i=this._normValueFromMouse(e),s=this._valueMax()-this._valueMin()+1,this.handles.each(function(t){var e=Math.abs(i-l.values(t));(e<s||s===e&&(t===l._lastChangedValue||l.values(t)===h.min))&&(s=e,n=T(this),o=t)}),!1!==this._start(t,o)&&(this._mouseSliding=!0,this._handleIndex=o,this._addClass(n,null,"ui-state-active"),n.trigger("focus"),r=n.offset(),a=!T(t.target).parents().addBack().is(".ui-slider-handle"),this._clickOffset=a?{left:0,top:0}:{left:t.pageX-r.left-n.width()/2,top:t.pageY-r.top-n.height()/2-(parseInt(n.css("borderTopWidth"),10)||0)-(parseInt(n.css("borderBottomWidth"),10)||0)+(parseInt(n.css("marginTop"),10)||0)},this.handles.hasClass("ui-state-hover")||this._slide(t,o,i),this._animateOff=!0))},_mouseStart:function(){return!0},_mouseDrag:function(t){var e={x:t.pageX,y:t.pageY},i=this._normValueFromMouse(e);return this._slide(t,this._handleIndex,i),!1},_mouseStop:function(t){return this._removeClass(this.handles,null,"ui-state-active"),this._mouseSliding=!1,this._stop(t,this._handleIndex),this._change(t,this._handleIndex),this._handleIndex=null,this._clickOffset=null,this._animateOff=!1},_detectOrientation:function(){this.orientation="vertical"===this.options.orientation?"vertical":"horizontal"},_normValueFromMouse:function(t){var e,i,s,n;return 1<(i=("horizontal"===this.orientation?(e=this.elementSize.width,t.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(e=this.elementSize.height,t.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)))/e)&&(i=1),i<0&&(i=0),"vertical"===this.orientation&&(i=1-i),s=this._valueMax()-this._valueMin(),n=this._valueMin()+i*s,this._trimAlignValue(n)},_uiHash:function(t,e,i){var s={handle:this.handles[t],handleIndex:t,value:void 0!==e?e:this.value()};return this._hasMultipleValues()&&(s.value=void 0!==e?e:this.values(t),s.values=i||this.values()),s},_hasMultipleValues:function(){return this.options.values&&this.options.values.length},_start:function(t,e){return this._trigger("start",t,this._uiHash(e))},_slide:function(t,e,i){var s,n=this.value(),o=this.values();this._hasMultipleValues()&&(s=this.values(e?0:1),n=this.values(e),2===this.options.values.length&&!0===this.options.range&&(i=0===e?Math.min(s,i):Math.max(s,i)),o[e]=i),i!==n&&!1!==this._trigger("slide",t,this._uiHash(e,i,o))&&(this._hasMultipleValues()?this.values(e,i):this.value(i))},_stop:function(t,e){this._trigger("stop",t,this._uiHash(e))},_change:function(t,e){this._keySliding||this._mouseSliding||(this._lastChangedValue=e,this._trigger("change",t,this._uiHash(e)))},value:function(t){return arguments.length?(this.options.value=this._trimAlignValue(t),this._refreshValue(),void this._change(null,0)):this._value()},values:function(t,e){var i,s,n;if(1<arguments.length)return this.options.values[t]=this._trimAlignValue(e),this._refreshValue(),void this._change(null,t);if(!arguments.length)return this._values();if(!T.isArray(t))return this._hasMultipleValues()?this._values(t):this.value();for(i=this.options.values,s=t,n=0;n<i.length;n+=1)i[n]=this._trimAlignValue(s[n]),this._change(null,n);this._refreshValue()},_setOption:function(t,e){var i,s=0;switch("range"===t&&!0===this.options.range&&("min"===e?(this.options.value=this._values(0),this.options.values=null):"max"===e&&(this.options.value=this._values(this.options.values.length-1),this.options.values=null)),T.isArray(this.options.values)&&(s=this.options.values.length),this._super(t,e),t){case"orientation":this._detectOrientation(),this._removeClass("ui-slider-horizontal ui-slider-vertical")._addClass("ui-slider-"+this.orientation),this._refreshValue(),this.options.range&&this._refreshRange(e),this.handles.css("horizontal"===e?"bottom":"left","");break;case"value":this._animateOff=!0,this._refreshValue(),this._change(null,0),this._animateOff=!1;break;case"values":for(this._animateOff=!0,this._refreshValue(),i=s-1;0<=i;i--)this._change(null,i);this._animateOff=!1;break;case"step":case"min":case"max":this._animateOff=!0,this._calculateNewMax(),this._refreshValue(),this._animateOff=!1;break;case"range":this._animateOff=!0,this._refresh(),this._animateOff=!1}},_setOptionDisabled:function(t){this._super(t),this._toggleClass(null,"ui-state-disabled",!!t)},_value:function(){var t=this.options.value;return t=this._trimAlignValue(t)},_values:function(t){var e,i,s;if(arguments.length)return e=this.options.values[t],e=this._trimAlignValue(e);if(this._hasMultipleValues()){for(i=this.options.values.slice(),s=0;s<i.length;s+=1)i[s]=this._trimAlignValue(i[s]);return i}return[]},_trimAlignValue:function(t){if(t<=this._valueMin())return this._valueMin();if(t>=this._valueMax())return this._valueMax();var e=0<this.options.step?this.options.step:1,i=(t-this._valueMin())%e,s=t-i;return 2*Math.abs(i)>=e&&(s+=0<i?e:-e),parseFloat(s.toFixed(5))},_calculateNewMax:function(){var t=this.options.max,e=this._valueMin(),i=this.options.step;(t=Math.round((t-e)/i)*i+e)>this.options.max&&(t-=i),this.max=parseFloat(t.toFixed(this._precision()))},_precision:function(){var t=this._precisionOf(this.options.step);return null!==this.options.min&&(t=Math.max(t,this._precisionOf(this.options.min))),t},_precisionOf:function(t){var e=t.toString(),i=e.indexOf(".");return-1===i?0:e.length-i-1},_valueMin:function(){return this.options.min},_valueMax:function(){return this.max},_refreshRange:function(t){"vertical"===t&&this.range.css({width:"",left:""}),"horizontal"===t&&this.range.css({height:"",bottom:""})},_refreshValue:function(){var e,i,t,s,n,o=this.options.range,r=this.options,a=this,l=!this._animateOff&&r.animate,h={};this._hasMultipleValues()?this.handles.each(function(t){i=(a.values(t)-a._valueMin())/(a._valueMax()-a._valueMin())*100,h["horizontal"===a.orientation?"left":"bottom"]=i+"%",T(this).stop(1,1)[l?"animate":"css"](h,r.animate),!0===a.options.range&&("horizontal"===a.orientation?(0===t&&a.range.stop(1,1)[l?"animate":"css"]({left:i+"%"},r.animate),1===t&&a.range[l?"animate":"css"]({width:i-e+"%"},{queue:!1,duration:r.animate})):(0===t&&a.range.stop(1,1)[l?"animate":"css"]({bottom:i+"%"},r.animate),1===t&&a.range[l?"animate":"css"]({height:i-e+"%"},{queue:!1,duration:r.animate}))),e=i}):(t=this.value(),s=this._valueMin(),n=this._valueMax(),i=n!==s?(t-s)/(n-s)*100:0,h["horizontal"===this.orientation?"left":"bottom"]=i+"%",this.handle.stop(1,1)[l?"animate":"css"](h,r.animate),"min"===o&&"horizontal"===this.orientation&&this.range.stop(1,1)[l?"animate":"css"]({width:i+"%"},r.animate),"max"===o&&"horizontal"===this.orientation&&this.range.stop(1,1)[l?"animate":"css"]({width:100-i+"%"},r.animate),"min"===o&&"vertical"===this.orientation&&this.range.stop(1,1)[l?"animate":"css"]({height:i+"%"},r.animate),"max"===o&&"vertical"===this.orientation&&this.range.stop(1,1)[l?"animate":"css"]({height:100-i+"%"},r.animate))},_handleEvents:{keydown:function(t){var e,i,s,n=T(t.target).data("ui-slider-handle-index");switch(t.keyCode){case T.ui.keyCode.HOME:case T.ui.keyCode.END:case T.ui.keyCode.PAGE_UP:case T.ui.keyCode.PAGE_DOWN:case T.ui.keyCode.UP:case T.ui.keyCode.RIGHT:case T.ui.keyCode.DOWN:case T.ui.keyCode.LEFT:if(t.preventDefault(),!this._keySliding&&(this._keySliding=!0,this._addClass(T(t.target),null,"ui-state-active"),!1===this._start(t,n)))return}switch(s=this.options.step,e=i=this._hasMultipleValues()?this.values(n):this.value(),t.keyCode){case T.ui.keyCode.HOME:i=this._valueMin();break;case T.ui.keyCode.END:i=this._valueMax();break;case T.ui.keyCode.PAGE_UP:i=this._trimAlignValue(e+(this._valueMax()-this._valueMin())/this.numPages);break;case T.ui.keyCode.PAGE_DOWN:i=this._trimAlignValue(e-(this._valueMax()-this._valueMin())/this.numPages);break;case T.ui.keyCode.UP:case T.ui.keyCode.RIGHT:if(e===this._valueMax())return;i=this._trimAlignValue(e+s);break;case T.ui.keyCode.DOWN:case T.ui.keyCode.LEFT:if(e===this._valueMin())return;i=this._trimAlignValue(e-s)}this._slide(t,n,i)},keyup:function(t){var e=T(t.target).data("ui-slider-handle-index");this._keySliding&&(this._keySliding=!1,this._stop(t,e),this._change(t,e),this._removeClass(T(t.target),null,"ui-state-active"))}}}),T.widget("ui.sortable",T.ui.mouse,{version:"1.12.1",widgetEventPrefix:"sort",ready:!1,options:{appendTo:"parent",axis:!1,connectWith:!1,containment:!1,cursor:"auto",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:"original",items:"> *",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1e3,activate:null,beforeStop:null,change:null,deactivate:null,out:null,over:null,receive:null,remove:null,sort:null,start:null,stop:null,update:null},_isOverAxis:function(t,e,i){return e<=t&&t<e+i},_isFloating:function(t){return/left|right/.test(t.css("float"))||/inline|table-cell/.test(t.css("display"))},_create:function(){this.containerCache={},this._addClass("ui-sortable"),this.refresh(),this.offset=this.element.offset(),this._mouseInit(),this._setHandleClassName(),this.ready=!0},_setOption:function(t,e){this._super(t,e),"handle"===t&&this._setHandleClassName()},_setHandleClassName:function(){var t=this;this._removeClass(this.element.find(".ui-sortable-handle"),"ui-sortable-handle"),T.each(this.items,function(){t._addClass(this.instance.options.handle?this.item.find(this.instance.options.handle):this.item,"ui-sortable-handle")})},_destroy:function(){this._mouseDestroy();for(var t=this.items.length-1;0<=t;t--)this.items[t].item.removeData(this.widgetName+"-item");return this},_mouseCapture:function(t,e){var i=null,s=!1,n=this;return!this.reverting&&(!this.options.disabled&&"static"!==this.options.type&&(this._refreshItems(t),T(t.target).parents().each(function(){if(T.data(this,n.widgetName+"-item")===n)return i=T(this),!1}),T.data(t.target,n.widgetName+"-item")===n&&(i=T(t.target)),!!i&&(!(this.options.handle&&!e&&(T(this.options.handle,i).find("*").addBack().each(function(){this===t.target&&(s=!0)}),!s))&&(this.currentItem=i,this._removeCurrentsFromItems(),!0))))},_mouseStart:function(t,e,i){var s,n,o=this.options;if((this.currentContainer=this).refreshPositions(),this.helper=this._createHelper(t),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},T.extend(this.offset,{click:{left:t.pageX-this.offset.left,top:t.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.helper.css("position","absolute"),this.cssPosition=this.helper.css("position"),this.originalPosition=this._generatePosition(t),this.originalPageX=t.pageX,this.originalPageY=t.pageY,o.cursorAt&&this._adjustOffsetFromHelper(o.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!==this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),o.containment&&this._setContainment(),o.cursor&&"auto"!==o.cursor&&(n=this.document.find("body"),this.storedCursor=n.css("cursor"),n.css("cursor",o.cursor),this.storedStylesheet=T("<style>*{ cursor: "+o.cursor+" !important; }</style>").appendTo(n)),o.opacity&&(this.helper.css("opacity")&&(this._storedOpacity=this.helper.css("opacity")),this.helper.css("opacity",o.opacity)),o.zIndex&&(this.helper.css("zIndex")&&(this._storedZIndex=this.helper.css("zIndex")),this.helper.css("zIndex",o.zIndex)),this.scrollParent[0]!==this.document[0]&&"HTML"!==this.scrollParent[0].tagName&&(this.overflowOffset=this.scrollParent.offset()),this._trigger("start",t,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions(),!i)for(s=this.containers.length-1;0<=s;s--)this.containers[s]._trigger("activate",t,this._uiHash(this));return T.ui.ddmanager&&(T.ui.ddmanager.current=this),T.ui.ddmanager&&!o.dropBehaviour&&T.ui.ddmanager.prepareOffsets(this,t),this.dragging=!0,this._addClass(this.helper,"ui-sortable-helper"),this._mouseDrag(t),!0},_mouseDrag:function(t){var e,i,s,n,o=this.options,r=!1;for(this.position=this._generatePosition(t),this.positionAbs=this._convertPositionTo("absolute"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs),this.options.scroll&&(this.scrollParent[0]!==this.document[0]&&"HTML"!==this.scrollParent[0].tagName?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-t.pageY<o.scrollSensitivity?this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop+o.scrollSpeed:t.pageY-this.overflowOffset.top<o.scrollSensitivity&&(this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop-o.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-t.pageX<o.scrollSensitivity?this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft+o.scrollSpeed:t.pageX-this.overflowOffset.left<o.scrollSensitivity&&(this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft-o.scrollSpeed)):(t.pageY-this.document.scrollTop()<o.scrollSensitivity?r=this.document.scrollTop(this.document.scrollTop()-o.scrollSpeed):this.window.height()-(t.pageY-this.document.scrollTop())<o.scrollSensitivity&&(r=this.document.scrollTop(this.document.scrollTop()+o.scrollSpeed)),t.pageX-this.document.scrollLeft()<o.scrollSensitivity?r=this.document.scrollLeft(this.document.scrollLeft()-o.scrollSpeed):this.window.width()-(t.pageX-this.document.scrollLeft())<o.scrollSensitivity&&(r=this.document.scrollLeft(this.document.scrollLeft()+o.scrollSpeed))),!1!==r&&T.ui.ddmanager&&!o.dropBehaviour&&T.ui.ddmanager.prepareOffsets(this,t)),this.positionAbs=this._convertPositionTo("absolute"),this.options.axis&&"y"===this.options.axis||(this.helper[0].style.left=this.position.left+"px"),this.options.axis&&"x"===this.options.axis||(this.helper[0].style.top=this.position.top+"px"),e=this.items.length-1;0<=e;e--)if(s=(i=this.items[e]).item[0],(n=this._intersectsWithPointer(i))&&i.instance===this.currentContainer&&!(s===this.currentItem[0]||this.placeholder[1===n?"next":"prev"]()[0]===s||T.contains(this.placeholder[0],s)||"semi-dynamic"===this.options.type&&T.contains(this.element[0],s))){if(this.direction=1===n?"down":"up","pointer"!==this.options.tolerance&&!this._intersectsWithSides(i))break;this._rearrange(t,i),this._trigger("change",t,this._uiHash());break}return this._contactContainers(t),T.ui.ddmanager&&T.ui.ddmanager.drag(this,t),this._trigger("sort",t,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(t,e){if(t){if(T.ui.ddmanager&&!this.options.dropBehaviour&&T.ui.ddmanager.drop(this,t),this.options.revert){var i=this,s=this.placeholder.offset(),n=this.options.axis,o={};n&&"x"!==n||(o.left=s.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollLeft)),n&&"y"!==n||(o.top=s.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollTop)),this.reverting=!0,T(this.helper).animate(o,parseInt(this.options.revert,10)||500,function(){i._clear(t)})}else this._clear(t,e);return!1}},cancel:function(){if(this.dragging){this._mouseUp(new T.Event("mouseup",{target:null})),"original"===this.options.helper?(this.currentItem.css(this._storedCSS),this._removeClass(this.currentItem,"ui-sortable-helper")):this.currentItem.show();for(var t=this.containers.length-1;0<=t;t--)this.containers[t]._trigger("deactivate",null,this._uiHash(this)),this.containers[t].containerCache.over&&(this.containers[t]._trigger("out",null,this._uiHash(this)),this.containers[t].containerCache.over=0)}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),"original"!==this.options.helper&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),T.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?T(this.domPosition.prev).after(this.currentItem):T(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(e){var t=this._getItemsAsjQuery(e&&e.connected),i=[];return e=e||{},T(t).each(function(){var t=(T(e.item||this).attr(e.attribute||"id")||"").match(e.expression||/(.+)[\-=_](.+)/);t&&i.push((e.key||t[1]+"[]")+"="+(e.key&&e.expression?t[1]:t[2]))}),!i.length&&e.key&&i.push(e.key+"="),i.join("&")},toArray:function(t){var e=this._getItemsAsjQuery(t&&t.connected),i=[];return t=t||{},e.each(function(){i.push(T(t.item||this).attr(t.attribute||"id")||"")}),i},_intersectsWith:function(t){var e=this.positionAbs.left,i=e+this.helperProportions.width,s=this.positionAbs.top,n=s+this.helperProportions.height,o=t.left,r=o+t.width,a=t.top,l=a+t.height,h=this.offset.click.top,u=this.offset.click.left,c="x"===this.options.axis||a<s+h&&s+h<l,d="y"===this.options.axis||o<e+u&&e+u<r,p=c&&d;return"pointer"===this.options.tolerance||this.options.forcePointerForContainers||"pointer"!==this.options.tolerance&&this.helperProportions[this.floating?"width":"height"]>t[this.floating?"width":"height"]?p:o<e+this.helperProportions.width/2&&i-this.helperProportions.width/2<r&&a<s+this.helperProportions.height/2&&n-this.helperProportions.height/2<l},_intersectsWithPointer:function(t){var e,i,s="x"===this.options.axis||this._isOverAxis(this.positionAbs.top+this.offset.click.top,t.top,t.height),n="y"===this.options.axis||this._isOverAxis(this.positionAbs.left+this.offset.click.left,t.left,t.width);return!(!s||!n)&&(e=this._getDragVerticalDirection(),i=this._getDragHorizontalDirection(),this.floating?"right"===i||"down"===e?2:1:e&&("down"===e?2:1))},_intersectsWithSides:function(t){var e=this._isOverAxis(this.positionAbs.top+this.offset.click.top,t.top+t.height/2,t.height),i=this._isOverAxis(this.positionAbs.left+this.offset.click.left,t.left+t.width/2,t.width),s=this._getDragVerticalDirection(),n=this._getDragHorizontalDirection();return this.floating&&n?"right"===n&&i||"left"===n&&!i:s&&("down"===s&&e||"up"===s&&!e)},_getDragVerticalDirection:function(){var t=this.positionAbs.top-this.lastPositionAbs.top;return 0!==t&&(0<t?"down":"up")},_getDragHorizontalDirection:function(){var t=this.positionAbs.left-this.lastPositionAbs.left;return 0!==t&&(0<t?"right":"left")},refresh:function(t){return this._refreshItems(t),this._setHandleClassName(),this.refreshPositions(),this},_connectWith:function(){var t=this.options;return t.connectWith.constructor===String?[t.connectWith]:t.connectWith},_getItemsAsjQuery:function(t){var e,i,s,n,o=[],r=[],a=this._connectWith();if(a&&t)for(e=a.length-1;0<=e;e--)for(i=(s=T(a[e],this.document[0])).length-1;0<=i;i--)(n=T.data(s[i],this.widgetFullName))&&n!==this&&!n.options.disabled&&r.push([T.isFunction(n.options.items)?n.options.items.call(n.element):T(n.options.items,n.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),n]);function l(){o.push(this)}for(r.push([T.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):T(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),this]),e=r.length-1;0<=e;e--)r[e][0].each(l);return T(o)},_removeCurrentsFromItems:function(){var i=this.currentItem.find(":data("+this.widgetName+"-item)");this.items=T.grep(this.items,function(t){for(var e=0;e<i.length;e++)if(i[e]===t.item[0])return!1;return!0})},_refreshItems:function(t){this.items=[],this.containers=[this];var e,i,s,n,o,r,a,l,h=this.items,u=[[T.isFunction(this.options.items)?this.options.items.call(this.element[0],t,{item:this.currentItem}):T(this.options.items,this.element),this]],c=this._connectWith();if(c&&this.ready)for(e=c.length-1;0<=e;e--)for(i=(s=T(c[e],this.document[0])).length-1;0<=i;i--)(n=T.data(s[i],this.widgetFullName))&&n!==this&&!n.options.disabled&&(u.push([T.isFunction(n.options.items)?n.options.items.call(n.element[0],t,{item:this.currentItem}):T(n.options.items,n.element),n]),this.containers.push(n));for(e=u.length-1;0<=e;e--)for(o=u[e][1],i=0,l=(r=u[e][0]).length;i<l;i++)(a=T(r[i])).data(this.widgetName+"-item",o),h.push({item:a,instance:o,width:0,height:0,left:0,top:0})},refreshPositions:function(t){var e,i,s,n;for(this.floating=!!this.items.length&&("x"===this.options.axis||this._isFloating(this.items[0].item)),this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset()),e=this.items.length-1;0<=e;e--)(i=this.items[e]).instance!==this.currentContainer&&this.currentContainer&&i.item[0]!==this.currentItem[0]||(s=this.options.toleranceElement?T(this.options.toleranceElement,i.item):i.item,t||(i.width=s.outerWidth(),i.height=s.outerHeight()),n=s.offset(),i.left=n.left,i.top=n.top);if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(e=this.containers.length-1;0<=e;e--)n=this.containers[e].element.offset(),this.containers[e].containerCache.left=n.left,this.containers[e].containerCache.top=n.top,this.containers[e].containerCache.width=this.containers[e].element.outerWidth(),this.containers[e].containerCache.height=this.containers[e].element.outerHeight();return this},_createPlaceholder:function(i){var s,n=(i=i||this).options;n.placeholder&&n.placeholder.constructor!==String||(s=n.placeholder,n.placeholder={element:function(){var t=i.currentItem[0].nodeName.toLowerCase(),e=T("<"+t+">",i.document[0]);return i._addClass(e,"ui-sortable-placeholder",s||i.currentItem[0].className)._removeClass(e,"ui-sortable-helper"),"tbody"===t?i._createTrPlaceholder(i.currentItem.find("tr").eq(0),T("<tr>",i.document[0]).appendTo(e)):"tr"===t?i._createTrPlaceholder(i.currentItem,e):"img"===t&&e.attr("src",i.currentItem.attr("src")),s||e.css("visibility","hidden"),e},update:function(t,e){s&&!n.forcePlaceholderSize||(e.height()||e.height(i.currentItem.innerHeight()-parseInt(i.currentItem.css("paddingTop")||0,10)-parseInt(i.currentItem.css("paddingBottom")||0,10)),e.width()||e.width(i.currentItem.innerWidth()-parseInt(i.currentItem.css("paddingLeft")||0,10)-parseInt(i.currentItem.css("paddingRight")||0,10)))}}),i.placeholder=T(n.placeholder.element.call(i.element,i.currentItem)),i.currentItem.after(i.placeholder),n.placeholder.update(i,i.placeholder)},_createTrPlaceholder:function(t,e){var i=this;t.children().each(function(){T("<td>&#160;</td>",i.document[0]).attr("colspan",T(this).attr("colspan")||1).appendTo(e)})},_contactContainers:function(t){var e,i,s,n,o,r,a,l,h,u,c=null,d=null;for(e=this.containers.length-1;0<=e;e--)if(!T.contains(this.currentItem[0],this.containers[e].element[0]))if(this._intersectsWith(this.containers[e].containerCache)){if(c&&T.contains(this.containers[e].element[0],c.element[0]))continue;c=this.containers[e],d=e}else this.containers[e].containerCache.over&&(this.containers[e]._trigger("out",t,this._uiHash(this)),this.containers[e].containerCache.over=0);if(c)if(1===this.containers.length)this.containers[d].containerCache.over||(this.containers[d]._trigger("over",t,this._uiHash(this)),this.containers[d].containerCache.over=1);else{for(s=1e4,n=null,o=(h=c.floating||this._isFloating(this.currentItem))?"left":"top",r=h?"width":"height",u=h?"pageX":"pageY",i=this.items.length-1;0<=i;i--)T.contains(this.containers[d].element[0],this.items[i].item[0])&&this.items[i].item[0]!==this.currentItem[0]&&(a=this.items[i].item.offset()[o],l=!1,t[u]-a>this.items[i][r]/2&&(l=!0),Math.abs(t[u]-a)<s&&(s=Math.abs(t[u]-a),n=this.items[i],this.direction=l?"up":"down"));if(!n&&!this.options.dropOnEmpty)return;if(this.currentContainer===this.containers[d])return void(this.currentContainer.containerCache.over||(this.containers[d]._trigger("over",t,this._uiHash()),this.currentContainer.containerCache.over=1));n?this._rearrange(t,n,null,!0):this._rearrange(t,null,this.containers[d].element,!0),this._trigger("change",t,this._uiHash()),this.containers[d]._trigger("change",t,this._uiHash(this)),this.currentContainer=this.containers[d],this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[d]._trigger("over",t,this._uiHash(this)),this.containers[d].containerCache.over=1}},_createHelper:function(t){var e=this.options,i=T.isFunction(e.helper)?T(e.helper.apply(this.element[0],[t,this.currentItem])):"clone"===e.helper?this.currentItem.clone():this.currentItem;return i.parents("body").length||T("parent"!==e.appendTo?e.appendTo:this.currentItem[0].parentNode)[0].appendChild(i[0]),i[0]===this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")}),i[0].style.width&&!e.forceHelperSize||i.width(this.currentItem.width()),i[0].style.height&&!e.forceHelperSize||i.height(this.currentItem.height()),i},_adjustOffsetFromHelper:function(t){"string"==typeof t&&(t=t.split(" ")),T.isArray(t)&&(t={left:+t[0],top:+t[1]||0}),"left"in t&&(this.offset.click.left=t.left+this.margins.left),"right"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),"top"in t&&(this.offset.click.top=t.top+this.margins.top),"bottom"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var t=this.offsetParent.offset();return"absolute"===this.cssPosition&&this.scrollParent[0]!==this.document[0]&&T.contains(this.scrollParent[0],this.offsetParent[0])&&(t.left+=this.scrollParent.scrollLeft(),t.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]===this.document[0].body||this.offsetParent[0].tagName&&"html"===this.offsetParent[0].tagName.toLowerCase()&&T.ui.ie)&&(t={top:0,left:0}),{top:t.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:t.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"!==this.cssPosition)return{top:0,left:0};var t=this.currentItem.position();return{top:t.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:t.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css("marginLeft"),10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var t,e,i,s=this.options;"parent"===s.containment&&(s.containment=this.helper[0].parentNode),"document"!==s.containment&&"window"!==s.containment||(this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,"document"===s.containment?this.document.width():this.window.width()-this.helperProportions.width-this.margins.left,("document"===s.containment?this.document.height()||document.body.parentNode.scrollHeight:this.window.height()||this.document[0].body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]),/^(document|window|parent)$/.test(s.containment)||(t=T(s.containment)[0],e=T(s.containment).offset(),i="hidden"!==T(t).css("overflow"),this.containment=[e.left+(parseInt(T(t).css("borderLeftWidth"),10)||0)+(parseInt(T(t).css("paddingLeft"),10)||0)-this.margins.left,e.top+(parseInt(T(t).css("borderTopWidth"),10)||0)+(parseInt(T(t).css("paddingTop"),10)||0)-this.margins.top,e.left+(i?Math.max(t.scrollWidth,t.offsetWidth):t.offsetWidth)-(parseInt(T(t).css("borderLeftWidth"),10)||0)-(parseInt(T(t).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,e.top+(i?Math.max(t.scrollHeight,t.offsetHeight):t.offsetHeight)-(parseInt(T(t).css("borderTopWidth"),10)||0)-(parseInt(T(t).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top])},_convertPositionTo:function(t,e){e||(e=this.position);var i="absolute"===t?1:-1,s="absolute"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&T.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,n=/(html|body)/i.test(s[0].tagName);return{top:e.top+this.offset.relative.top*i+this.offset.parent.top*i-("fixed"===this.cssPosition?-this.scrollParent.scrollTop():n?0:s.scrollTop())*i,left:e.left+this.offset.relative.left*i+this.offset.parent.left*i-("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():n?0:s.scrollLeft())*i}},_generatePosition:function(t){var e,i,s=this.options,n=t.pageX,o=t.pageY,r="absolute"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&T.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,a=/(html|body)/i.test(r[0].tagName);return"relative"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&this.scrollParent[0]!==this.offsetParent[0]||(this.offset.relative=this._getRelativeOffset()),this.originalPosition&&(this.containment&&(t.pageX-this.offset.click.left<this.containment[0]&&(n=this.containment[0]+this.offset.click.left),t.pageY-this.offset.click.top<this.containment[1]&&(o=this.containment[1]+this.offset.click.top),t.pageX-this.offset.click.left>this.containment[2]&&(n=this.containment[2]+this.offset.click.left),t.pageY-this.offset.click.top>this.containment[3]&&(o=this.containment[3]+this.offset.click.top)),s.grid&&(e=this.originalPageY+Math.round((o-this.originalPageY)/s.grid[1])*s.grid[1],o=this.containment?e-this.offset.click.top>=this.containment[1]&&e-this.offset.click.top<=this.containment[3]?e:e-this.offset.click.top>=this.containment[1]?e-s.grid[1]:e+s.grid[1]:e,i=this.originalPageX+Math.round((n-this.originalPageX)/s.grid[0])*s.grid[0],n=this.containment?i-this.offset.click.left>=this.containment[0]&&i-this.offset.click.left<=this.containment[2]?i:i-this.offset.click.left>=this.containment[0]?i-s.grid[0]:i+s.grid[0]:i)),{top:o-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.scrollParent.scrollTop():a?0:r.scrollTop()),left:n-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():a?0:r.scrollLeft())}},_rearrange:function(t,e,i,s){i?i[0].appendChild(this.placeholder[0]):e.item[0].parentNode.insertBefore(this.placeholder[0],"down"===this.direction?e.item[0]:e.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var n=this.counter;this._delay(function(){n===this.counter&&this.refreshPositions(!s)})},_clear:function(t,e){this.reverting=!1;var i,s=[];if(!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null,this.helper[0]===this.currentItem[0]){for(i in this._storedCSS)"auto"!==this._storedCSS[i]&&"static"!==this._storedCSS[i]||(this._storedCSS[i]="");this.currentItem.css(this._storedCSS),this._removeClass(this.currentItem,"ui-sortable-helper")}else this.currentItem.show();function n(e,i,s){return function(t){s._trigger(e,t,i._uiHash(i))}}for(this.fromOutside&&!e&&s.push(function(t){this._trigger("receive",t,this._uiHash(this.fromOutside))}),!this.fromOutside&&this.domPosition.prev===this.currentItem.prev().not(".ui-sortable-helper")[0]&&this.domPosition.parent===this.currentItem.parent()[0]||e||s.push(function(t){this._trigger("update",t,this._uiHash())}),this!==this.currentContainer&&(e||(s.push(function(t){this._trigger("remove",t,this._uiHash())}),s.push(function(e){return function(t){e._trigger("receive",t,this._uiHash(this))}}.call(this,this.currentContainer)),s.push(function(e){return function(t){e._trigger("update",t,this._uiHash(this))}}.call(this,this.currentContainer)))),i=this.containers.length-1;0<=i;i--)e||s.push(n("deactivate",this,this.containers[i])),this.containers[i].containerCache.over&&(s.push(n("out",this,this.containers[i])),this.containers[i].containerCache.over=0);if(this.storedCursor&&(this.document.find("body").css("cursor",this.storedCursor),this.storedStylesheet.remove()),this._storedOpacity&&this.helper.css("opacity",this._storedOpacity),this._storedZIndex&&this.helper.css("zIndex","auto"===this._storedZIndex?"":this._storedZIndex),this.dragging=!1,e||this._trigger("beforeStop",t,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.cancelHelperRemoval||(this.helper[0]!==this.currentItem[0]&&this.helper.remove(),this.helper=null),!e){for(i=0;i<s.length;i++)s[i].call(this,t);this._trigger("stop",t,this._uiHash())}return this.fromOutside=!1,!this.cancelHelperRemoval},_trigger:function(){!1===T.Widget.prototype._trigger.apply(this,arguments)&&this.cancel()},_uiHash:function(t){var e=t||this;return{helper:e.helper,placeholder:e.placeholder||T([]),position:e.position,originalPosition:e.originalPosition,offset:e.positionAbs,item:e.currentItem,sender:t?t.element:null}}});function y(e){return function(){var t=this.element.val();e.apply(this,arguments),this._refresh(),t!==this.element.val()&&this._trigger("change")}}T.widget("ui.spinner",{version:"1.12.1",defaultElement:"<input>",widgetEventPrefix:"spin",options:{classes:{"ui-spinner":"ui-corner-all","ui-spinner-down":"ui-corner-br","ui-spinner-up":"ui-corner-tr"},culture:null,icons:{down:"ui-icon-triangle-1-s",up:"ui-icon-triangle-1-n"},incremental:!0,max:null,min:null,numberFormat:null,page:10,step:1,change:null,spin:null,start:null,stop:null},_create:function(){this._setOption("max",this.options.max),this._setOption("min",this.options.min),this._setOption("step",this.options.step),""!==this.value()&&this._value(this.element.val(),!0),this._draw(),this._on(this._events),this._refresh(),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_getCreateOptions:function(){var s=this._super(),n=this.element;return T.each(["min","max","step"],function(t,e){var i=n.attr(e);null!=i&&i.length&&(s[e]=i)}),s},_events:{keydown:function(t){this._start(t)&&this._keydown(t)&&t.preventDefault()},keyup:"_stop",focus:function(){this.previous=this.element.val()},blur:function(t){this.cancelBlur?delete this.cancelBlur:(this._stop(),this._refresh(),this.previous!==this.element.val()&&this._trigger("change",t))},mousewheel:function(t,e){if(e){if(!this.spinning&&!this._start(t))return!1;this._spin((0<e?1:-1)*this.options.step,t),clearTimeout(this.mousewheelTimer),this.mousewheelTimer=this._delay(function(){this.spinning&&this._stop(t)},100),t.preventDefault()}},"mousedown .ui-spinner-button":function(t){var e;function i(){this.element[0]===T.ui.safeActiveElement(this.document[0])||(this.element.trigger("focus"),this.previous=e,this._delay(function(){this.previous=e}))}e=this.element[0]===T.ui.safeActiveElement(this.document[0])?this.previous:this.element.val(),t.preventDefault(),i.call(this),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur,i.call(this)}),!1!==this._start(t)&&this._repeat(null,T(t.currentTarget).hasClass("ui-spinner-up")?1:-1,t)},"mouseup .ui-spinner-button":"_stop","mouseenter .ui-spinner-button":function(t){if(T(t.currentTarget).hasClass("ui-state-active"))return!1!==this._start(t)&&void this._repeat(null,T(t.currentTarget).hasClass("ui-spinner-up")?1:-1,t)},"mouseleave .ui-spinner-button":"_stop"},_enhance:function(){this.uiSpinner=this.element.attr("autocomplete","off").wrap("<span>").parent().append("<a></a><a></a>")},_draw:function(){this._enhance(),this._addClass(this.uiSpinner,"ui-spinner","ui-widget ui-widget-content"),this._addClass("ui-spinner-input"),this.element.attr("role","spinbutton"),this.buttons=this.uiSpinner.children("a").attr("tabIndex",-1).attr("aria-hidden",!0).button({classes:{"ui-button":""}}),this._removeClass(this.buttons,"ui-corner-all"),this._addClass(this.buttons.first(),"ui-spinner-button ui-spinner-up"),this._addClass(this.buttons.last(),"ui-spinner-button ui-spinner-down"),this.buttons.first().button({icon:this.options.icons.up,showLabel:!1}),this.buttons.last().button({icon:this.options.icons.down,showLabel:!1}),this.buttons.height()>Math.ceil(.5*this.uiSpinner.height())&&0<this.uiSpinner.height()&&this.uiSpinner.height(this.uiSpinner.height())},_keydown:function(t){var e=this.options,i=T.ui.keyCode;switch(t.keyCode){case i.UP:return this._repeat(null,1,t),!0;case i.DOWN:return this._repeat(null,-1,t),!0;case i.PAGE_UP:return this._repeat(null,e.page,t),!0;case i.PAGE_DOWN:return this._repeat(null,-e.page,t),!0}return!1},_start:function(t){return!(!this.spinning&&!1===this._trigger("start",t))&&(this.counter||(this.counter=1),this.spinning=!0)},_repeat:function(t,e,i){t=t||500,clearTimeout(this.timer),this.timer=this._delay(function(){this._repeat(40,e,i)},t),this._spin(e*this.options.step,i)},_spin:function(t,e){var i=this.value()||0;this.counter||(this.counter=1),i=this._adjustValue(i+t*this._increment(this.counter)),this.spinning&&!1===this._trigger("spin",e,{value:i})||(this._value(i),this.counter++)},_increment:function(t){var e=this.options.incremental;return e?T.isFunction(e)?e(t):Math.floor(t*t*t/5e4-t*t/500+17*t/200+1):1},_precision:function(){var t=this._precisionOf(this.options.step);return null!==this.options.min&&(t=Math.max(t,this._precisionOf(this.options.min))),t},_precisionOf:function(t){var e=t.toString(),i=e.indexOf(".");return-1===i?0:e.length-i-1},_adjustValue:function(t){var e,i,s=this.options;return i=t-(e=null!==s.min?s.min:0),t=e+(i=Math.round(i/s.step)*s.step),t=parseFloat(t.toFixed(this._precision())),null!==s.max&&t>s.max?s.max:null!==s.min&&t<s.min?s.min:t},_stop:function(t){this.spinning&&(clearTimeout(this.timer),clearTimeout(this.mousewheelTimer),this.counter=0,this.spinning=!1,this._trigger("stop",t))},_setOption:function(t,e){var i,s,n;if("culture"===t||"numberFormat"===t)return i=this._parse(this.element.val()),this.options[t]=e,void this.element.val(this._format(i));"max"!==t&&"min"!==t&&"step"!==t||"string"==typeof e&&(e=this._parse(e)),"icons"===t&&(s=this.buttons.first().find(".ui-icon"),this._removeClass(s,null,this.options.icons.up),this._addClass(s,null,e.up),n=this.buttons.last().find(".ui-icon"),this._removeClass(n,null,this.options.icons.down),this._addClass(n,null,e.down)),this._super(t,e)},_setOptionDisabled:function(t){this._super(t),this._toggleClass(this.uiSpinner,null,"ui-state-disabled",!!t),this.element.prop("disabled",!!t),this.buttons.button(t?"disable":"enable")},_setOptions:y(function(t){this._super(t)}),_parse:function(t){return"string"==typeof t&&""!==t&&(t=window.Globalize&&this.options.numberFormat?Globalize.parseFloat(t,10,this.options.culture):+t),""===t||isNaN(t)?null:t},_format:function(t){return""===t?"":window.Globalize&&this.options.numberFormat?Globalize.format(t,this.options.numberFormat,this.options.culture):t},_refresh:function(){this.element.attr({"aria-valuemin":this.options.min,"aria-valuemax":this.options.max,"aria-valuenow":this._parse(this.element.val())})},isValid:function(){var t=this.value();return null!==t&&t===this._adjustValue(t)},_value:function(t,e){var i;""!==t&&null!==(i=this._parse(t))&&(e||(i=this._adjustValue(i)),t=this._format(i)),this.element.val(t),this._refresh()},_destroy:function(){this.element.prop("disabled",!1).removeAttr("autocomplete role aria-valuemin aria-valuemax aria-valuenow"),this.uiSpinner.replaceWith(this.element)},stepUp:y(function(t){this._stepUp(t)}),_stepUp:function(t){this._start()&&(this._spin((t||1)*this.options.step),this._stop())},stepDown:y(function(t){this._stepDown(t)}),_stepDown:function(t){this._start()&&(this._spin((t||1)*-this.options.step),this._stop())},pageUp:y(function(t){this._stepUp((t||1)*this.options.page)}),pageDown:y(function(t){this._stepDown((t||1)*this.options.page)}),value:function(t){if(!arguments.length)return this._parse(this.element.val());y(this._value).call(this,t)},widget:function(){return this.uiSpinner}}),!1!==T.uiBackCompat&&T.widget("ui.spinner",T.ui.spinner,{_enhance:function(){this.uiSpinner=this.element.attr("autocomplete","off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml())},_uiSpinnerHtml:function(){return"<span>"},_buttonHtml:function(){return"<a></a><a></a>"}});var w;T.ui.spinner;T.widget("ui.tabs",{version:"1.12.1",delay:300,options:{active:null,classes:{"ui-tabs":"ui-corner-all","ui-tabs-nav":"ui-corner-all","ui-tabs-panel":"ui-corner-bottom","ui-tabs-tab":"ui-corner-top"},collapsible:!1,event:"click",heightStyle:"content",hide:null,show:null,activate:null,beforeActivate:null,beforeLoad:null,load:null},_isLocal:(w=/#.*$/,function(t){var e,i;e=t.href.replace(w,""),i=location.href.replace(w,"");try{e=decodeURIComponent(e)}catch(t){}try{i=decodeURIComponent(i)}catch(t){}return 1<t.hash.length&&e===i}),_create:function(){var e=this,t=this.options;this.running=!1,this._addClass("ui-tabs","ui-widget ui-widget-content"),this._toggleClass("ui-tabs-collapsible",null,t.collapsible),this._processTabs(),t.active=this._initialActive(),T.isArray(t.disabled)&&(t.disabled=T.unique(t.disabled.concat(T.map(this.tabs.filter(".ui-state-disabled"),function(t){return e.tabs.index(t)}))).sort()),!1!==this.options.active&&this.anchors.length?this.active=this._findActive(t.active):this.active=T(),this._refresh(),this.active.length&&this.load(t.active)},_initialActive:function(){var i=this.options.active,t=this.options.collapsible,s=location.hash.substring(1);return null===i&&(s&&this.tabs.each(function(t,e){if(T(e).attr("aria-controls")===s)return i=t,!1}),null===i&&(i=this.tabs.index(this.tabs.filter(".ui-tabs-active"))),null!==i&&-1!==i||(i=!!this.tabs.length&&0)),!1!==i&&-1===(i=this.tabs.index(this.tabs.eq(i)))&&(i=!t&&0),!t&&!1===i&&this.anchors.length&&(i=0),i},_getCreateEventData:function(){return{tab:this.active,panel:this.active.length?this._getPanelForTab(this.active):T()}},_tabKeydown:function(t){var e=T(T.ui.safeActiveElement(this.document[0])).closest("li"),i=this.tabs.index(e),s=!0;if(!this._handlePageNav(t)){switch(t.keyCode){case T.ui.keyCode.RIGHT:case T.ui.keyCode.DOWN:i++;break;case T.ui.keyCode.UP:case T.ui.keyCode.LEFT:s=!1,i--;break;case T.ui.keyCode.END:i=this.anchors.length-1;break;case T.ui.keyCode.HOME:i=0;break;case T.ui.keyCode.SPACE:return t.preventDefault(),clearTimeout(this.activating),void this._activate(i);case T.ui.keyCode.ENTER:return t.preventDefault(),clearTimeout(this.activating),void this._activate(i!==this.options.active&&i);default:return}t.preventDefault(),clearTimeout(this.activating),i=this._focusNextTab(i,s),t.ctrlKey||t.metaKey||(e.attr("aria-selected","false"),this.tabs.eq(i).attr("aria-selected","true"),this.activating=this._delay(function(){this.option("active",i)},this.delay))}},_panelKeydown:function(t){this._handlePageNav(t)||t.ctrlKey&&t.keyCode===T.ui.keyCode.UP&&(t.preventDefault(),this.active.trigger("focus"))},_handlePageNav:function(t){return t.altKey&&t.keyCode===T.ui.keyCode.PAGE_UP?(this._activate(this._focusNextTab(this.options.active-1,!1)),!0):t.altKey&&t.keyCode===T.ui.keyCode.PAGE_DOWN?(this._activate(this._focusNextTab(this.options.active+1,!0)),!0):void 0},_findNextTab:function(t,e){var i=this.tabs.length-1;for(;-1!==T.inArray((i<t&&(t=0),t<0&&(t=i),t),this.options.disabled);)t=e?t+1:t-1;return t},_focusNextTab:function(t,e){return t=this._findNextTab(t,e),this.tabs.eq(t).trigger("focus"),t},_setOption:function(t,e){"active"!==t?(this._super(t,e),"collapsible"===t&&(this._toggleClass("ui-tabs-collapsible",null,e),e||!1!==this.options.active||this._activate(0)),"event"===t&&this._setupEvents(e),"heightStyle"===t&&this._setupHeightStyle(e)):this._activate(e)},_sanitizeSelector:function(t){return t?t.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g,"\\$&"):""},refresh:function(){var t=this.options,e=this.tablist.children(":has(a[href])");t.disabled=T.map(e.filter(".ui-state-disabled"),function(t){return e.index(t)}),this._processTabs(),!1!==t.active&&this.anchors.length?this.active.length&&!T.contains(this.tablist[0],this.active[0])?this.tabs.length===t.disabled.length?(t.active=!1,this.active=T()):this._activate(this._findNextTab(Math.max(0,t.active-1),!1)):t.active=this.tabs.index(this.active):(t.active=!1,this.active=T()),this._refresh()},_refresh:function(){this._setOptionDisabled(this.options.disabled),this._setupEvents(this.options.event),this._setupHeightStyle(this.options.heightStyle),this.tabs.not(this.active).attr({"aria-selected":"false","aria-expanded":"false",tabIndex:-1}),this.panels.not(this._getPanelForTab(this.active)).hide().attr({"aria-hidden":"true"}),this.active.length?(this.active.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0}),this._addClass(this.active,"ui-tabs-active","ui-state-active"),this._getPanelForTab(this.active).show().attr({"aria-hidden":"false"})):this.tabs.eq(0).attr("tabIndex",0)},_processTabs:function(){var l=this,t=this.tabs,e=this.anchors,i=this.panels;this.tablist=this._getList().attr("role","tablist"),this._addClass(this.tablist,"ui-tabs-nav","ui-helper-reset ui-helper-clearfix ui-widget-header"),this.tablist.on("mousedown"+this.eventNamespace,"> li",function(t){T(this).is(".ui-state-disabled")&&t.preventDefault()}).on("focus"+this.eventNamespace,".ui-tabs-anchor",function(){T(this).closest("li").is(".ui-state-disabled")&&this.blur()}),this.tabs=this.tablist.find("> li:has(a[href])").attr({role:"tab",tabIndex:-1}),this._addClass(this.tabs,"ui-tabs-tab","ui-state-default"),this.anchors=this.tabs.map(function(){return T("a",this)[0]}).attr({role:"presentation",tabIndex:-1}),this._addClass(this.anchors,"ui-tabs-anchor"),this.panels=T(),this.anchors.each(function(t,e){var i,s,n,o=T(e).uniqueId().attr("id"),r=T(e).closest("li"),a=r.attr("aria-controls");l._isLocal(e)?(n=(i=e.hash).substring(1),s=l.element.find(l._sanitizeSelector(i))):(i="#"+(n=r.attr("aria-controls")||T({}).uniqueId()[0].id),(s=l.element.find(i)).length||(s=l._createPanel(n)).insertAfter(l.panels[t-1]||l.tablist),s.attr("aria-live","polite")),s.length&&(l.panels=l.panels.add(s)),a&&r.data("ui-tabs-aria-controls",a),r.attr({"aria-controls":n,"aria-labelledby":o}),s.attr("aria-labelledby",o)}),this.panels.attr("role","tabpanel"),this._addClass(this.panels,"ui-tabs-panel","ui-widget-content"),t&&(this._off(t.not(this.tabs)),this._off(e.not(this.anchors)),this._off(i.not(this.panels)))},_getList:function(){return this.tablist||this.element.find("ol, ul").eq(0)},_createPanel:function(t){return T("<div>").attr("id",t).data("ui-tabs-destroy",!0)},_setOptionDisabled:function(t){var e,i,s;for(T.isArray(t)&&(t.length?t.length===this.anchors.length&&(t=!0):t=!1),s=0;i=this.tabs[s];s++)e=T(i),!0===t||-1!==T.inArray(s,t)?(e.attr("aria-disabled","true"),this._addClass(e,null,"ui-state-disabled")):(e.removeAttr("aria-disabled"),this._removeClass(e,null,"ui-state-disabled"));this.options.disabled=t,this._toggleClass(this.widget(),this.widgetFullName+"-disabled",null,!0===t)},_setupEvents:function(t){var i={};t&&T.each(t.split(" "),function(t,e){i[e]="_eventHandler"}),this._off(this.anchors.add(this.tabs).add(this.panels)),this._on(!0,this.anchors,{click:function(t){t.preventDefault()}}),this._on(this.anchors,i),this._on(this.tabs,{keydown:"_tabKeydown"}),this._on(this.panels,{keydown:"_panelKeydown"}),this._focusable(this.tabs),this._hoverable(this.tabs)},_setupHeightStyle:function(t){var i,e=this.element.parent();"fill"===t?(i=e.height(),i-=this.element.outerHeight()-this.element.height(),this.element.siblings(":visible").each(function(){var t=T(this),e=t.css("position");"absolute"!==e&&"fixed"!==e&&(i-=t.outerHeight(!0))}),this.element.children().not(this.panels).each(function(){i-=T(this).outerHeight(!0)}),this.panels.each(function(){T(this).height(Math.max(0,i-T(this).innerHeight()+T(this).height()))}).css("overflow","auto")):"auto"===t&&(i=0,this.panels.each(function(){i=Math.max(i,T(this).height("").height())}).height(i))},_eventHandler:function(t){var e=this.options,i=this.active,s=T(t.currentTarget).closest("li"),n=s[0]===i[0],o=n&&e.collapsible,r=o?T():this._getPanelForTab(s),a=i.length?this._getPanelForTab(i):T(),l={oldTab:i,oldPanel:a,newTab:o?T():s,newPanel:r};t.preventDefault(),s.hasClass("ui-state-disabled")||s.hasClass("ui-tabs-loading")||this.running||n&&!e.collapsible||!1===this._trigger("beforeActivate",t,l)||(e.active=!o&&this.tabs.index(s),this.active=n?T():s,this.xhr&&this.xhr.abort(),a.length||r.length||T.error("jQuery UI Tabs: Mismatching fragment identifier."),r.length&&this.load(this.tabs.index(s),t),this._toggle(t,l))},_toggle:function(t,e){var i=this,s=e.newPanel,n=e.oldPanel;function o(){i.running=!1,i._trigger("activate",t,e)}function r(){i._addClass(e.newTab.closest("li"),"ui-tabs-active","ui-state-active"),s.length&&i.options.show?i._show(s,i.options.show,o):(s.show(),o())}this.running=!0,n.length&&this.options.hide?this._hide(n,this.options.hide,function(){i._removeClass(e.oldTab.closest("li"),"ui-tabs-active","ui-state-active"),r()}):(this._removeClass(e.oldTab.closest("li"),"ui-tabs-active","ui-state-active"),n.hide(),r()),n.attr("aria-hidden","true"),e.oldTab.attr({"aria-selected":"false","aria-expanded":"false"}),s.length&&n.length?e.oldTab.attr("tabIndex",-1):s.length&&this.tabs.filter(function(){return 0===T(this).attr("tabIndex")}).attr("tabIndex",-1),s.attr("aria-hidden","false"),e.newTab.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0})},_activate:function(t){var e,i=this._findActive(t);i[0]!==this.active[0]&&(i.length||(i=this.active),e=i.find(".ui-tabs-anchor")[0],this._eventHandler({target:e,currentTarget:e,preventDefault:T.noop}))},_findActive:function(t){return!1===t?T():this.tabs.eq(t)},_getIndex:function(t){return"string"==typeof t&&(t=this.anchors.index(this.anchors.filter("[href$='"+T.ui.escapeSelector(t)+"']"))),t},_destroy:function(){this.xhr&&this.xhr.abort(),this.tablist.removeAttr("role").off(this.eventNamespace),this.anchors.removeAttr("role tabIndex").removeUniqueId(),this.tabs.add(this.panels).each(function(){T.data(this,"ui-tabs-destroy")?T(this).remove():T(this).removeAttr("role tabIndex aria-live aria-busy aria-selected aria-labelledby aria-hidden aria-expanded")}),this.tabs.each(function(){var t=T(this),e=t.data("ui-tabs-aria-controls");e?t.attr("aria-controls",e).removeData("ui-tabs-aria-controls"):t.removeAttr("aria-controls")}),this.panels.show(),"content"!==this.options.heightStyle&&this.panels.css("height","")},enable:function(i){var t=this.options.disabled;!1!==t&&(t=void 0!==i&&(i=this._getIndex(i),T.isArray(t)?T.map(t,function(t){return t!==i?t:null}):T.map(this.tabs,function(t,e){return e!==i?e:null})),this._setOptionDisabled(t))},disable:function(t){var e=this.options.disabled;if(!0!==e){if(void 0===t)e=!0;else{if(t=this._getIndex(t),-1!==T.inArray(t,e))return;e=T.isArray(e)?T.merge([t],e).sort():[t]}this._setOptionDisabled(e)}},load:function(t,s){t=this._getIndex(t);var n=this,i=this.tabs.eq(t),e=i.find(".ui-tabs-anchor"),o=this._getPanelForTab(i),r={tab:i,panel:o},a=function(t,e){"abort"===e&&n.panels.stop(!1,!0),n._removeClass(i,"ui-tabs-loading"),o.removeAttr("aria-busy"),t===n.xhr&&delete n.xhr};this._isLocal(e[0])||(this.xhr=T.ajax(this._ajaxSettings(e,s,r)),this.xhr&&"canceled"!==this.xhr.statusText&&(this._addClass(i,"ui-tabs-loading"),o.attr("aria-busy","true"),this.xhr.done(function(t,e,i){setTimeout(function(){o.html(t),n._trigger("load",s,r),a(i,e)},1)}).fail(function(t,e){setTimeout(function(){a(t,e)},1)})))},_ajaxSettings:function(t,i,s){var n=this;return{url:t.attr("href").replace(/#.*$/,""),beforeSend:function(t,e){return n._trigger("beforeLoad",i,T.extend({jqXHR:t,ajaxSettings:e},s))}}},_getPanelForTab:function(t){var e=T(t).attr("aria-controls");return this.element.find(this._sanitizeSelector("#"+e))}}),!1!==T.uiBackCompat&&T.widget("ui.tabs",T.ui.tabs,{_processTabs:function(){this._superApply(arguments),this._addClass(this.tabs,"ui-tab")}});T.ui.tabs;T.widget("ui.tooltip",{version:"1.12.1",options:{classes:{"ui-tooltip":"ui-corner-all ui-widget-shadow"},content:function(){var t=T(this).attr("title")||"";return T("<a>").text(t).html()},hide:!0,items:"[title]:not([disabled])",position:{my:"left top+15",at:"left bottom",collision:"flipfit flip"},show:!0,track:!1,close:null,open:null},_addDescribedBy:function(t,e){var i=(t.attr("aria-describedby")||"").split(/\s+/);i.push(e),t.data("ui-tooltip-id",e).attr("aria-describedby",T.trim(i.join(" ")))},_removeDescribedBy:function(t){var e=t.data("ui-tooltip-id"),i=(t.attr("aria-describedby")||"").split(/\s+/),s=T.inArray(e,i);-1!==s&&i.splice(s,1),t.removeData("ui-tooltip-id"),(i=T.trim(i.join(" ")))?t.attr("aria-describedby",i):t.removeAttr("aria-describedby")},_create:function(){this._on({mouseover:"open",focusin:"open"}),this.tooltips={},this.parents={},this.liveRegion=T("<div>").attr({role:"log","aria-live":"assertive","aria-relevant":"additions"}).appendTo(this.document[0].body),this._addClass(this.liveRegion,null,"ui-helper-hidden-accessible"),this.disabledTitles=T([])},_setOption:function(t,e){var i=this;this._super(t,e),"content"===t&&T.each(this.tooltips,function(t,e){i._updateContent(e.element)})},_setOptionDisabled:function(t){this[t?"_disable":"_enable"]()},_disable:function(){var s=this;T.each(this.tooltips,function(t,e){var i=T.Event("blur");i.target=i.currentTarget=e.element[0],s.close(i,!0)}),this.disabledTitles=this.disabledTitles.add(this.element.find(this.options.items).addBack().filter(function(){var t=T(this);if(t.is("[title]"))return t.data("ui-tooltip-title",t.attr("title")).removeAttr("title")}))},_enable:function(){this.disabledTitles.each(function(){var t=T(this);t.data("ui-tooltip-title")&&t.attr("title",t.data("ui-tooltip-title"))}),this.disabledTitles=T([])},open:function(t){var i=this,e=T(t?t.target:this.element).closest(this.options.items);e.length&&!e.data("ui-tooltip-id")&&(e.attr("title")&&e.data("ui-tooltip-title",e.attr("title")),e.data("ui-tooltip-open",!0),t&&"mouseover"===t.type&&e.parents().each(function(){var t,e=T(this);e.data("ui-tooltip-open")&&((t=T.Event("blur")).target=t.currentTarget=this,i.close(t,!0)),e.attr("title")&&(e.uniqueId(),i.parents[this.id]={element:this,title:e.attr("title")},e.attr("title",""))}),this._registerCloseHandlers(t,e),this._updateContent(e,t))},_updateContent:function(e,i){var t,s=this.options.content,n=this,o=i?i.type:null;if("string"==typeof s||s.nodeType||s.jquery)return this._open(i,e,s);(t=s.call(e[0],function(t){n._delay(function(){e.data("ui-tooltip-open")&&(i&&(i.type=o),this._open(i,e,t))})}))&&this._open(i,e,t)},_open:function(t,e,i){var s,n,o,r,a=T.extend({},this.options.position);function l(t){a.of=t,n.is(":hidden")||n.position(a)}i&&((s=this._find(e))?s.tooltip.find(".ui-tooltip-content").html(i):(e.is("[title]")&&(t&&"mouseover"===t.type?e.attr("title",""):e.removeAttr("title")),s=this._tooltip(e),n=s.tooltip,this._addDescribedBy(e,n.attr("id")),n.find(".ui-tooltip-content").html(i),this.liveRegion.children().hide(),(r=T("<div>").html(n.find(".ui-tooltip-content").html())).removeAttr("name").find("[name]").removeAttr("name"),r.removeAttr("id").find("[id]").removeAttr("id"),r.appendTo(this.liveRegion),this.options.track&&t&&/^mouse/.test(t.type)?(this._on(this.document,{mousemove:l}),l(t)):n.position(T.extend({of:e},this.options.position)),n.hide(),this._show(n,this.options.show),this.options.track&&this.options.show&&this.options.show.delay&&(o=this.delayedShow=setInterval(function(){n.is(":visible")&&(l(a.of),clearInterval(o))},T.fx.interval)),this._trigger("open",t,{tooltip:n})))},_registerCloseHandlers:function(t,i){var e={keyup:function(t){if(t.keyCode===T.ui.keyCode.ESCAPE){var e=T.Event(t);e.currentTarget=i[0],this.close(e,!0)}}};i[0]!==this.element[0]&&(e.remove=function(){this._removeTooltip(this._find(i).tooltip)}),t&&"mouseover"!==t.type||(e.mouseleave="close"),t&&"focusin"!==t.type||(e.focusout="close"),this._on(!0,i,e)},close:function(t){var e,i=this,s=T(t?t.currentTarget:this.element),n=this._find(s);n?(e=n.tooltip,n.closing||(clearInterval(this.delayedShow),s.data("ui-tooltip-title")&&!s.attr("title")&&s.attr("title",s.data("ui-tooltip-title")),this._removeDescribedBy(s),n.hiding=!0,e.stop(!0),this._hide(e,this.options.hide,function(){i._removeTooltip(T(this))}),s.removeData("ui-tooltip-open"),this._off(s,"mouseleave focusout keyup"),s[0]!==this.element[0]&&this._off(s,"remove"),this._off(this.document,"mousemove"),t&&"mouseleave"===t.type&&T.each(this.parents,function(t,e){T(e.element).attr("title",e.title),delete i.parents[t]}),n.closing=!0,this._trigger("close",t,{tooltip:e}),n.hiding||(n.closing=!1))):s.removeData("ui-tooltip-open")},_tooltip:function(t){var e=T("<div>").attr("role","tooltip"),i=T("<div>").appendTo(e),s=e.uniqueId().attr("id");return this._addClass(i,"ui-tooltip-content"),this._addClass(e,"ui-tooltip","ui-widget ui-widget-content"),e.appendTo(this._appendTo(t)),this.tooltips[s]={element:t,tooltip:e}},_find:function(t){var e=t.data("ui-tooltip-id");return e?this.tooltips[e]:null},_removeTooltip:function(t){t.remove(),delete this.tooltips[t.attr("id")]},_appendTo:function(t){var e=t.closest(".ui-front, dialog");return e.length||(e=this.document[0].body),e},_destroy:function(){var n=this;T.each(this.tooltips,function(t,e){var i=T.Event("blur"),s=e.element;i.target=i.currentTarget=s[0],n.close(i,!0),T("#"+t).remove(),s.data("ui-tooltip-title")&&(s.attr("title")||s.attr("title",s.data("ui-tooltip-title")),s.removeData("ui-tooltip-title"))}),this.liveRegion.remove()}}),!1!==T.uiBackCompat&&T.widget("ui.tooltip",T.ui.tooltip,{options:{tooltipClass:null},_tooltip:function(){var t=this._superApply(arguments);return this.options.tooltipClass&&t.tooltip.addClass(this.options.tooltipClass),t}});T.ui.tooltip});var Fort={clean:function(){for(var t=document.querySelectorAll(".form"),e=t.length;e--;){var i=t[e].querySelectorAll("input, textarea, select");Array.prototype.forEach.call(i,function(t){0!=t.value.length&&(t.classList?t.classList.add("ignore"):t.className+=" ignore")});var s=t[e].querySelectorAll("input[type=hidden]");Array.prototype.forEach.call(s,function(t){t.classList?t.classList.add("ignore"):t.className+=" ignore"})}},solid:function(a){function t(t){for(var e=[],i=l.length;i--;)l[i].value.length||e.push(l[i]);for(var s=e.length,n=l.length,o=document.querySelectorAll(".top-one"),r=o.length;r--;)o[r].style.width=100-s/n*100+"%";document.getElementById("top1").style.background=a}Fort.clean(),document.body.innerHTML='<div class="top-one" id="top1"><div class="colors"></div></div>'+document.body.innerHTML;for(var e=document.querySelectorAll(".form"),l=[],i=e.length;i--;)for(var s=e[i].querySelectorAll("input, textarea, select"),n=s.length;n--;){classes=s[n].className.replace(/\s+/g," ").split(" "),ignore=!1;for(var o=classes.length;o--;)if("ignore"==classes[o]){ignore=!0;break}"button"==s[n].type||"submit"==s[n].type||ignore||(l.push(s[n]),s[n].addEventListener("input",t,!1))}},gradient:function(l,h){function t(t){for(var e=[],i=u.length;i--;)u[i].value.length||e.push(u[i]);for(var s=e.length,n=u.length,o=document.querySelectorAll(".top-one"),r=o.length;r--;)o[r].style.width=100-s/n*100+"%";orientation="to right";var a="linear-gradient("+orientation+", "+l+", "+h+")";document.getElementById("top1").style.background=a}Fort.clean(),document.body.innerHTML='<div class="top-one" id="top1"><div class="colors"></div></div>'+document.body.innerHTML;for(var e=document.querySelectorAll(".form"),u=[],i=e.length;i--;)for(var s=e[i].querySelectorAll("input, textarea, select"),n=s.length;n--;){classes=s[n].className.replace(/\s+/g," ").split(" "),ignore=!1;for(var o=classes.length;o--;)if("ignore"==classes[o]){ignore=!0;break}"button"==s[n].type||"submit"==s[n].type||ignore||(u.push(s[n]),s[n].addEventListener("input",t,!1))}},sections:function(){Fort.clean();for(var n=0;n<arguments.length;++n)var t=Array.prototype.slice.call(arguments);function e(t){for(var e=[],i=a.length;i--;)a[i].value.length||e.push(a[i]);for(var s=e.length,n=a.length,o=document.querySelectorAll(".top-one"),r=o.length;r--;)o[r].style.width=100-s/n*100+"%"}document.getElementById("t1").innerHTML='<div class="top-one" id="top1"><div class="colors"></div></div>';var i=document.querySelectorAll(".form"),a=[];for(n=i.length;n--;)for(var s=i[n].querySelectorAll("input, textarea, select"),o=s.length;o--;){classes=s[o].className.replace(/\s+/g," ").split(" "),ignore=!1;for(var r=classes.length;r--;)if("ignore"==classes[r]){ignore=!0;break}"button"==s[o].type||"submit"==s[o].type||ignore||(a.push(s[o]),s[o].addEventListener("input",e,!1))}document.getElementsByClassName("top-one").innerHTML='<div class="colors"></div>',document.querySelector(".colors").style.background=function(t){var e,i=t.length;for(e=0;e<i;e++)t[e]=t[e].join(" ");return"linear-gradient( to left, "+t.join(", ")+")"}(function(t){var e=[],i=0;for(n=0;n<2*t.length;n++){n%2&&i++;var s=Math.floor(1e3*i/t.length)/10;e.push([t[n-i],s+"%"])}return e}(t.sort()));var l=document.querySelector(".colors")+"px";document.querySelector(".colors").style.width=l},flash:function(){Fort.clean();for(var t=0;t<arguments.length;++t)arguments.length,arguments[t];var a=Array.prototype.slice.call(arguments).sort();function e(t){for(var e=[],i=l.length;i--;)l[i].value.length||e.push(l[i]);for(var s=e.length,n=l.length,o=document.querySelectorAll(".top-one"),r=o.length;r--;)o[r].style.width=100-s/n*100+"%",o[r].style.background=a[n-s-1]}document.body.innerHTML='<div class="top-one" id="top1"><div class="colors"></div></div>'+document.body.innerHTML;var i=document.querySelectorAll(".form"),l=[];for(t=i.length;t--;)for(var s=i[t].querySelectorAll("input, textarea, select"),n=s.length;n--;){classes=s[n].className.replace(/\s+/g," ").split(" "),ignore=!1;for(var o=classes.length;o--;)if("ignore"==classes[o]){ignore=!0;break}"button"==s[n].type||"submit"==s[n].type||ignore||(l.push(s[n]),s[n].addEventListener("input",e,!1))}},merge:function(l){function t(t){for(var e=[],i=h.length;i--;)h[i].value.length||e.push(h[i]);for(var s=e.length,n=h.length,o=(a=document.querySelectorAll("#top1")).length;o--;){precalct=100-s/n*100;var r=precalct/2;a[o].style.width=r+"%"}var a;for(s=e.length,n=h.length,o=(a=document.querySelectorAll("#top2")).length;o--;){precalct=100-s/n*100;r=precalct/2;a[o].style.width=r+"%"}document.getElementById("top1").style.background=l,document.getElementById("top2").style.background=l}Fort.clean(),document.body.innerHTML='<div class="top-one" id="top1"><div class="colors"></div></div>'+document.body.innerHTML;for(var e=document.querySelectorAll(".form"),h=[],i=e.length;i--;)for(var s=e[i].querySelectorAll("input, textarea, select"),n=s.length;n--;){classes=s[n].className.replace(/\s+/g," ").split(" "),ignore=!1;for(var o=classes.length;o--;)if("ignore"==classes[o]){ignore=!0;break}"button"==s[n].type||"submit"==s[n].type||ignore||(h.push(s[n]),s[n].addEventListener("input",t,!1))}},config:function(t){var e=document.querySelector("#top1"),i=document.querySelector("#top2")||{style:{}};t.height&&(e.style.height=t.height,i.style.height=t.height),t.alignment&&("top"===t.alignment?(e.style.top=0,e.style.bottom="auto",i.style.top=0,i.style.bottom="auto"):(e.style.top="auto",e.style.bottom=0,i.style.top="auto",i.style.bottom=0)),t.duration&&(e.style.transitionDuration=t.duration,i.style.transitionDuration=t.duration)}};$(document).ready(function(){$(document).on("input","#val",function(){this.value=this.value.replace(/\D/g,"")}),Fort.sections("#023102","#2b982b","#75ee75"),$("#progress").progressbar({value:0}),$(".but").click(function(t){var e=parseInt($("#val").val());$("#progress").progressbar("option","value",e),console.log(e)}),$(".butMain").click(function(){console.log("click"),window.location="https://www.work.ua/resumes/4941232/"})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
